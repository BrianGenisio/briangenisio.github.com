<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.1.3" created="2016-04-05 19:24" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Brian Genisio&#039;s House of Bilz</title>
	<link>http://houseofbilz.com</link>
	<description>Func&#60;E&#62; Thoughts on Software</description>
	<pubDate>Tue, 05 Apr 2016 19:24:43 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://houseofbilz.com</wp:base_site_url>
	<wp:base_blog_url>http://houseofbilz.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>HouseOfBilz</wp:author_login><wp:author_email>BrianGenisio@Gmail.com</wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>actionlinq</wp:tag_slug><wp:tag_name><![CDATA[ActionLinq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>actionscript</wp:tag_slug><wp:tag_name><![CDATA[ActionScript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>air</wp:tag_slug><wp:tag_name><![CDATA[Air]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>bdd</wp:tag_slug><wp:tag_name><![CDATA[BDD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[C#]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>career</wp:tag_slug><wp:tag_name><![CDATA[Career]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>codemash</wp:tag_slug><wp:tag_name><![CDATA[CodeMash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>coffeescript</wp:tag_slug><wp:tag_name><![CDATA[CoffeeScript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>cross-training</wp:tag_slug><wp:tag_name><![CDATA[Cross-Training]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>data-binding</wp:tag_slug><wp:tag_name><![CDATA[Data Binding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>development</wp:tag_slug><wp:tag_name><![CDATA[Development]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>flash</wp:tag_slug><wp:tag_name><![CDATA[Flash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>flash-builder</wp:tag_slug><wp:tag_name><![CDATA[Flash Builder]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>flex</wp:tag_slug><wp:tag_name><![CDATA[Flex]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>future</wp:tag_slug><wp:tag_name><![CDATA[Future]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>heroku</wp:tag_slug><wp:tag_name><![CDATA[Heroku]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>html5</wp:tag_slug><wp:tag_name><![CDATA[HTML5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>jam</wp:tag_slug><wp:tag_name><![CDATA[Jam]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>jasmine</wp:tag_slug><wp:tag_name><![CDATA[jasmine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[Javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>linq</wp:tag_slug><wp:tag_name><![CDATA[Linq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>mobile</wp:tag_slug><wp:tag_name><![CDATA[Mobile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>mvvm</wp:tag_slug><wp:tag_name><![CDATA[MVVM]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>mxml</wp:tag_slug><wp:tag_name><![CDATA[MXML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>navigation</wp:tag_slug><wp:tag_name><![CDATA[Navigation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>node-js</wp:tag_slug><wp:tag_name><![CDATA[Node.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>parse-com</wp:tag_slug><wp:tag_name><![CDATA[Parse.com]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>patterns</wp:tag_slug><wp:tag_name><![CDATA[Patterns]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>platform</wp:tag_slug><wp:tag_name><![CDATA[Platform]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>presentation-model</wp:tag_slug><wp:tag_name><![CDATA[Presentation Model]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>prism</wp:tag_slug><wp:tag_name><![CDATA[Prism]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>ria</wp:tag_slug><wp:tag_name><![CDATA[RIA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[Ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>silverlight</wp:tag_slug><wp:tag_name><![CDATA[Silverlight]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>silverlightning-talks</wp:tag_slug><wp:tag_name><![CDATA[Silverlightning Talks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>technology</wp:tag_slug><wp:tag_name><![CDATA[Technology]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>testing-jasmine-flex-bdd</wp:tag_slug><wp:tag_name><![CDATA[testing jasmine flex bdd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>view-model-support</wp:tag_slug><wp:tag_name><![CDATA[VIew Model Support]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>viewmodel-support</wp:tag_slug><wp:tag_name><![CDATA[ViewModel Support]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>web</wp:tag_slug><wp:tag_name><![CDATA[Web]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>wpf</wp:tag_slug><wp:tag_name><![CDATA[WPF]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>xaml</wp:tag_slug><wp:tag_name><![CDATA[XAML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>xml</wp:tag_slug><wp:tag_name><![CDATA[XML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>yaml</wp:tag_slug><wp:tag_name><![CDATA[YAML]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.1.3</generator>

	<item>
		<title>Bob1</title>
		<link>http://houseofbilz.com/?attachment_id=4</link>
		<pubDate>Mon, 29 Mar 2010 14:39:55 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/wp-content/uploads/2010/03/Bob1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date>2010-03-29 14:39:55</wp:post_date>
		<wp:post_date_gmt>2010-03-29 14:39:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bob1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.net/wp-content/uploads/2010/03/Bob1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/03/Bob1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"150";s:6:"height";s:3:"150";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:16:"2010/03/Bob1.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CodeMashSessions.Calendar.png</title>
		<link>http://houseofbilz.com/archives/2010/01/11/adventures-in-mvvm-codemash-schedule-application/codemashsessions-calendar-png/</link>
		<pubDate>Thu, 27 May 2010 01:56:27 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Calendar.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2010-05-27 01:56:27</wp:post_date>
		<wp:post_date_gmt>2010-05-27 01:56:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>codemashsessions-calendar-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>86</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Calendar.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"413";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:37:"2010/05/CodeMashSessions.Calendar.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"CodeMashSessions.Calendar-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"CodeMashSessions.Calendar-300x193.png";s:5:"width";s:3:"300";s:6:"height";s:3:"193";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/05/CodeMashSessions.Calendar.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CodeMashSessions.Calendar_thumb.png</title>
		<link>http://houseofbilz.com/archives/2010/01/11/adventures-in-mvvm-codemash-schedule-application/codemashsessions-calendar_thumb-png/</link>
		<pubDate>Thu, 27 May 2010 01:56:31 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Calendar_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2010-05-27 01:56:31</wp:post_date>
		<wp:post_date_gmt>2010-05-27 01:56:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>codemashsessions-calendar_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>86</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Calendar_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/05/CodeMashSessions.Calendar_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"442";s:6:"height";s:3:"287";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:43:"2010/05/CodeMashSessions.Calendar_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"CodeMashSessions.Calendar_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"CodeMashSessions.Calendar_thumb-300x194.png";s:5:"width";s:3:"300";s:6:"height";s:3:"194";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CodeMashSessions.Sessions.png</title>
		<link>http://houseofbilz.com/archives/2010/01/11/adventures-in-mvvm-codemash-schedule-application/codemashsessions-sessions-png/</link>
		<pubDate>Thu, 27 May 2010 01:56:35 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Sessions.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2010-05-27 01:56:35</wp:post_date>
		<wp:post_date_gmt>2010-05-27 01:56:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>codemashsessions-sessions-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>86</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Sessions.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/05/CodeMashSessions.Sessions.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"413";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:37:"2010/05/CodeMashSessions.Sessions.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"CodeMashSessions.Sessions-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"CodeMashSessions.Sessions-300x193.png";s:5:"width";s:3:"300";s:6:"height";s:3:"193";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CodeMashSessions.Sessions_thumb.png</title>
		<link>http://houseofbilz.com/archives/2010/01/11/adventures-in-mvvm-codemash-schedule-application/codemashsessions-sessions_thumb-png/</link>
		<pubDate>Thu, 27 May 2010 01:56:40 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Sessions_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2010-05-27 01:56:40</wp:post_date>
		<wp:post_date_gmt>2010-05-27 01:56:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>codemashsessions-sessions_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>86</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Sessions_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/05/CodeMashSessions.Sessions_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"436";s:6:"height";s:3:"283";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:43:"2010/05/CodeMashSessions.Sessions_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"CodeMashSessions.Sessions_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"CodeMashSessions.Sessions_thumb-300x194.png";s:5:"width";s:3:"300";s:6:"height";s:3:"194";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RubyMVVM_Twitter.png</title>
		<link>http://houseofbilz.com/archives/2010/09/26/adventures-in-ruby-mvvm-wrapping-it-up/rubymvvm_twitter-png/</link>
		<pubDate>Sun, 26 Sep 2010 00:52:14 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/09/RubyMVVM_Twitter.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2010-09-26 00:52:14</wp:post_date>
		<wp:post_date_gmt>2010-09-26 00:52:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubymvvm_twitter-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>153</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/09/RubyMVVM_Twitter.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/RubyMVVM_Twitter.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"429";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:28:"2010/09/RubyMVVM_Twitter.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"RubyMVVM_Twitter-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"RubyMVVM_Twitter-300x201.png";s:5:"width";s:3:"300";s:6:"height";s:3:"201";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RubyMVVM_Twitter_thumb.png</title>
		<link>http://houseofbilz.com/archives/2010/09/26/adventures-in-ruby-mvvm-wrapping-it-up/rubymvvm_twitter_thumb-png/</link>
		<pubDate>Sun, 26 Sep 2010 00:52:23 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/09/RubyMVVM_Twitter_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2010-09-26 00:52:23</wp:post_date>
		<wp:post_date_gmt>2010-09-26 00:52:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubymvvm_twitter_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>153</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/09/RubyMVVM_Twitter_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/RubyMVVM_Twitter_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"618";s:6:"height";s:3:"416";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:34:"2010/09/RubyMVVM_Twitter_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"RubyMVVM_Twitter_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"RubyMVVM_Twitter_thumb-300x201.png";s:5:"width";s:3:"300";s:6:"height";s:3:"201";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image-png/</link>
		<pubDate>Mon, 08 Nov 2010 04:02:45 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2010-11-08 04:02:45</wp:post_date>
		<wp:post_date_gmt>2010-11-08 04:02:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"302";s:6:"height";s:2:"38";s:14:"hwstring_small";s:23:"height='16' width='128'";s:4:"file";s:17:"2010/11/image.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"image-150x38.png";s:5:"width";s:3:"150";s:6:"height";s:2:"38";}s:6:"medium";a:3:{s:4:"file";s:16:"image-300x37.png";s:5:"width";s:3:"300";s:6:"height";s:2:"37";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image_thumb.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image_thumb-png/</link>
		<pubDate>Mon, 08 Nov 2010 04:02:46 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2010-11-08 04:02:46</wp:post_date>
		<wp:post_date_gmt>2010-11-08 04:02:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"244";s:6:"height";s:2:"34";s:14:"hwstring_small";s:23:"height='17' width='128'";s:4:"file";s:23:"2010/11/image_thumb.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"image_thumb-150x34.png";s:5:"width";s:3:"150";s:6:"height";s:2:"34";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Untitled.gif</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/untitled-gif/</link>
		<pubDate>Tue, 09 Nov 2010 03:22:29 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/Untitled.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2010-11-09 03:22:29</wp:post_date>
		<wp:post_date_gmt>2010-11-09 03:22:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>untitled-gif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/Untitled.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/Untitled.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"216";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:20:"2010/11/Untitled.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"Untitled-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"Untitled-300x101.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Untitled_thumb.gif</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/untitled_thumb-gif/</link>
		<pubDate>Tue, 09 Nov 2010 03:22:31 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/Untitled_thumb.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2010-11-09 03:22:31</wp:post_date>
		<wp:post_date_gmt>2010-11-09 03:22:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>untitled_thumb-gif</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/Untitled_thumb.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/Untitled_thumb.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"926";s:6:"height";s:3:"313";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:26:"2010/11/Untitled_thumb.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"Untitled_thumb-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"Untitled_thumb-300x101.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image-png-2/</link>
		<pubDate>Tue, 09 Nov 2010 03:22:32 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2010-11-09 03:22:32</wp:post_date>
		<wp:post_date_gmt>2010-11-09 03:22:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-png-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"303";s:6:"height";s:2:"41";s:14:"hwstring_small";s:23:"height='17' width='128'";s:4:"file";s:18:"2010/11/image1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image1-150x41.png";s:5:"width";s:3:"150";s:6:"height";s:2:"41";}s:6:"medium";a:3:{s:4:"file";s:17:"image1-300x40.png";s:5:"width";s:3:"300";s:6:"height";s:2:"40";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image_thumb.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image_thumb-png-2/</link>
		<pubDate>Tue, 09 Nov 2010 03:22:33 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2010-11-09 03:22:33</wp:post_date>
		<wp:post_date_gmt>2010-11-09 03:22:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image_thumb-png-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image_thumb1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"244";s:6:"height";s:2:"36";s:14:"hwstring_small";s:23:"height='18' width='128'";s:4:"file";s:24:"2010/11/image_thumb1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb1-150x36.png";s:5:"width";s:3:"150";s:6:"height";s:2:"36";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image-png-3/</link>
		<pubDate>Fri, 12 Nov 2010 19:54:52 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2010-11-12 19:54:52</wp:post_date>
		<wp:post_date_gmt>2010-11-12 19:54:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-png-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"375";s:6:"height";s:2:"46";s:14:"hwstring_small";s:23:"height='15' width='128'";s:4:"file";s:18:"2010/11/image2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image2-150x46.png";s:5:"width";s:3:"150";s:6:"height";s:2:"46";}s:6:"medium";a:3:{s:4:"file";s:17:"image2-300x36.png";s:5:"width";s:3:"300";s:6:"height";s:2:"36";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image_thumb.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image_thumb-png-3/</link>
		<pubDate>Fri, 12 Nov 2010 19:54:52 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2010-11-12 19:54:52</wp:post_date>
		<wp:post_date_gmt>2010-11-12 19:54:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image_thumb-png-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image_thumb2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"268";s:6:"height";s:2:"36";s:14:"hwstring_small";s:23:"height='17' width='128'";s:4:"file";s:24:"2010/11/image_thumb2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb2-150x36.png";s:5:"width";s:3:"150";s:6:"height";s:2:"36";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image-png-4/</link>
		<pubDate>Fri, 12 Nov 2010 19:54:53 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2010-11-12 19:54:53</wp:post_date>
		<wp:post_date_gmt>2010-11-12 19:54:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-png-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"379";s:6:"height";s:2:"40";s:14:"hwstring_small";s:23:"height='13' width='128'";s:4:"file";s:18:"2010/11/image3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image3-150x40.png";s:5:"width";s:3:"150";s:6:"height";s:2:"40";}s:6:"medium";a:3:{s:4:"file";s:17:"image3-300x31.png";s:5:"width";s:3:"300";s:6:"height";s:2:"31";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image_thumb.png</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/image_thumb-png-4/</link>
		<pubDate>Fri, 12 Nov 2010 19:54:54 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2010-11-12 19:54:54</wp:post_date>
		<wp:post_date_gmt>2010-11-12 19:54:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image_thumb-png-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image_thumb3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"304";s:6:"height";s:2:"35";s:14:"hwstring_small";s:23:"height='14' width='128'";s:4:"file";s:24:"2010/11/image_thumb3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb3-150x35.png";s:5:"width";s:3:"150";s:6:"height";s:2:"35";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb3-300x34.png";s:5:"width";s:3:"300";s:6:"height";s:2:"34";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>wlEmoticon-smile.png</title>
		<link>http://houseofbilz.com/archives/2010/12/17/cross-training-in-silverlight-flex-cclr-vs-actionscript3avm-part-1/wlemoticon-smile-png/</link>
		<pubDate>Fri, 17 Dec 2010 02:07:32 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/12/wlEmoticon-smile.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2010-12-17 02:07:32</wp:post_date>
		<wp:post_date_gmt>2010-12-17 02:07:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wlemoticon-smile-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>197</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/12/wlEmoticon-smile.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/12/wlEmoticon-smile.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"19";s:6:"height";s:2:"19";s:14:"hwstring_small";s:22:"height='19' width='19'";s:4:"file";s:28:"2010/12/wlEmoticon-smile.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SRT_logo</title>
		<link>http://houseofbilz.com/?attachment_id=235</link>
		<pubDate>Tue, 28 Dec 2010 01:53:44 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2010/12/SRT_logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2010-12-28 01:53:44</wp:post_date>
		<wp:post_date_gmt>2010-12-28 01:53:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>srt_logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2010/12/SRT_logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/12/SRT_logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"211";s:6:"height";s:2:"67";s:14:"hwstring_small";s:23:"height='40' width='128'";s:4:"file";s:20:"2010/12/SRT_logo.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"SRT_logo-150x67.png";s:5:"width";s:3:"150";s:6:"height";s:2:"67";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FlexJamBig.png</title>
		<link>http://houseofbilz.com/archives/2011/01/12/3-day-flex-jam-with-james-ward/flexjambig-png/</link>
		<pubDate>Wed, 12 Jan 2011 05:58:45 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/01/FlexJamBig.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2011-01-12 05:58:45</wp:post_date>
		<wp:post_date_gmt>2011-01-12 05:58:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flexjambig-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>256</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/01/FlexJamBig.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"217";s:14:"hwstring_small";s:23:"height='96' width='107'";s:4:"file";s:22:"2011/01/FlexJamBig.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"FlexJamBig-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/FlexJamBig.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About</title>
		<link>http://houseofbilz.com/about/</link>
		<pubDate>Mon, 29 Mar 2010 13:05:26 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[Brian Genisio is a passionate software  developer in       Ann Arbor, MI and an active member of the Michigan software community. For almost 15 years, Brian has worked with many languages and  technologies.       Currently, he is focusing on front-end development stacks, mostly JavaScript-based. He also  loves to       talk about testing philosophies and methodologies. He can talk  your       ear off. Just humor him. In his spare time, he enjoys being a  cooking       nerd which includes traditional barbecue, baking bread, brewing  beer       and making as much as he can from scratch.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2010-03-29 13:05:26</wp:post_date>
		<wp:post_date_gmt>2010-03-29 13:05:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28143</wp:comment_id>
			<wp:comment_author><![CDATA[att dish network Elk Grove, CA, California]]></wp:comment_author>
			<wp:comment_author_email>kennith_trundle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=nMQU5seMPg8</wp:comment_author_url>
			<wp:comment_author_IP>190.203.48.204</wp:comment_author_IP>
			<wp:comment_date>2014-07-31 17:19:45</wp:comment_date>
			<wp:comment_date_gmt>2014-07-31 17:19:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Howdy! I know this is kinda off topic but I'd figured I'd 
ask. Would you be interested in exchanging links or maybe guest writing a blog article or vice-versa?

My website goes over a lot of the same subjects as yours and I 
think we could greatly benefit from each other. If you are 
interested feel free to send me an email. I look forward to hearing from you!
Great blog by the way!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79104</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.beautyfairever.com/discussion-forum/topic/er-teilt-den-markt-und-es-wird-ein/]]></wp:comment_author>
			<wp:comment_author_email>enbucqsb@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.beautyfairever.com/discussion-forum/topic/er-teilt-den-markt-und-es-wird-ein/</wp:comment_author_url>
			<wp:comment_author_IP>27.151.99.29</wp:comment_author_IP>
			<wp:comment_date>2015-11-07 18:08:01</wp:comment_date>
			<wp:comment_date_gmt>2015-11-07 18:08:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I want to thnx for the efforts you have made in composing this blog post. I am hoping the same top-grade post from you in the future as well. In fact your creative writing skill has inspired me to start my own blog now. Truly the blogging is spreading its wings rapidly. Your write up is a good model of it.
http://www.beautyfairever.com/discussion-forum/topic/er-teilt-den-markt-und-es-wird-ein/ http://www.beautyfairever.com/discussion-forum/topic/er-teilt-den-markt-und-es-wird-ein/]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20792</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Wain]]></wp:comment_author>
			<wp:comment_author_email>wtkh@comcast.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.111.103.130</wp:comment_author_IP>
			<wp:comment_date>2013-07-30 10:26:01</wp:comment_date>
			<wp:comment_date_gmt>2013-07-30 10:26:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian:

In response to Kent Boogaart's article on "View Models: POCOs versus DependencyObjects " several years ago, you mentioned that "I also added a binder.HandleChange(source, "Prop1", (value) =&gt; DoSomething(value)) to avoid any switch statements that occur when listening to the property notify event."

I've recently met the similar problem that I submitted to StackOverFlow as follows:

By reading Eric Lippert’s Blog article: "What is the defining characteristic of a local variable?" http://blogs.msdn.com/b/ericlippert/archive/2012/01/16/what-is-the-defining-characteristic-of-a-local-variable.aspx I realized that the value of a local variable could be referenced afar and that avenue gave me hope to access the value of the variable, otherwise its "off-block" usefulness would have lost forever, even though its life-time can be exceedingly limited. 

Now here is my specific question: I have five RadioButtons whose clicking event is monitored by the event handler:
public void OnClick(object sender, RoutedEventArgs e)

{
   RadioButton rb = sender as RadioButton;
    if (rb.IsChecked.Value)
        switch (rb.Name.ToString())
        {
            case "Rb0": Index = 0;...
                break;
            case "Rb1": Index = 1;...
                break;
            case "Rb2": Index = 2;...
                break;
            case "Rb3": Index = 3;...
                break;
            case "Rb4": Index = 4;...
                break;
            default: break; 
            } 

    }...

Inside the switch block the Index varies and works according to the clicking operation of each RB, properly. Outside of the block the Index value is inaccessible as it should be by MS' C# compiler design. But, alas, it is the external accessibility of the value of the "clicked-on" Index that is the most pivotal feature of the application that I am working on. I am in a predicament of not being able to get the Index value out of the switch block and the application is in danger of total failure. Any help on its solution will be appreciated and thanks in advance. Mark

edited Jul 26 at 12:43 


Tanner
2,773722 
 

asked Jul 26 at 12:42 by user2622452

The property Index belongs to which control? This looks to me like the class that defines the OnClick function has an Index member and that gets filled, this is not a local variable – Schwarzie2478 Jul 26 at 13:00 

 
Thanks for your reply. The Index and its value were assigned by me and not defined by the control or the class. The variable Index is used for the purpose of distinguishing the individuality and identification of the RadioButtons, each of which is associated with distinguished character. – user2622452 Jul 26 at 19:38  

 
Someone said declaration of static variable in App.xaml.cs, then it can be referenced anywhere. I've tried. Result shows that he was wrong. Recue of the local variable from being trapped in its block remains elusive.(stackoverflow.com/questions/910421/…) – user2622452 Jul 27 at 1:11"

I'm new to WPF and I'd like to ask you for help. What can be considered to be a correct approach to avoid this kind of problems? Will you be kind enough to send me the binder.HandleChange of yours, if you consider it may help me solving the problem.  

Thanks in advance.

Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79826</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.springboardsquare.com/forum/topic/7224]]></wp:comment_author>
			<wp:comment_author_email>kkvvynkr@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.springboardsquare.com/forum/topic/7224</wp:comment_author_url>
			<wp:comment_author_IP>222.76.35.68</wp:comment_author_IP>
			<wp:comment_date>2015-12-14 18:00:57</wp:comment_date>
			<wp:comment_date_gmt>2015-12-14 18:00:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[decided almanac you chalk up
http://www.springboardsquare.com/forum/topic/7224 http://www.springboardsquare.com/forum/topic/7224]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77340</wp:comment_id>
			<wp:comment_author><![CDATA[http://freewaystomakemoneyonline.com/1/633/13692/index.html]]></wp:comment_author>
			<wp:comment_author_email>gluvqcwqqfk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://freewaystomakemoneyonline.com/1/633/13692/index.html</wp:comment_author_url>
			<wp:comment_author_IP>117.29.105.224</wp:comment_author_IP>
			<wp:comment_date>2015-10-23 21:14:46</wp:comment_date>
			<wp:comment_date_gmt>2015-10-23 21:14:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow! This could be 1 certain of the most beneficial blogs We have ever arrive across on this subject. Really Fantastic. I am also an expert in this topic so I can comprehend your hard work.
http://freewaystomakemoneyonline.com/1/633/13692/index.html http://freewaystomakemoneyonline.com/1/633/13692/index.html]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77341</wp:comment_id>
			<wp:comment_author><![CDATA[http://alohalockandkey.com/p/632/linglongsandayizhucesongqian/index.html]]></wp:comment_author>
			<wp:comment_author_email>ydowcif@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://alohalockandkey.com/p/632/linglongsandayizhucesongqian/index.html</wp:comment_author_url>
			<wp:comment_author_IP>117.29.105.224</wp:comment_author_IP>
			<wp:comment_date>2015-10-23 21:25:11</wp:comment_date>
			<wp:comment_date_gmt>2015-10-23 21:25:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I  as nicely  conceive so  , perfectly  indited post! .
http://alohalockandkey.com/p/632/linglongsandayizhucesongqian/index.html http://alohalockandkey.com/p/632/linglongsandayizhucesongqian/index.html]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23578</wp:comment_id>
			<wp:comment_author><![CDATA[windows 8 vpn setup]]></wp:comment_author>
			<wp:comment_author_email>BloomingdaleScoggan592@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.usajobwork.com/product/find-jobs-empolyer/</wp:comment_author_url>
			<wp:comment_author_IP>41.32.120.79</wp:comment_author_IP>
			<wp:comment_date>2014-03-03 08:49:20</wp:comment_date>
			<wp:comment_date_gmt>2014-03-03 08:49:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, You might have carried out a fantastic job. I most certainly will undoubtedly yahoo the idea and in my estimation recommend in order to my girlfriends. Now i am comfortable they'll be taken advantage of this web site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29287</wp:comment_id>
			<wp:comment_author><![CDATA[Alethea]]></wp:comment_author>
			<wp:comment_author_email>joancollazo@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://Arturo.about.com</wp:comment_author_url>
			<wp:comment_author_IP>111.10.156.13</wp:comment_author_IP>
			<wp:comment_date>2014-09-20 22:24:50</wp:comment_date>
			<wp:comment_date_gmt>2014-09-20 22:24:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I read a lot of interesting posts here. Probably 
you  spend a lot of time writing, i know how to save you a lot of work, there is an online tool that creates 
high quality, SEO friendly articles in minutes, just search in google  - laranitas 
free content source]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78654</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.dpmclimbing.com/climbing-photos/view/die-italienische-avio]]></wp:comment_author>
			<wp:comment_author_email>ctxqrsgtvlp@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dpmclimbing.com/climbing-photos/view/die-italienische-avio</wp:comment_author_url>
			<wp:comment_author_IP>120.36.66.205</wp:comment_author_IP>
			<wp:comment_date>2015-11-01 18:27:00</wp:comment_date>
			<wp:comment_date_gmt>2015-11-01 18:27:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am fascinated this informative post.  You can find so numerous points mentioned here I had never thought of before. You have made me realize there is a lot more than one strategy to  consider these points.
http://www.dpmclimbing.com/climbing-photos/view/die-italienische-avio http://www.dpmclimbing.com/climbing-photos/view/die-italienische-avio]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20652</wp:comment_id>
			<wp:comment_author><![CDATA[mike]]></wp:comment_author>
			<wp:comment_author_email>mike7@live.cn</wp:comment_author_email>
			<wp:comment_author_url>http://none</wp:comment_author_url>
			<wp:comment_author_IP>116.22.137.97</wp:comment_author_IP>
			<wp:comment_date>2013-07-22 02:27:33</wp:comment_date>
			<wp:comment_date_gmt>2013-07-22 02:27:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://stackoverflow.com/questions/10427518/adobe-record-sound-and-save

Hey ,i saw the answer you wrote before . Right now i have a problem with FLEX Mobile recording sound file and play back . And i try your method ,and it successed in record a  dat file ,but i can't load it back and play it back .

Please help me with it ,Thanks a lot .

and you can send me a email if you are ok .]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7718</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.14.36.209</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 11:33:34</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 11:33:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pat,

I think the best thing to do would be to have a light weight web service.  This service can be as simple as an XML file up on a server that you can update periodically.  The XML file would have all the data you need for the new pictures and captions, including links to the images.  Your app would periodically check the web-based XML file for changes and display the new content pragmatically.  That is a much better approach than packaging a new app every day.

Good luck,
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7716</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28061</wp:comment_id>
			<wp:comment_author><![CDATA[television service providers]]></wp:comment_author>
			<wp:comment_author_email>austinpadgett@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=yNrVDvuFQCg</wp:comment_author_url>
			<wp:comment_author_IP>187.108.223.204</wp:comment_author_IP>
			<wp:comment_date>2014-07-29 05:23:48</wp:comment_date>
			<wp:comment_date_gmt>2014-07-29 05:23:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey I know this is off topic but I was wondering 
if you knew of any widgets I could add to my blog that automatically tweet my newest twitter updates.

I've been looking for a plug-in like this for quite some 
time and was hoping maybe you would have some experience with something like this.
Please let me know if you run into anything. I truly enjoy reading your blog and I look forward to your new 
updates.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7413</wp:comment_id>
			<wp:comment_author><![CDATA[Oleg]]></wp:comment_author>
			<wp:comment_author_email>debugx@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.12.18.234</wp:comment_author_IP>
			<wp:comment_date>2011-04-15 12:13:56</wp:comment_date>
			<wp:comment_date_gmt>2011-04-15 12:13:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,
In regards to your answer in this topic http://stackoverflow.com/questions/1297643/sync-selecteditems-in-a-muliselect-listbox-with-a-collection-in-viewmodel/5676397
could please share a simple example with using a listbox and DependencyProperty? This code is not worked for me.
Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7716</wp:comment_id>
			<wp:comment_author><![CDATA[Pat Murphy]]></wp:comment_author>
			<wp:comment_author_email>pmurphy@detnews.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.204.25.20</wp:comment_author_IP>
			<wp:comment_date>2011-05-11 19:22:59</wp:comment_date>
			<wp:comment_date_gmt>2011-05-11 19:22:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I was in a group that spoke to you and listened to your discussion on Air for Android in February during MobiDevDay at Compuware. I was one of the people hanging out with Erik Daniel from Compuware and Chris Land from Landmine Design.
I have a question I was hoping you could help with. 
I'm getting started on an Flash-based App along with a work colleague who produces a feature for detnews.com. Link here: http://multimedia.detnews.com/pix/photogalleries/sportsgallery/sports2day/
He has the intellectual rights to produce this idea on his own. I'm adding the Flash-technical skill. We are planning an App that offers pictures with his humorous captions. 
This App, ideally, would be updated daily with new pictures and captions. My concern is a daily update isn't feasible considering Apple's approval schedule. 
Just curious if you have had any experience with updating Apps or if you have any general suggestions?
Thanks for any help you can offer]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37471</wp:comment_id>
			<wp:comment_author><![CDATA[David Freni]]></wp:comment_author>
			<wp:comment_author_email>david.freni@labur.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.88.194.129</wp:comment_author_IP>
			<wp:comment_date>2015-02-24 13:56:33</wp:comment_date>
			<wp:comment_date_gmt>2015-02-24 13:56:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,

I am sorry for commenting here on your website but I was looking for a way to contact you in regards to some Javascript Opportunities in Michigan. You obviously have an impressive career and I am looking for your help. With your background and skills, you are a great person to network with and I am hoping we can help each other out. 

Again sorry for posting this on your website.

Would love to hear back from you.

David.freni@labur.com
617-904-7950]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78905</wp:comment_id>
			<wp:comment_author><![CDATA[yahoo]]></wp:comment_author>
			<wp:comment_author_email>oaujlwdaqya@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://avonfabrics.com/salmon/blogspot12.php</wp:comment_author_url>
			<wp:comment_author_IP>162.247.239.234</wp:comment_author_IP>
			<wp:comment_date>2015-11-03 10:49:45</wp:comment_date>
			<wp:comment_date_gmt>2015-11-03 10:49:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm still learning from you, while I'm trying to reach my goals. I certainly love reading everything that is posted on your blog.Keep the posts coming. I loved it!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73917</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.zskbely.cz/]]></wp:comment_author>
			<wp:comment_author_email>bhyugfadnu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.zskbely.cz/</wp:comment_author_url>
			<wp:comment_author_IP>27.155.107.112</wp:comment_author_IP>
			<wp:comment_date>2015-09-28 17:52:32</wp:comment_date>
			<wp:comment_date_gmt>2015-09-28 17:52:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you  dearly  author  , I  located oneself  this web site  extremely  useful and its full of  excellent  healthy  selective data ! , I  as properly thank you for  the great  food strategy post.
http://www.zskbely.cz/ http://www.zskbely.cz/]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Speaker Resume</title>
		<link>http://houseofbilz.com/speaker-resume/</link>
		<pubDate>Fri, 28 May 2010 02:26:30 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/?page_id=98</guid>
		<description></description>
		<content:encoded><![CDATA[September 2008 -- <strong>Ann Arbor .Net Developers Group</strong> --  Castle  ActiveRecord
October 2008 -- <strong>Ann Arbor Day of .Net</strong> -- Testing  WinForms in .Net
November 2008 -- <strong>Greater Lansing User Group.Net</strong> --  Castle ActiveRecord
June 2009 -- <strong>Greater Lansing User Group.Net FLINT</strong> -- Introducing the MVVM Pattern
June 2009 -- <strong>Great Lakes Area .Net User Group</strong> -- Introducing the MVVM  Pattern
July 2009 -- <strong>Ann Arbor .Net Developers Group</strong> -- MVVM Grok  Talk
July 2009 --<strong> Codestock 2009</strong> -- Introducing the MVVM Pattern
August  2009 -- <strong>Lansing Day of .Net</strong> -- Getting started with Silverlight
August 2009 -- <strong>West Michigan .Net Users</strong> -- Introducing the MVVM Pattern
November  2009 -- <strong>Come Jam With Us</strong> -- Getting started with Silverlight
January  2010 -- <strong>CodeMash 2010</strong> -- Introducing the MVVM Pattern
March 2010 --  <strong>Come Jam With Us</strong> -- MVVM Jam Session
March 2010 -- <strong>Ann Arbor .Net Developers Group</strong> -- Introduction to Prism
April  2010 -- <strong>Grand Rapids Silverlight Firestarter</strong> -- Advanced topics in  Silverlight
May 2010 -- <strong>Ann Arbor Day of .Net</strong> -- Introduction to  Prism
November 2010 -- <strong>MI Silverlight Users Group</strong> -- Cross-Training in Silverlight &amp; Flex
January 2011 -- <strong>CodeMash 2011</strong> -- Every Thing You Always Wanted to Know About Flex * But Were Afraid to Ask
February 2011 -- <strong>MobiDevDay Detroit</strong> -- Mobile App Development with Air
February 2011 -- <strong>Flex Jam with James Ward</strong> -- Several assorted topics (short form)
April 2011 -- <strong>360Flex Unconference</strong> -- Cross-Training in Silverlight &amp; Flex
April 2011 -- <strong>West Michigan .Net Users Group</strong> -- Cross-Training in Silverlight &amp; Flex
May 2011 -- <strong>Stir Trek III</strong> -- Mobile App Development with Air
June 2011 -- <strong>Toledo .Net Users Group</strong> -- Cross-Training in Silverlight &amp; Flex
September 2012 -- <strong>Ann Arbor .Net Developers Group</strong> -- Cross-Platform Mobile Solutions
October 2012 -- <strong>Mobile Monday Ann Arbor</strong> -- Cross-Platform Mobile Solutions
January 2013 -- <strong>Codemash 2013</strong> -- Choose Your Own Application
January 2014 -- <strong>Codemash 2014</strong> -- Angular Directives: Demystified
March 2014 -- <strong>Columbus JavaScript User Group</strong> -- Amazing Visualizations with D3.js]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2010-05-28 02:26:30</wp:post_date>
		<wp:post_date_gmt>2010-05-28 02:26:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>speaker-resume</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Publications</title>
		<link>http://houseofbilz.com/media-appearances/</link>
		<pubDate>Fri, 11 Jun 2010 01:20:07 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/?page_id=107</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.code-magazine.com/Article.aspx?quickid=112051"><strong>CODE Magazine -- Post Mortem: Computerized Survey and Intervention Project</strong></a>

<strong><a href="http://www.code-magazine.com/Article.aspx?quickid=112051"><img class="alignnone size-medium wp-image-261" title="Code Magazine Article" src="http://houseofbilz.com/wp-content/uploads/2011/01/CODE_Mag-225x300.jpg" alt="" width="225" height="300" /></a></strong>

<img src="http://uxmag.com/sites/default/files/uxmag_logo.png" alt="UX Magazine Logo" />
<a href="http://uxmag.com/strategy/understanding-designer-developer-workflow"><strong>UX Magazine: Understanding Designer/Developer Workflow</strong></a>

<a href="http://technologyandfriends.com/SubText/archive/2013/01/15/tf248.aspx"><strong>Technology and Friends -- Episode 248 -- Dennis Burton and Brian Genisio on Choose Your Own Application</strong></a>

<iframe id="viddler-13023e2e" src="//www.viddler.com/embed/13023e2e/?f=1&offset=0&autoplay=0&secret=69245295&disablebranding=0&view_secret=69245295" width="545" height="349" frameborder="0" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>

<a><strong> </strong></a><strong><a></a><a href="http://technologyandfriends.com/archive/2010/03/29/tf079.aspx"><strong>Technology and Friends -- Episode 79 -- Brian Genisio on Prism</strong></a></strong>

<strong><object id="viddler" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="437" height="370" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="true" /><param name="flashvars" value="fake=1" /><param name="src" value="http://www.viddler.com/player/62e3dd09/" /><param name="name" value="viddler" /><param name="allowfullscreen" value="true" /><embed id="viddler" type="application/x-shockwave-flash" width="437" height="370" src="http://www.viddler.com/player/62e3dd09/" name="viddler" flashvars="fake=1" allowfullscreen="true" allowscriptaccess="always"></embed></object></strong>

<strong> </strong>

<strong><a href="http://technologyandfriends.com/archive/2009/07/15/tf034.aspx">Technology and Friends -- Episode 34: Brian Genisio on the MVVM Pattern</a></strong>

<object id="viddler" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="437" height="370" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="true" /><param name="flashvars" value="fake=1" /><param name="src" value="http://www.viddler.com/player/9acea31a/" /><param name="name" value="viddler" /><param name="allowfullscreen" value="true" /><embed id="viddler" type="application/x-shockwave-flash" width="437" height="370" src="http://www.viddler.com/player/9acea31a/" name="viddler" flashvars="fake=1" allowfullscreen="true" allowscriptaccess="always"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2010-06-11 01:20:07</wp:post_date>
		<wp:post_date_gmt>2010-06-11 01:20:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>media-appearances</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29269</wp:comment_id>
			<wp:comment_author><![CDATA[endubtefume]]></wp:comment_author>
			<wp:comment_author_email>yo3ewe33urmail@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://games-valley.ru/panzar-forged-by-chaos/</wp:comment_author_url>
			<wp:comment_author_IP>83.220.239.80</wp:comment_author_IP>
			<wp:comment_date>2014-09-20 09:44:14</wp:comment_date>
			<wp:comment_date_gmt>2014-09-20 09:44:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="http://games-valley.ru/panzar-forged-by-chaos/" / rel="nofollow">/</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33939</wp:comment_id>
			<wp:comment_author><![CDATA[Alosserten]]></wp:comment_author>
			<wp:comment_author_email>alos742@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://instruktsiya.info/</wp:comment_author_url>
			<wp:comment_author_IP>37.115.205.161</wp:comment_author_IP>
			<wp:comment_date>2014-12-29 18:12:14</wp:comment_date>
			<wp:comment_date_gmt>2014-12-29 18:12:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Всем привет! 
Извените за офтоп, нашел ресурс которым хочу поделиться. Бесплатные инструкци для електроники. 
Чтобы скачать или просмотреть<a href="http://instruktsiya.info/instrukciya-po-ekspluatacii" rel="nofollow"> инструкции по эксплуатации мобильных устройств</a> достаточно кликнуть по нужному вложению (отправлять смс или подтверждать ничего не нужно). 
Всем удачи!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23490</wp:comment_id>
			<wp:comment_author><![CDATA[siroxogin]]></wp:comment_author>
			<wp:comment_author_email>dimamarkod1978@mail.ru</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.78.184.56</wp:comment_author_IP>
			<wp:comment_date>2014-02-25 10:54:11</wp:comment_date>
			<wp:comment_date_gmt>2014-02-25 10:54:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="http://hotpornohub.com" rel="nofollow">Only the most porno hub videos that attired in b be committed to not appeared on the internet!</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Projects</title>
		<link>http://houseofbilz.com/projects/</link>
		<pubDate>Fri, 11 Jun 2010 01:25:18 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/?page_id=109</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://chooseyourownapplication.com">ChooseYourOwnApplication.com</a>-- 12 technologies. 22 distinct adventures. One application. You choose how to build it. We help you get there.

<a href="https://bitbucket.org/briangenisio/actionlinq">ActionLinq </a>-- A complete LINQ-to-Objects implementation for ActionScript 3.0 <img class="alignnone" title="ActionLinq logo" src="https://bitbucket-assetroot.s3.amazonaws.com/c/photos/2010/Dec/22/actionlinq-logo-1179906388-11_avatar.png" alt="" width="35" height="35" />

<a href="https://github.com/BrianGenisio/jasmine-flex/wiki">Jasmine-Flex</a> -- A BDD testing tool for ActionScript and Flex. <img class="alignnone" title="Jasmine" src="http://pivotal.github.com/jasmine/images/jasmine_logo.png" alt="Jasmine-Flex" height="35" />

<a href="http://viewmodelsupport.codeplex.com/">ViewModel Support</a> -- A set of classes to reduce the friction when writing ViewModels

<a href="http://dynamicwrapper.codeplex.com/">Dynamic Wrapper</a> -- A utility to simulate casting objects to interfaces, even if they do not explicitly implement them.  Automatic wrapping.

<a href="http://htmlpageutil.codeplex.com/">Silverlight HTML Utilities</a> -- A set of wrappers around the DOM in Silverlight to make it easily doubled out for testing.

<a href="http://bitbucket.org/briangenisio/rubyvm">Ruby MVVM Experiments</a> -- Some experiments I have been playing with to see if MVVM can be done effectively in Ruby.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2010-06-11 01:25:18</wp:post_date>
		<wp:post_date_gmt>2010-06-11 01:25:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28382</wp:comment_id>
			<wp:comment_author><![CDATA[car spares]]></wp:comment_author>
			<wp:comment_author_email>romaine_dobbs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://secondhandcarschennai.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.74.28.14</wp:comment_author_IP>
			<wp:comment_date>2014-08-11 01:59:44</wp:comment_date>
			<wp:comment_date_gmt>2014-08-11 01:59:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When it is time to change oil, stop a moment before you pick the most 
expensive diesel car oil or cheap car oil. This is considering that the car engine repair in Urbana is a very costly affair and can be avoided 
by regular service. If your car engine starts overheating, 
it could result in serious and expensive damage to the engine and your car needs to 
be serviced immediately.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27781</wp:comment_id>
			<wp:comment_author><![CDATA[web page]]></wp:comment_author>
			<wp:comment_author_email>kendallmarcotte@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=6s1JfOXOKoU</wp:comment_author_url>
			<wp:comment_author_IP>187.108.223.204</wp:comment_author_IP>
			<wp:comment_date>2014-07-21 00:59:59</wp:comment_date>
			<wp:comment_date_gmt>2014-07-21 00:59:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Right now it seems like Movable Type is the preferred blogging platform out there right now.
(from what I've read) Is that what you are using on your blog?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41989</wp:comment_id>
			<wp:comment_author><![CDATA[disney cars cars]]></wp:comment_author>
			<wp:comment_author_email>donniegooch@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ibook21.com/profile-883035/info</wp:comment_author_url>
			<wp:comment_author_IP>104.250.226.97</wp:comment_author_IP>
			<wp:comment_date>2015-05-02 10:32:59</wp:comment_date>
			<wp:comment_date_gmt>2015-05-02 10:32:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Randomly occurring auto problems are probably not as random 
as you think. Air Filters ' Replace any air filters that are clogged with dust or other debris.
Reports already indicated deaths resulting from suffocation while inside the car.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30854</wp:comment_id>
			<wp:comment_author><![CDATA[bilim insanları HakkıNda bilgi]]></wp:comment_author>
			<wp:comment_author_email>ryan_bolinger@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://Bilimhakkindacom.wordpress.com/2014/10/08/bilim-hakkinda-degerli-konular/</wp:comment_author_url>
			<wp:comment_author_IP>198.52.223.223</wp:comment_author_IP>
			<wp:comment_date>2014-10-24 10:12:30</wp:comment_date>
			<wp:comment_date_gmt>2014-10-24 10:12:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great info. Lucky me I came across your site by chance (stumbleupon).
I've saved it for later!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27749</wp:comment_id>
			<wp:comment_author><![CDATA[web page]]></wp:comment_author>
			<wp:comment_author_email>leonorheane@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=6s1JfOXOKoU</wp:comment_author_url>
			<wp:comment_author_IP>91.121.192.178</wp:comment_author_IP>
			<wp:comment_date>2014-07-20 10:45:03</wp:comment_date>
			<wp:comment_date_gmt>2014-07-20 10:45:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello to every single one, it's actually a fastidious for me 
to go to see this web site, it contains useful Information.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23540</wp:comment_id>
			<wp:comment_author><![CDATA[siroxogin]]></wp:comment_author>
			<wp:comment_author_email>dimamarkod1978@mail.ru</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.78.189.130</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 11:41:35</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 11:41:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="http://hotpornohub.com" rel="nofollow">Only the most porno hub videos that set up not appeared on the internet!</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27909</wp:comment_id>
			<wp:comment_author><![CDATA[web site]]></wp:comment_author>
			<wp:comment_author_email>alexanderderosa@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=W-Xrs45h7ZE</wp:comment_author_url>
			<wp:comment_author_IP>190.201.220.67</wp:comment_author_IP>
			<wp:comment_date>2014-07-23 03:50:46</wp:comment_date>
			<wp:comment_date_gmt>2014-07-23 03:50:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi friends, how is all, and what you desire to say concerning 
this piece of writing, in my view its in fact awesome for me.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Testing syntax highlighting</title>
		<link>http://houseofbilz.com/?p=210</link>
		<pubDate>Thu, 09 Dec 2010 12:07:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[<p>&#160;</p>  <p>Test before</p>  <p>This is a test</p>  <p>Test after</p>  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public void Test()
{
    Console.WriteLine(&quot;This is a test&quot;);

    var foo = new List&lt;string&gt;();
}</pre>

<p>&#160;</p>

<pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">public function Main()
{
    if (this.stage)
    {
        init(null);
    }
    else
    {
        this.addEventListener(Event.ADDED_TO_STAGE, init);
    }
}

public function init()
{
    if (this.hasEventListener(Event.ADDED_TO_STAGE))
    {
        this.removeEventListener(Event.ADDED_TO_STAGE, init);
    }
}</pre>

<p>THis is a test</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2010-12-09 12:07:00</wp:post_date>
		<wp:post_date_gmt>2010-12-09 12:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Code Magazine Article</title>
		<link>http://houseofbilz.com/media-appearances/code_mag/</link>
		<pubDate>Mon, 17 Jan 2011 18:46:15 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/01/CODE_Mag.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2011-01-17 18:46:15</wp:post_date>
		<wp:post_date_gmt>2011-01-17 18:46:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code_mag</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>107</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/01/CODE_Mag.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/CODE_Mag.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"540";s:6:"height";s:3:"720";s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:20:"2011/01/CODE_Mag.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"CODE_Mag-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"CODE_Mag-225x300.jpg";s:5:"width";s:3:"225";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>wlEmoticon-smile.png</title>
		<link>http://houseofbilz.com/archives/2011/01/24/cross-training-in-silverlight-flexdata-binding/wlemoticon-smile-png-2/</link>
		<pubDate>Mon, 24 Jan 2011 03:14:47 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/01/wlEmoticon-smile.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2011-01-24 03:14:47</wp:post_date>
		<wp:post_date_gmt>2011-01-24 03:14:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wlemoticon-smile-png-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>264</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/01/wlEmoticon-smile.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/01/wlEmoticon-smile.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"19";s:6:"height";s:2:"19";s:14:"hwstring_small";s:22:"height='19' width='19'";s:4:"file";s:28:"2011/01/wlEmoticon-smile.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>document</title>
		<link>http://houseofbilz.com/?attachment_id=283</link>
		<pubDate>Tue, 01 Mar 2011 17:07:16 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/03/document.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2011-03-01 17:07:16</wp:post_date>
		<wp:post_date_gmt>2011-03-01 17:07:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>document</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/03/document.pdf</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/03/document.pdf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step1.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step1-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:02 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2011-04-05 11:14:02</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step1-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"527";s:6:"height";s:3:"541";s:14:"hwstring_small";s:22:"height='96' width='93'";s:4:"file";s:17:"2011/04/step1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"step1-292x300.png";s:5:"width";s:3:"292";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step1_thumb.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step1_thumb-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:06 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step1_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2011-04-05 11:14:06</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step1_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step1_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step1_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"528";s:6:"height";s:3:"541";s:14:"hwstring_small";s:22:"height='96' width='93'";s:4:"file";s:23:"2011/04/step1_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"step1_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"step1_thumb-292x300.png";s:5:"width";s:3:"292";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step2.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step2-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:09 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2011-04-05 11:14:09</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step2-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"340";s:6:"height";s:3:"172";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:17:"2011/04/step2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"step2-300x151.png";s:5:"width";s:3:"300";s:6:"height";s:3:"151";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step2_thumb.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step2_thumb-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:12 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step2_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2011-04-05 11:14:12</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step2_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step2_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step2_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"421";s:6:"height";s:3:"214";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:23:"2011/04/step2_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"step2_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"step2_thumb-300x152.png";s:5:"width";s:3:"300";s:6:"height";s:3:"152";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step3.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step3-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:16 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2011-04-05 11:14:16</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step3-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"699";s:6:"height";s:3:"188";s:14:"hwstring_small";s:23:"height='34' width='128'";s:4:"file";s:17:"2011/04/step3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"step3-300x80.png";s:5:"width";s:3:"300";s:6:"height";s:2:"80";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step3_thumb.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step3_thumb-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:20 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step3_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2011-04-05 11:14:20</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step3_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step3_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step3_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"673";s:6:"height";s:3:"185";s:14:"hwstring_small";s:23:"height='35' width='128'";s:4:"file";s:23:"2011/04/step3_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"step3_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"step3_thumb-300x82.png";s:5:"width";s:3:"300";s:6:"height";s:2:"82";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step4a.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step4a-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:22 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step4a.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2011-04-05 11:14:22</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step4a-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step4a.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step4a.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"701";s:6:"height";s:3:"213";s:14:"hwstring_small";s:23:"height='38' width='128'";s:4:"file";s:18:"2011/04/step4a.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"step4a-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"step4a-300x91.png";s:5:"width";s:3:"300";s:6:"height";s:2:"91";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step4a_thumb.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step4a_thumb-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:27 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step4a_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2011-04-05 11:14:27</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step4a_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step4a_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step4a_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"674";s:6:"height";s:3:"208";s:14:"hwstring_small";s:23:"height='39' width='128'";s:4:"file";s:24:"2011/04/step4a_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"step4a_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"step4a_thumb-300x92.png";s:5:"width";s:3:"300";s:6:"height";s:2:"92";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step4b.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step4b-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:29 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step4b.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2011-04-05 11:14:29</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step4b-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step4b.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step4b.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"487";s:6:"height";s:3:"294";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:18:"2011/04/step4b.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"step4b-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"step4b-300x181.png";s:5:"width";s:3:"300";s:6:"height";s:3:"181";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step4b_thumb.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step4b_thumb-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:33 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step4b_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date>2011-04-05 11:14:33</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step4b_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step4b_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step4b_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"496";s:6:"height";s:3:"301";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:24:"2011/04/step4b_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"step4b_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"step4b_thumb-300x182.png";s:5:"width";s:3:"300";s:6:"height";s:3:"182";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step5.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step5-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:36 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>298</wp:post_id>
		<wp:post_date>2011-04-05 11:14:36</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step5-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step5.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step5.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"963";s:6:"height";s:3:"344";s:14:"hwstring_small";s:23:"height='45' width='128'";s:4:"file";s:17:"2011/04/step5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"step5-300x107.png";s:5:"width";s:3:"300";s:6:"height";s:3:"107";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>step5_thumb.png</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/step5_thumb-png/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:41 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/wp-content/uploads/2011/04/step5_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2011-04-05 11:14:41</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>step5_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>300</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://houseofbilz.com/wp-content/uploads/2011/04/step5_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/step5_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"732";s:6:"height";s:3:"265";s:14:"hwstring_small";s:23:"height='46' width='128'";s:4:"file";s:23:"2011/04/step5_thumb.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"step5_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"step5_thumb-300x108.png";s:5:"width";s:3:"300";s:6:"height";s:3:"108";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The start of a new blog</title>
		<link>http://houseofbilz.com/archives/2008/06/21/the-start-of-a-new-blog/</link>
		<pubDate>Sat, 21 Jun 2008 13:43:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/06/28/the-start-of-a-new-blog/</guid>
		<description></description>
		<content:encoded><![CDATA[Why am I doing this? Another blog? Another blog about software? Just another programmer who thinks that someone might care what he has to say? I don't know. I guess I am doing it to create more of an online presence... although if you &quot;google&quot; my name, you will find countless usenet conversations about everything from &quot;SSH Tunneling&quot; to blueberry jam. Searching for my alter-ego, Bilzmoude, will come up with a similar mish-mash of topics such as beer and MythTV. My presence is small, but it is there.   <br />  <br />So why a technical blog? Hasn't everyone already written everything I have to say? What is the point? Is this realling going to increase my &quot;web footprint&quot;?   <br />  <br />The point, I suppose, is to collect my thoughts about programming. I want it to capture what I am thinking in the moment. As my views change, I would like to be able to look back and see HOW they have changed. For instance, there was a time when I strongly believed that code without comments was bad code. I know believe the exact opposite. Likewise, I used to believe all functions should have a single exit point and have since changed my mind on that too. I know that I am growing as a developer because I am always changing my mind. As long as I am doing this, I know that I am still learning.   <br />  <br />I am also trying to learn to write better. Throughout high school and college, I took the common engineering attitude that writing wasn't my thing... programming was. I regret that attitude now that I am over 30 and my writing reads like a high-schooler. If I write more in my blog, will my writing get better? I hope so.   <br />  <br />There are several things I want to write about, though I can't promise how often I will actually write. I have had several blogs in the past (and I am currently maintaining a family blog with my wife) but historically, I have not written very frequently. If history is an indicator, this blog will be similar.   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2008-06-21 13:43:00</wp:post_date>
		<wp:post_date_gmt>2008-06-21 13:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-start-of-a-new-blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>27245</wp:comment_id>
			<wp:comment_author><![CDATA[magento hosting solutions]]></wp:comment_author>
			<wp:comment_author_email>ronconrick@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.drugfreemc.org/UserProfile/tabid/161/userId/39149/Default.aspx</wp:comment_author_url>
			<wp:comment_author_IP>23.19.92.186</wp:comment_author_IP>
			<wp:comment_date>2014-06-27 13:33:05</wp:comment_date>
			<wp:comment_date_gmt>2014-06-27 13:33:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey There. I discovered your weblog using msn. This is an extremely well written article.
I'll be sure to bookmark it and come back to learn more 
of your useful info. Thanks for the post. I will definitely return.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Lansing Day of .NET</title>
		<link>http://houseofbilz.com/archives/2008/06/23/lansing-day-of-net/</link>
		<pubDate>Mon, 23 Jun 2008 13:45:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/07/23/lansing-day-of-net/</guid>
		<description></description>
		<content:encoded><![CDATA[In one of my favorite tech blogs, <a href="http://www.codinghorror.com/">Coding Horror</a>, Jeff Atwood <a href="http://www.codinghorror.com/blog/archives/001138.html">blogs</a> about what it means to practice your profession. More specifically, he mentions that you can do your job without practicing your profession. That everyone drives every day, but most people are not professional drivers.   <br />  <br />In his post, he brings up several things you can do to become more practiced as a developer. One of those things is &quot;Write a blog&quot;. It seems he (who is a developer turned professional blogger) believes that what I have decided to do (write a blog) is worthwhile to my career. It helps me get past my fear that I am just doing this to feed my own ego... which it feels a bit like.   <br />  <br />I believe that another thing that is important for practicing your career is going to conferences. On Saturday, I attended the <a href="http://www.dayofdotnet.org/Lansing/2008/Default.aspx">&quot;Day of .NET&quot;</a> in Lansing. I left feeling like I learned a TON! It was a great thing for me professionally.   <br />  <br />One thing that I enjoyed about this conference was the fellow attendants. See, this conference was held on a Saturday. I can't say that I have gone to many Saturday conferences. I think they do this so people who can't get their bosses to let them go during the week can still go to this conference. The side affect is that the people who attend are the types of people who are truly interested in learning outside of work. The enthusiasm about the conference and the topics was quite a bit stronger than I have ever seen at something like this.   <br />  <br />I am starting to understand that this community is not terribly large. I recognized many of the people there from the Ann Arbor .NET Users Group, blogs and podcasts. Many of these people are people that I follow on Twitter because I have found what they have to say interesting through one of the previously mentioned venues. Although most of these people do not know me, I find that their views resonate with what I believe about software.   <br />  <br />While at the conference, I sat through several talks. The ones I found most interesting were the <a href="http://www.castleproject.org/">Castle Project</a> talks. It is interesting how the technology has progressed (my analysis):   <br />  <br />First, there was ruby on rails. They did some really neat things. Then came Java with Hibernate, Spring, etc to try to do what rails did. Then came the Castle Project for .NET, with ActiveRecord (on top of NHibernate), Windsor and Monorails. From there, Microsoft lifted their heads and realized &quot;Hey! We should do this&quot;. From there, Entity Framework and ASP MVC were born.   <br />  <br />Those ruby folks were really on to something!   <br />  <br />Anyways, the conference was good and I learned a lot about Entity Framework, Castle ActiveRecord, Castle Windsor and ASP MVC. I expect to play a lot with these technologies over the next few months, and continue practicing my craft.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2008-06-23 13:45:00</wp:post_date>
		<wp:post_date_gmt>2008-06-23 13:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lansing-day-of-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>On Readability and Maintainability</title>
		<link>http://houseofbilz.com/archives/2008/06/24/on-readability-and-maintainability/</link>
		<pubDate>Tue, 24 Jun 2008 13:48:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/06/24/on-readability-and-maintainability/</guid>
		<description></description>
		<content:encoded><![CDATA[In the last 6 weeks, I have been spending a lot of my time rearchitecting my software. Along with this comes a lot of refactoring. It gets me to thinking about readability and maintainability. I came across a situation where there were several methods with the same boilerplate code. I reduced this down to a single method that takes a delegate and each dependant method calls into the single method with an implementation of a filter. When it was all said and done, I had sacrificed readability for maintainability. Following is a contrived example that shows my dilema:   <br />  <br /><span style="font-weight: bold">Before:</span>   <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithABC(IDataSource dataSource)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>     List&lt;<span style="color: #0000ff">string</span>&gt; result = <span style="color: #0000ff">new</span> List&lt;<span style="color: #0000ff">string</span>&gt;();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     <span style="color: #0000ff">using</span>(IDataReader reader = dataSource.GetData(<span style="color: #006080">&quot;ABC&quot;</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>         <span style="color: #0000ff">while</span>(reader.Read())</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>             <span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span> = reader.GetString(0);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>             <span style="color: #0000ff">if</span>(CheckAboutABC(<span style="color: #0000ff">value</span>) &amp;&amp; <span style="color: #0000ff">value</span>.Contains(<span style="color: #006080">&quot;JUNK&quot;</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>                 result.Add(<span style="color: #0000ff">value</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>     <span style="color: #0000ff">return</span> result;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span> <span style="color: #0000ff">public</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithDEF(IDataSource dataSource)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span>     List&lt;<span style="color: #0000ff">string</span>&gt; result = <span style="color: #0000ff">new</span> List&lt;<span style="color: #0000ff">string</span>&gt;();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>     <span style="color: #0000ff">using</span> (IDataReader reader = dataSource.GetData(<span style="color: #006080">&quot;DEF&quot;</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span>         <span style="color: #0000ff">while</span> (reader.Read())</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  26:</span>             <span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span> = reader.GetString(0);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  27:</span>             <span style="color: #0000ff">if</span> (<span style="color: #0000ff">value</span>.Contains(<span style="color: #006080">&quot;BLAH&quot;</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  28:</span>                 result.Add(<span style="color: #0000ff">value</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  29:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  30:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  31:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  32:</span>     <span style="color: #0000ff">return</span> result;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  33:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  34:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  35:</span> <span style="color: #0000ff">public</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithXYZ(IDataSource dataSource)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  36:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  37:</span>     List&lt;<span style="color: #0000ff">string</span>&gt; result = <span style="color: #0000ff">new</span> List&lt;<span style="color: #0000ff">string</span>&gt;();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  38:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  39:</span>     <span style="color: #0000ff">using</span> (IDataReader reader = dataSource.GetData(<span style="color: #006080">&quot;XYZ&quot;</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  40:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  41:</span>         <span style="color: #0000ff">while</span> (reader.Read())</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  42:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  43:</span>             <span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span> = reader.GetString(0);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  44:</span>             <span style="color: #0000ff">if</span> (CheckAboutXYZ(<span style="color: #0000ff">value</span>) &amp;&amp; CheckSomethingElseXYZ(<span style="color: #0000ff">value</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  45:</span>                 result.Add(<span style="color: #0000ff">value</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  46:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  47:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  48:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  49:</span>     <span style="color: #0000ff">return</span> result;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  50:</span> }</pre>
  </div>
</div>
Notice how each of these methods has the same boilerplate code. They are already pretty straight-forward: 

<br />

<br />1. Create a list to return 

<br />2. Get the data reader from the data source 

<br />3. While there is data, Get the data, filter it and add the values to the list 

<br />4. Return the list 

<br />

<br />I think this code is pretty readable. Of course, it is not maintainable. If IDataSource is changed, for example, to return an IEnumerable, then we have to change all three methods. In my example, there were more like 10 methods with the same boilerplate code. 

<br />

<br />The only real difference in any of these methods is the filter. Why not extract the boilerplate code into a single method and pass a delegate to do the filtering? The result looks like this: 

<br />

<br /><span style="font-weight: bold">After:</span> 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">private</span> <span style="color: #0000ff">delegate</span> <span style="color: #0000ff">bool</span> DataFilter(<span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">private</span> <span style="color: #0000ff">static</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithFilter(IDataSource dataSource, DataFilter filter)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     List result&lt;<span style="color: #0000ff">string</span>&gt; = <span style="color: #0000ff">new</span> List&lt;<span style="color: #0000ff">string</span>&gt;();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     <span style="color: #0000ff">using</span> (IDataReader reader = dataSource.GetData(<span style="color: #006080">&quot;ABC&quot;</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>         <span style="color: #0000ff">while</span> (reader.Read())</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>             <span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span> = reader.GetString(0);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>             <span style="color: #0000ff">if</span> (filter(<span style="color: #0000ff">value</span>))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>                 result.Add(<span style="color: #0000ff">value</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span>     <span style="color: #0000ff">return</span> result;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span> <span style="color: #0000ff">public</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithABC(IDataSource dataSource)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span>     <span style="color: #0000ff">return</span> GetDataWithFilter(dataSource, <span style="color: #0000ff">delegate</span>(<span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span>)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span>         <span style="color: #0000ff">return</span> CheckAboutABC(<span style="color: #0000ff">value</span>) &amp;&amp; <span style="color: #0000ff">value</span>.Contains(<span style="color: #006080">&quot;JUNK&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span>     });</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  26:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  27:</span> <span style="color: #0000ff">public</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithDEF(IDataSource dataSource)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  28:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  29:</span>     <span style="color: #0000ff">return</span> GetDataWithFilter(dataSource, <span style="color: #0000ff">delegate</span>(<span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span>)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  30:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  31:</span>         <span style="color: #0000ff">return</span> <span style="color: #0000ff">value</span>.Contains(<span style="color: #006080">&quot;BLAH&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  32:</span>     });</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  33:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  34:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  35:</span> <span style="color: #0000ff">public</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithXYZ(IDataSource dataSource)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  36:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  37:</span>     <span style="color: #0000ff">return</span> GetDataWithFilter(dataSource, <span style="color: #0000ff">delegate</span>(<span style="color: #0000ff">string</span> <span style="color: #0000ff">value</span>)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  38:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  39:</span>         <span style="color: #0000ff">return</span> CheckAboutXYZ(<span style="color: #0000ff">value</span>) &amp;&amp; CheckSomethingElseXYZ(<span style="color: #0000ff">value</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  40:</span>     });</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  41:</span> }</pre>
  </div>
</div>
I love this approach. There is no duplication of code anymore. If something changes with the boilerplate code, it can be changed in one spot. I have saved lines of code and everything is more compact. 

<br />

<br />Unfortunately, I think that the code has become less readable. First, it becomes difficult to discern what is going on there at first glance. The use of the inline delegate is a bit confusing and can trip up people who read this for the first time. Second, the double return is confusing. The inner return returns a bool where the method returns an ICollection. I have seen this trip up experienced developers who glance at the method. It is also more difficult to debug. 

<br />

<br />I could always strip the delegates out into separate methods, but I believe that is even more unreadable. Whats worse, is that we didn't really save many lines of code. Only 9 lines of code were saved. (more were saved in my real-world scenario) 

<br />

<br />So what is better? Readability or Maintainability? 

<br />

<br />A colleague whom I have a lot of respect for told me &quot;<span class="entry-content">Always go with readable</span>&quot;. I guess, in this case, I have to disagree with him and go with Maintainability. Duplication of code, for me, is a real big no-no. Duplication 10 times is an even bigger no-no. In this case, I think the maintainability gain outweighs the readability loss. I will even argue that as you shorten the length of each individual method, the aggregated file becomes more readable as a whole. 

<br />

<br />As a side note, it turns out that in C# 3.0, you can use lambda functions to make it a bit more readable. Unfortunately, we aren't using 3.0 yet: 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> ICollection&lt;<span style="color: #0000ff">string</span>&gt; GetDataWithABC(IDataSource dataSource)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>     <span style="color: #0000ff">return</span> GetDataWithFilter(dataSource, <span style="color: #0000ff">value</span> =&gt; CheckAboutABC(<span style="color: #0000ff">value</span>) &amp;&amp; <span style="color: #0000ff">value</span>.Contains(<span style="color: #006080">&quot;JUNK&quot;</span>));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span> }</pre>
  </div>
</div>

<pre class="c-sharp" name="code">&#160;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2008-06-24 13:48:00</wp:post_date>
		<wp:post_date_gmt>2008-06-24 13:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>on-readability-and-maintainability</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>80043</wp:comment_id>
			<wp:comment_author><![CDATA[医疗行业新闻]]></wp:comment_author>
			<wp:comment_author_email>hnigmvyjl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.imipchina.com/message/getList.html</wp:comment_author_url>
			<wp:comment_author_IP>119.122.230.120</wp:comment_author_IP>
			<wp:comment_date>2016-01-12 10:40:16</wp:comment_date>
			<wp:comment_date_gmt>2016-01-12 10:40:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[深圳市<a href="http://www.imipchina.com" rel="nofollow">IMIP国际医疗孵化平台</a>开创了全数字企业融资资本和全数字精准投资的新时代，凭借强大的国际国内资源，金融及行业能力、以及互联网大数据资源和背景。打造了全产业链综合数字资本平台、大数据企业征信金融管控评估模型系统平台、国际产品供应链交易平台，依靠平台大数据基础和积分模型进行精准匹配整合，是进行全行业金融资本孵化、融资、交易的数字平台。平台云集了多家多领域、多层次的金融资本，并利用数字建模将资本链条进行综合的分析和排序，并对应企业的各时期和需求，打造了一个全数字的<a href="http://www.imipchina.com" rel="nofollow">医疗项目融资</a>平台。<a href="http://www.imipchina.com" rel="nofollow">医疗投资平台</a>依靠多个专利和知识产权，开发并创立了大数据企业征信金融管控评估模型系统，首创地釆用企业和企业管理人的社会属性，结合银行的征信系统与资金关系建立360度积分分析模型，大大地改善和提升了企业的征信积分分值与融资成功比，客观反应了企业实际状态，同时也给金融机构和资本方提供了真实客观测评企业的数据资源，让资本的介入时间更为精准。深圳市<a href="http://www.imipchina.com" rel="nofollow">IMIP国际医疗孵化平台</a>开创了数字金融和数字投资新时代，它不仅解决了企业各个时期，各个阶段的融资问题，也为投资机构提供了全方位的企业透明的客观的真实数据为投资机构投资企业提供了依据。同时也建立了企业、投资资本和银行征信的大数据系统，为企业、资本及其他机构建立了一个数据闭环，为企业未来与银行金融体系的结合建立了大数据的基础。我们还打造了行业综合产品交易供应链平台，重点解决企业的国际化、及国际化后产品的资金、技术、生产工艺等交易后的资金池及资金回流和人民币外币的贷款和系列的金融业务。开拓了拉动内地企业综合产品全产业链走入国际市场及与前海金融体系相结合，及与国际交流交易的综合交易平台及资金业务。详情请访问：http://www.imipchina.com]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Pretty code in blogs</title>
		<link>http://houseofbilz.com/archives/2008/06/28/pretty-code-in-blogs/</link>
		<pubDate>Sat, 28 Jun 2008 13:51:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/06/28/pretty-code-in-blogs/</guid>
		<description></description>
		<content:encoded><![CDATA[I love Blogger. I have been using it for about 2 years in my <a href="http://maia.genisio.org/">personal blog</a> and it has done me really well. When I decided to start up a tech blog, I figured that Blogger would work great for that as well. Unfortunately, in my last two posts, I had a bear of a time getting my code to format. Once I thought I had it, Blogger would re-format my code enough that my formatting got all screwed up again.   <br />  <br />I had gotten so frustrated, I was almost ready to switch blog software all together. Then I came across this Google Code project called <a href="http://code.google.com/p/syntaxhighlighter/">SyntaxHighlighter</a>. It is the tool I am using to make the source code on my blog look all pretty and shiny. It took me a bit of work to get it all set up, but <a href="http://yacoding.blogspot.com/2008/05/how-to-add-syntax-highlight-to-blogger.html">this blog post</a> helped me along.   <br />  <br />Now, I can't say that I LOVE the usage here... I still need to bust into HTML in order to add a &lt;pre name=&quot;code&quot; class=&quot;c-sharp&quot;&gt; block, but it is a heck of a lot easier than what I had before. Thank you SyntaxHighlighter, you saved my day.   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2008-06-28 13:51:00</wp:post_date>
		<wp:post_date_gmt>2008-06-28 13:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pretty-code-in-blogs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>80732</wp:comment_id>
			<wp:comment_author><![CDATA[Kristofer]]></wp:comment_author>
			<wp:comment_author_email>terrell_josephson@care2.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.google.de</wp:comment_author_url>
			<wp:comment_author_IP>172.245.91.99</wp:comment_author_IP>
			<wp:comment_date>2016-04-04 07:35:08</wp:comment_date>
			<wp:comment_date_gmt>2016-04-04 07:35:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For latest news you have to pay a quick visit the web 
andd on internet I found this web site as a most excellent web site for hottest updates.



my page google.de (<a href="https://www.google.de" rel="nofollow">Kristofer</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Generic constraints for value types</title>
		<link>http://houseofbilz.com/archives/2008/06/26/generic-constraints-for-value-types/</link>
		<pubDate>Thu, 26 Jun 2008 13:55:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/06/26/generic-constraints-for-value-types/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I came across an oddity in the C# language the other day. I was trying to create a generic method that returned a nullable value. A simple example of this:</p>  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> T? GetNullable&lt;T&gt;(<span style="color: #0000ff">int</span> index)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>   <span style="color: #0000ff">if</span>(index &lt; 0)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>       <span style="color: #0000ff">return</span> <span style="color: #0000ff">null</span>;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>   <span style="color: #0000ff">return</span> <span style="color: #0000ff">default</span>(T);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span> }</pre>
  </div>
</div>

<pre class="c-sharp:nogutter" name="code">&#160;</pre>

<p>This will result in a compiler error:</p>

<p style="background-color: rgb(238,238,238)">Error 1 The type 'T' must be a non-nullable value type in order to use it as parameter 'T' in the generic type or method 'System.Nullable&lt;T&gt;' </p>

<p>This is a cryptic error that means that I need to put a constraint on my method to restrict it to a value type. In C#, this is done with the 'struct' keyword:</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.48%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; height: 30px; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> T? GetNullable&lt;T&gt;(<span style="color: #0000ff">int</span> index) <span style="color: #0000ff">where</span> T : struct</pre>
  </div>
</div>

<p>This seems really odd to me. If someone were to read the interface for this class, it is not at all clear that I can send an int, bool double, etc into this method. </p>

<p>It turns out that T? and System.Nullable&lt;T&gt; compile into the same IL and the interface for System.Nullable&lt;T&gt; also has a constraint on 'struct'. So, as odd as it is, we need to consider the 'struct' constraint to really mean any value type.</p>

<p>Just a little bit later, I created a utility method to convert a string to an enum. The code is really straight forward:</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> T GetEnum&lt;T&gt;(<span style="color: #0000ff">string</span> enumValue)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>    <span style="color: #0000ff">return</span> (T)Enum.Parse(<span style="color: #0000ff">typeof</span> (T), enumValue);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span> }</pre>
  </div>
</div>

<p>Because this method is only designed to be used for enums, it would be great if I could add an enum constraint:</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.29%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; height: 33px; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> T GetEnum&lt;T&gt;(<span style="color: #0000ff">string</span> enumValue) <span style="color: #0000ff">where</span> T : enum</pre>
  </div>
</div>

<p>This, unfortunately, is not valid. C# does, however, allow you to put a constraint with a base class. Since all enums are derived from System.Enum, I thought I could restrict using System.Enum: 
  <br /></p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; height: 32px; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> T GetEnum&lt;T&gt;(<span style="color: #0000ff">string</span> enumValue) <span style="color: #0000ff">where</span> T : System.Enum</pre>
  </div>
</div>

<p>Again, no dice. System.Enum is considered a &quot;special class&quot; and cannot be used as a constraint. So, again, I am stuck using the 'struct' constraint and again, I am left feeling like this is not quite right. With this constraint, it would be perfectly acceptable to to write the following:</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; height: 31px; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> GetEnum&lt;<span style="color: #0000ff">int</span>&gt;(<span style="color: #006080">&quot;4&quot;</span>);</pre>
  </div>
</div>

<p>Woof. I guess the only thing I can do now, is to add the following parameter check:</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">if</span>(!<span style="color: #0000ff">typeof</span>(T).IsEnum)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span>    <span style="color: #0000ff">throw</span> <span style="color: #0000ff">new</span> ArgumentException(<span style="color: #006080">&quot;Type T Must be an Enum&quot;</span>);</pre>
  </div>
</div>

<p>This is the best I can do, thought it is far from ideal. It gives me a runtime check, at least, even though I can't get a compile-time check. </p>

<p>It leaves me hoping that in C# 4.0, that we see some significant changes to generic constraints. It would be nice if we could at least have an Enum construct. In addition, it would be nice to use the 'value' keyword in constraints instead of 'struct'. It will only improve readability.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2008-06-26 13:55:00</wp:post_date>
		<wp:post_date_gmt>2008-06-26 13:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generic-constraints-for-value-types</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>35252</wp:comment_id>
			<wp:comment_author><![CDATA[Clifton]]></wp:comment_author>
			<wp:comment_author_email>ronnybeckham@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.yahoo.com</wp:comment_author_url>
			<wp:comment_author_IP>172.245.226.95</wp:comment_author_IP>
			<wp:comment_date>2015-01-18 20:45:51</wp:comment_date>
			<wp:comment_date_gmt>2015-01-18 20:45:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great web site you've got here.. It's hard to find high-quality writing 
like yours nowadays. I truly appreciate individuals like you!

Take care!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16945</wp:comment_id>
			<wp:comment_author><![CDATA[Fabio Milheiro]]></wp:comment_author>
			<wp:comment_author_email>fabiomilheiro@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.31.132.91</wp:comment_author_IP>
			<wp:comment_date>2012-08-29 23:54:56</wp:comment_date>
			<wp:comment_date_gmt>2012-08-29 23:54:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks mate! Struct!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Castle Active Record</title>
		<link>http://houseofbilz.com/archives/2008/07/08/castle-active-record/</link>
		<pubDate>Tue, 08 Jul 2008 13:57:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/07/08/castle-active-record/</guid>
		<description></description>
		<content:encoded><![CDATA[I have recently gotten into databases at work. I HATE programming against databases. I have spent the majority of my career avoiding jobs where I need to program against them. I just don't like doing it. I mean, they are great for persistence and retrieval, but I hate how muddy they make the code... all the <a href="http://en.wikipedia.org/wiki/Create%2C_read%2C_update_and_delete">CRUD</a> (Create, Retrieve, Update and Delete) code that needs to be written... all the special queries... yuck.   <br />  <br />Which is why in my current project (a re-architecture of an existing system) when it came time to include a database instead in place of the dreaded XML files, I found myself in a tough spot. I really like the active record pattern, so I implemented my business object persistence using that pattern.   <br />  <br />While doing this, I came across an amazing open-source product called <a href="http://www.castleproject.org/activerecord/index.html">Castle ActiveRecord</a> (part of the <a href="http://www.castleproject.org/index.html">Castle Project</a>). Coincidentally, I got to see a talk by <a href="http://michaeleatonconsulting.com/blog/">Michael Eaton</a> at Lansing Day of .NET a few weeks later. It is a simple framework that abstracts away all database programming. WOW! What could be better? It is amazingly simple to use and I barely touch the database. I don't even need to create the database schema. Castle ActiveRecord does it all for me.   <br />  <br />So I did what I often do when I want to learn a new technology... I signed up for a tech talk to my developer team on the topic. I gave an hour-long talk on the Active Record pattern and the Castle ActiveRecord framework. With it, I came up with a fully functional (albeit toy-like) demo project.   <br />  <br />The project is a Recipe Box application. My business objects and database schema look like this:   <br />  <div style="text-align: left"><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp2.blogger.com/_28yJ_7iJX7o/SHQXxFn4mMI/AAAAAAAAAA8/-0GeHfXiiuQ/s1600-h/bo.jpg"><img style="cursor: pointer" id="BLOGGER_PHOTO_ID_5220824000119740610" border="0" alt="" src="http://bp2.blogger.com/_28yJ_7iJX7o/SHQXxFn4mMI/AAAAAAAAAA8/-0GeHfXiiuQ/s320/bo.jpg" /></a><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp0.blogger.com/_28yJ_7iJX7o/SHQYCHDOZUI/AAAAAAAAABE/zpEdwwNXp_A/s1600-h/schema.jpg">&#160;&#160;&#160;&#160;&#160;&#160; <img style="cursor: pointer" id="BLOGGER_PHOTO_ID_5220824292560627010" border="0" alt="" src="http://bp0.blogger.com/_28yJ_7iJX7o/SHQYCHDOZUI/AAAAAAAAABE/zpEdwwNXp_A/s320/schema.jpg" /></a></div>  <br />They are freakishly similar. The beauty is that I never had to write the schema. ActiveRecord did it for me.   <br />  <br />Here is the guts of my business object code:   <br />  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [ActiveRecord]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Recipe : ActiveRecordBase&lt;Recipe&gt;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>   [PrimaryKey]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">int</span> Id { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">string</span> Title { get; set;}</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">string</span> Description { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">string</span> Author { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span>   [HasMany(Inverse = <span style="color: #0000ff">true</span>, Cascade = ManyRelationCascadeEnum.AllDeleteOrphan)]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span>   <span style="color: #0000ff">public</span> IList&lt;Step&gt; Steps { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span>   [HasMany(Inverse = <span style="color: #0000ff">true</span>, Cascade = ManyRelationCascadeEnum.AllDeleteOrphan)]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span>   <span style="color: #0000ff">public</span> IList&lt;Quantity&gt; Quantities { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span> [ActiveRecord]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Step : ActiveRecordBase&lt;Step&gt;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  26:</span>   [PrimaryKey]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  27:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">int</span> Id { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  28:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  29:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  30:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">string</span> Command { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  31:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  32:</span>   [BelongsTo(<span style="color: #006080">&quot;RecipeId&quot;</span>)]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  33:</span>   <span style="color: #0000ff">public</span> Recipe Recipe { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  34:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  35:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  36:</span> [ActiveRecord]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  37:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Quantity : ActiveRecordBase&lt;Quantity&gt;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  38:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  39:</span>   [PrimaryKey]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  40:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">int</span> Id { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  41:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  42:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  43:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">double</span> Value { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  44:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  45:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  46:</span>   <span style="color: #0000ff">public</span> Units Units { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  47:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  48:</span>   [BelongsTo(<span style="color: #006080">&quot;IngredientId&quot;</span>)]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  49:</span>   <span style="color: #0000ff">public</span> Ingredient Ingredient { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  50:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  51:</span>   [BelongsTo(<span style="color: #006080">&quot;RecipeId&quot;</span>)]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  52:</span>   <span style="color: #0000ff">public</span> Recipe Recipe { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  53:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  54:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  55:</span> [ActiveRecord]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  56:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Ingredient : ActiveRecordBase&lt;Ingredient&gt;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  57:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  58:</span>   [PrimaryKey]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  59:</span>   <span style="color: #0000ff">int</span> Id { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  60:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  61:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  62:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">string</span> Name { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  63:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  64:</span>   [Property]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  65:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">string</span> Description { get; set; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  66:</span> }</pre>
  </div>
</div>

<br />It is that simple (I left out constructors, ToString() and other logic for this post. I load it up and start programming against the objects: 

<br />

<br /><span style="font-weight: bold">Create:</span> 

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> var ingredient = <span style="color: #0000ff">new</span> Ingredient(<span style="color: #006080">&quot;Milk&quot;</span>, <span style="color: #006080">&quot;A drink made from mammals&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> ingredient.Save();</pre>
  </div>
</div>

<p><span style="font-weight: bold"></span>&#160;</p>

<p><span style="font-weight: bold">Retrieve:</span></p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100.14%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; height: 17px; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> Ingredient.FindAll();</pre>
  </div>
</div>

<pre class="c-sharp:nogutter" name="code">&#160;</pre>
<span style="font-weight: bold">Update:</span> 

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> ingredient.Description = <span style="color: #006080">&quot;A white liquid&quot;</span>;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> ingredient.Save();</pre>
  </div>
</div>

<pre class="c-sharp:nogutter" name="code">&#160;</pre>
<span style="font-weight: bold">Delete:</span> 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> ingredient.Description = <span style="color: #006080">&quot;A white liquid&quot;</span>;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> ingredient.Save();</pre>
  </div>
</div>

<p>&#160;</p>

<p>It couldn't be any easier, as far as I am concerned. Delete, Save, FindAll and many other methods like those were created for me when I inherited my objects from ActiveRecordBase. This gives me a ton more time to be coding my features, and forgetting about my persistence mechanism. 
  <br />

  <br />As much praise as I have given to ActiveRecord, there are some weaknesses. Here are the ones I can point out: </p>

<ul>
  <li>You have less control over your database </li>

  <li>It is not as performant as direct SQL and stored procedures can be </li>

  <li>You loose your one shot at inheritance. If your business objects already derive from something, you are out of luck </li>

  <li>It cause an even bigger rift between Devs and DBAs </li>

  <li>You are forced to write classes with strong dependencies with each other </li>

  <li>You need to deploy at least 6 Dlls at 1.6 MB in size 
    <br /></li>
</ul>

<br />Finally, I want to make a quick mention to <a href="http://msdn.microsoft.com/en-us/library/aa697427%28VS.80%29.aspx">Microsoft's Entity Framework</a>. It is supposed to do a lot of what Casltle ActiveRecord already does. It is currently in CTP, and I will probably play with it soon. Unfortunately, many in the development community have given it a vote of &quot;<a href="http://efvote.wufoo.com/forms/ado-net-entity-framework-vote-of-no-confidence/">No Confidence</a>&quot;. I am not qualified to judge here, but I hope that when EF comes out later this year, the community is a bit more positive about it. We'll see. 

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2008-07-08 13:57:00</wp:post_date>
		<wp:post_date_gmt>2008-07-08 13:57:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>castle-active-record</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>28169</wp:comment_id>
			<wp:comment_author><![CDATA[sulastr]]></wp:comment_author>
			<wp:comment_author_email>OakleyFendt240@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sacredmedicinejourney.org</wp:comment_author_url>
			<wp:comment_author_IP>162.248.243.86</wp:comment_author_IP>
			<wp:comment_date>2014-08-01 13:37:10</wp:comment_date>
			<wp:comment_date_gmt>2014-08-01 13:37:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're really a just right webmaster. The web site loading speed is incredible. It sort of feels that you're doing any distinctive trick. Furthermore, The contents are masterpiece. you've performed a magnificent activity in this subject!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>PDC 2008</title>
		<link>http://houseofbilz.com/archives/2008/07/10/pdc-2008/</link>
		<pubDate>Thu, 10 Jul 2008 14:00:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/07/10/pdc-2008/</guid>
		<description></description>
		<content:encoded><![CDATA[&#160; <br />I just signed up for <a href="http://microsoftpdc.com/Default.aspx">PDC </a>this year and reserved my airline ticket. I am excited to go to this, as it will be the highest profile development conference I have ever attended... by far. It will suck being away from my wife and 18 month old daughter for that long, but I think this conference will be a good thing for me.   <br />  <br />Before I started my .NET job 2.5 years ago, I only had 1 year of Windows development experience. Before that, it was all cross-platform, unix-like environments. Windows is still relatively new to me as a platform. Because of this, I certainly have never been to anything so <a href="http://www.microsoft.com">M$</a> focused. I am going with a colleague from my office, so it should be a good time. If you are going, I will see you there!   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2008-07-10 14:00:00</wp:post_date>
		<wp:post_date_gmt>2008-07-10 14:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pdc-2008</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Active Record Talk</title>
		<link>http://houseofbilz.com/archives/2008/07/11/active-record-talk/</link>
		<pubDate>Fri, 11 Jul 2008 14:01:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/07/11/active-record-talk/</guid>
		<description></description>
		<content:encoded><![CDATA[So at the <a href="http://www.aadnd.org/">Ann Arbor .NET Developer's Group </a>meeting the other night, I decided to give a 10 minute &quot;<a href="http://en.wikipedia.org/wiki/Lightning_talk">lightning talk</a>&quot; version of my <a href="http://www.castleproject.org/activerecord/index.html">Castle ActiveRecord </a>talk. People seemed very interested in the concept and I will be giving a full-length talk on the topic on September 10th.   <br />  <br />Unfortunately, my company considers my first demo and presentation to be their <a href="http://en.wikipedia.org/wiki/Intellectual_property">IP</a> and I can't use it for a public talk. Because of this, I need to come up with a new demo and a new PowerPoint stack. I suppose this is not the worst thing in the world, as it will force me to think about the holes and questions from my internal talk.   <br />  <br />My wife and I give each other alternating Fridays to get out of the house and do &quot;our thing&quot; while the other stays home while our child sleeps. So, I am at the coffee shop tonight, listening to music and playing more with ActiveRecord. I am thinking of a full-blown <a href="http://silverlight.net/default.aspx">Silverlight </a>application for recipe management as my demo.   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2008-07-11 14:01:00</wp:post_date>
		<wp:post_date_gmt>2008-07-11 14:01:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>active-record-talk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Response to \"Self Promotions vs Other Relations\"</title>
		<link>http://houseofbilz.com/archives/2008/07/21/response-to-self-promotions-vs-other-relations/</link>
		<pubDate>Mon, 21 Jul 2008 12:19:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/07/21/response-to-self-promotions-vs-other-relations/</guid>
		<description></description>
		<content:encoded><![CDATA[<span>I had an interesting conversation with someone on <a href="http://www.twitter.com">Twitter</a> today. He spoke up while I was giving a playful response to someone else. I felt like from there forward, he was misrepresenting me by misquoting me (&quot;everything we do on Twitter&quot;, for instance, was a quote I didn't say) and inflating my language by using &quot;everyone&quot;, &quot;all the time&quot; and &quot;everything&quot;. It ultimately ended up in a blog post of his criticizing my position. I don't know this guy. He might be a troll... he might not... but I felt like I should post my response     <br />    <br />I am doing this because I want to make it clear what I think about blogging and being in a community such as Twitter. I believe that there is a spectrum of self promotion, that starts at the core of what Twitter is and ends in the world of fembots.     <br />    <br /><span style="font-style: italic"><span style="font-weight: bold">Here was the Twitter conversation:</span></span> </span><span style="font-weight: bold">   <br />    <br />sbellware:</span> the only thing more despicable about self-promotion on twitter is not having the guts to do it in the clear   <br /><span style="font-weight: bold">BrianGenisio @sbellware: </span>Aren't we all, in one way or another, promoting ourselves on Twitter? The act of blogging or micro-blogging is self promotion   <br /><span style="font-weight: bold">vaspersthegrate @briangenisio</span>: - Self promo means pushing links to product pages, blog posts, other sales or self-interest objects. Not altruistic sharing.   <br /><span style="font-weight: bold">vaspersthegrate</span>: Self promotion is not &quot;everything we do on Twitter&quot;. There is also selfless interactions and sharing that may not benefit you much at all.   <br /><span style="font-weight: bold">BrianGenisio @vaspersthegrate</span>: Self promotion means a lot more than what you said. Self promotion also means &quot;promoting your ideas&quot;. Many others as well   <br /><span style="font-weight: bold">vaspersthegrate @BrianGenisio</span>: - If you think everything everyone does all the time is ultimately selfish, then you can also justify all acts as survival.   <br /><span style="font-weight: bold">BrianGenisio @vaspersthegrate</span>: If you think that you are special enough to &quot;altruistically share&quot;, then you are promoting your ego.   <br /><span style="font-weight: bold">vaspersthegrate @BrianGenisio</span>: Helping others on Twitter is not self-promotional, it is other-relational. We know the difference between mktg &amp; helping   <br /><span style="font-weight: bold">BrianGenisio @vaspersthegrate</span>: Just to be clear, I never suggested that you are marketing. I also never used the word &quot;everything&quot;. Those are your words   <br />  <br /><span style="font-style: italic"><span style="font-weight: bold">Here is his <a href="http://pluperfecter.blogspot.com/2008/07/self-promotions-vs-other-relations.html">blog post</a>       <br /><span style="font-style: italic"><span style="font-weight: bold"><span style="font-style: italic"><span style="font-weight: bold"></span></span></span></span>      <br /><span style="font-weight: bold">Here is my response:        <br /></span></span></span>My original statement, which I stand by, was meant to be more of a reflection on our existence on Twitter... I really do understand what the Twitter community means when they say &quot;Self Promotional&quot;. I was merely playing with it (the moral relativism of the topic), as my language clearly states.   <br />  <br />When we, bloggers, tweeps, professionals and individuals make a blog post or tweet, we are essentially promoting ourselves in one way or another. It may not be in the sense that the Twitter community is referring to, but it certainly is by the meaning of the word. If you look up the word &quot;promote&quot; in the <a href="http://tinyurl.com/5nf8vo">dictionary</a> you will find that what I am saying is true in the first two meanings.   <br />  <br />In order to be a member of a community (any community), one must promote themselves in some way... be it through helping others, casual conversation or spouting their opinions. If you do not promote yourself, you are ignored by the <a href="http://tinyurl.com/76mk7">emergent</a> community.   <br />  <br />Further, a blog is a perfect example of promoting one's ego. I have two blogs -- one personal and a newer, more professional blog. I am not trying to say anything bad about promoting an ego... but instead I am trying to point out that if you are writing something that you think might be useful to others, your ego is being promoted by you -- thus &quot;self promotion&quot;.   <br />  <br />I urge you to look deeper into what I was saying and not think I am trying to compare you to a fembot on Twitter. I understand the difference.   <br />  <br /><span style="font-style: italic"><span style="font-weight: bold"><span style="font-weight: bold">       <br /></span></span></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2008-07-21 12:19:00</wp:post_date>
		<wp:post_date_gmt>2008-07-21 12:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>response-to-self-promotions-vs-other-relations</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Comments</title>
		<link>http://houseofbilz.com/archives/2008/07/19/comments/</link>
		<pubDate>Sat, 19 Jul 2008 12:20:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/07/19/comments/</guid>
		<description></description>
		<content:encoded><![CDATA[Recently, while refactoring an old mess of code, I came across the following:   <br />  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> ArrayList result = <span style="color: #0000ff">new</span> ArrayList(dictionary.Count);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> <span style="color: #008000">// Loop through the dictionary and add it to the ArrayList</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span> <span style="color: #0000ff">for</span>(<span style="color: #0000ff">int</span> iNdx = 0; iNdx &lt; dictionary.Count; iNdx++)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>   DictionaryItem dictionaryItemValue = dictionary[iNdx];</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>   result.Add(dictionaryItemValue);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span> }</pre>
  </div>
</div>

<pre class="c-sharp" name="code">&#160;</pre>
What is wrong with this code? For me, I see following: 

<br />

<ul>
  <li>ArrayList when we should be using a List&lt;&gt; 
    <br /></li>

  <li>&quot;for&quot; when we should be using &quot;foreach&quot; </li>

  <li>A difficult to read loop counter </li>

  <li>An ugly temporary variable when we should be using none </li>

  <li>If we used List&lt;&gt;, we would be able to use &quot;AddRange&quot; and bypass the loop entirely. </li>
</ul>
BUT, none of these are what I find most objectionable. The thing that smells the worst to me is the comment. Yup, that line above the &quot;for&quot; loop. What is it there for? What is its purpose in life? If somebody were to come along and read this code, the comment would only waste their time. It is obvious. Duh. 

<br />

<br />Comments, by themselves, are a code smell. They muddy the code in a way that makes it harder to read and less maintainable. In fact, I have this poster hanging in my cube at work to remind me in case I am feeling lazy: 

<br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://brianstestsite.googlepages.com/comments.JPG"><img style="text-align: center; margin: 0px auto 10px; width: 417px; display: block; height: 311px; cursor: pointer" border="0" alt="" src="http://brianstestsite.googlepages.com/comments.JPG" /></a>To illustrate my point, consider the following inane example: What if I fixed everything about the code that I mentioned preiously: 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> List&lt;DictionaryItem&gt; result = <span style="color: #0000ff">new</span> List&lt;DictionaryItem&gt;();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> <span style="color: #008000">// Loop through the dictionary and add it to the ArrayList</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span> result.AddRange(dictionary);</pre>
  </div>
</div>

<pre class="c-sharp" name="code">&#160;</pre>

<p>Now I have a comment that doesn't even make sense anymore. You may say &quot;If you made that change, you would change the comment as well.&quot; This is false. I am VERY likely to ignore the comment and leave the bad comment in place. Why? 
  <br /></p>

<ol>
  <li>The comment was useless to begin with, so I ignored it. </li>

  <li>Most single-line comments are useless, so I ignore it. </li>

  <li>The compiler won't tell you that the comment doesn't make sense anymore. </li>

  <li>I might be using a tool like ReSharper where most the work is done for me. It ignores comments too. </li>
</ol>
IT HAPPENS ALL THE TIME. 

<br />

<br />As far as I am concerned, comments are <span style="font-style: italic">usually</span> a cheap replacement for readable code. It is easy to slap a comment in and walk away, but it takes thought and effort to make the code readable without the comment. 

<br />

<br />Now, I am the first to admit... my code readability needs work. More specifically, the way I write code needs work to be readable by others. It is kind of like when I cook (my biggest non-tech hobby). I almost always make food that tastes good... to me. Making it taste as good for others is the thing I am constantly trying to make better. 

<br />

<br />Here are the categories of comments that I see on a regular basis: 

<br />

<br /><span style="font-weight: bold">Incorrect Comments</span> 

<br />These comments creep int a code base over time as as the code is refactored. If you comment often, then it is inevitable that many of your comments will morph into incorrect comments. These should be eliminated whenever they are found, as they do nothing but confuse the reader. If the code needs a comment, consider refactoring to eliminate the need. 

<br />

<br /><span style="font-weight: bold">Obvious Comments 
  <br /></span>So often, a comment is telling you exactly what the code is doing... 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #008000">// Check For Null</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">if</span>(item == <span style="color: #0000ff">null</span>)</pre>
  </div>
</div>
These comments will quickly become <span style="font-weight: bold">incorrect comments</span> because they are so useless that nobody pays attention to them anyways. They should be removed whenever they are found. 

<br />

<br /><span style="font-weight: bold">Comments that Replace Readable Code</span> 

<br />It takes a lot more effort and creativity to write readable code than it does to comment your code. The problem, again, is that code often changes while comments are often not updated. When this happens, you are left with hard-to-read code with incorrect comments. The author should have encapsulated the code into a concise method that does one thing -- the thing that the comment says that it does. 

<br />

<br />When you see something like: 

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> List&lt;<span style="color: #0000ff">string</span>&gt; keyData = <span style="color: #0000ff">new</span> List&lt;<span style="color: #0000ff">string</span>&gt;();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> <span style="color: #008000">// If the file version is old, then parse the old keyed data from the list</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span> <span style="color: #0000ff">if</span> (<span style="color: #0000ff">string</span>.IsNullOrEmpty(v) ||v.StartsWith(<span style="color: #006080">&quot;1.&quot;</span>) ||v.StartsWith(<span style="color: #006080">&quot;2.&quot;</span>) &amp;&amp; v.EndsWith(<span style="color: #006080">&quot;b&quot;</span>)))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     <span style="color: #0000ff">foreach</span> (<span style="color: #0000ff">string</span> stuff <span style="color: #0000ff">in</span> ReadStuffFromFile(fh))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>         <span style="color: #0000ff">if</span> (stuff.Contains(_specialKey))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>             <span style="color: #0000ff">string</span> keyItem = stuff.Split(_specialKey.ToCharArray())[1];</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>             keyData.Add(keyItem.Substring(3, 8));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span> }</pre>
  </div>
</div>
It is so much easier to read if you bust the condition and the block into separate methods: 

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">if</span> (FileVersionIsLegacy(v))</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span>     keyData = ParseLegacyData(fh);</pre>
  </div>
</div>
<span style="font-weight: bold">Comments that excuse bad code 
  <br /></span>I am fairly guilty of this one. Comments that say &quot;I know this is bad form, but it is more performant to so it this way&quot; or &quot;Working around a Microsoft bug&quot; are <span style="font-style: italic">sometimes</span> excusable. Instead, though, a colleague of mine once suggested that I write a method that is named something like HandleListPerformantly() or WorkAroundMicrosoftDisplayBug_3334495() instead. You at least make it obvious to everyone involved what you are doing. Why write a comment when you can use code?<span style="font-weight: bold"> 
  <br /></span>

<br /><span style="font-weight: bold">Multi-line comments describing complex behavior 
  <br /></span>The answer to my last question might be &quot;Because it takes me several lines to describe why I am doing something&quot;. I have a hard time arguing with this one. <strike>I remember reading in someone's blog recently (I can't remember who, or else I would cite it)</strike> Jeff Atwood wrote a <a href="http://www.codinghorror.com/blog/archives/000749.html">post</a> once that code is the &quot;how&quot; and comments are the &quot;why&quot;. This is a case where I agree with that statement. I like to stick to the general rule that if a comment is 2 lines or less, I can probably re-write it to be more readable. If it is longer, then my comment is probably useful. Unfortunately, large comment blocks fall victim to accuracy over time even quicker, due to the fact that the nobody who knows the code tends to read those long comments, so they tend to overlook them when they refactor. Consider ways to avoid these blocks as well. 

<br />

<br /><span style="font-weight: bold">Auto-Documentation comments 
  <br /></span>I am bringing up this type of comment because every time I have an argument with a staunch comment supporter, they always bring up this case. I will say it now: this doesn't count. It doesn't count because documentation in comments has its own language and stucture. They aren't really comments, but inline documentation meant for external consumers. They get parsed and compiled with a tool, reviewed by a human before delivery and they tend to stay up to date as well as any other documentation method. When I say &quot;Don't write comments in your code&quot;, I am not talking about this type of comment. 

<br />

<br />I may have missed a few prototypes of comments, but for the most part, I think I got them all. I know this is a controversial topic, but the more I argue it, the more I believe I am right on this. The anti-comment sentiment is not new, and it is certainly not unique to me, but I wanted to document my thoughts on it anyway, as it has changed about 179 degrees in the last 3 years. My blog is inteneded to document my thoughts and attitudes about my craft. 

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2008-07-19 12:20:00</wp:post_date>
		<wp:post_date_gmt>2008-07-19 12:20:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>comments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How not to TDD</title>
		<link>http://houseofbilz.com/archives/2008/08/15/how-not-to-tdd/</link>
		<pubDate>Fri, 15 Aug 2008 12:22:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/08/15/how-not-to-tdd/</guid>
		<description></description>
		<content:encoded><![CDATA[I recently sat in on a teleconference with some developers of a testing and automation framework who were trying to get us to use their product. One of the big components is a tool that you write test specifications with. There are two outputs: A long, formatted testing specification PDF and an XML file that specifies your tests. You then pass the XML file through a translator that outputs NUnit test stubs for your to fill in.   <br />  <br />I was curious... I had to ask &quot;Why would I want to do this?&quot; Their answer was two fold:   <br />1. Because the PDF is used for quality tracking   <br />2. Because some developers like to write their tests before they write their software. It's called &quot;Test Driven Development&quot;   <br />  <br />I was rather shocked by this answer so I just shut up and listened to the rest of the pitch. I really wanted to respond, but it wasn't professional in this particular venue. What I would have said may have gone something like this:   <br />  <br />No No No No No!!!!! That is NOT Test Driven Development. That does not help you track quality.   <br />  <br />Test Driven Development is something that I have been practicing rather religiously for about a year now. I have reaped the many benefits of TDD and I can say with confidence that what they were describing was NOT TDD.   <br />  <br />TDD is a tool that developers use to design software. You write a SINGLE test, you make the test pass, and then you write another test, refactoring your code as you go such that the software lives for the tests. As you refactor your software, you are also refactoring your tests. As your software evolves, so do the tests. The tests, by themselves, is your quality tracking document. Your IDE is your design/specification tool. I really don't need to complicate my life with these other tools.   <br />  <br />If you have ever developed using TDD, imagine writing all of your tests up-front in a tool external from your IDE. Then, you pass the output of that tool through another tool to generate your tests. THEN, you open your IDE and fill in the test stubss. When it is time to write new tests, open the external tool again, pass the output through another tool, and fill in the new tests.   <br />  <br />One of the greatest feelings I get while coding is when I am in the TDD groove -- where I am going from Red to Green to Red to Green to Red to Green... etc etc. My software is evolving in a way that is very natural for my brain. The thought alone of breaking that groove with extra tools for the purpose of a PDF document that NOBODY will ever read stresses me out.   <br />  <br />I will pass on this particular workflow, thank you.   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2008-08-15 12:22:00</wp:post_date>
		<wp:post_date_gmt>2008-08-15 12:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-not-to-tdd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Castle Active Record Slides and Links</title>
		<link>http://houseofbilz.com/archives/2008/09/11/castle-active-record-slides-and-links/</link>
		<pubDate>Thu, 11 Sep 2008 12:23:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/09/11/castle-active-record-slides-and-links/</guid>
		<description></description>
		<content:encoded><![CDATA[Last night (9/10/08), I had the pleasure of speaking at the <a href="http://www.aadnd.org/">Ann Arbor .NET Developers Group</a>. This was my first public talk in several years, and my first since switching my career focus from Linux to Windows. I had a great time, and I want to thank the group for giving me the opportunity to talk.   <br />  <br />As promised, I am posting the slides from my talk<a href="http://brianstestsite.googlepages.com/ActiveRecord.pdf"> (PDF)</a>. In addition, here are several links that I included in my talk:   <br />  <ul>   <li><a href="http://castleproject.org/">The Castle Project</a> </li>    <li><a href="http://castleproject.org/activerecord">Castle ActiveRecord</a> </li>    <li><a href="http://www.hibernate.org/343.html">NHibernate</a> </li>    <li><a href="http://altinoren.com/activewriter">ActiveWriter</a> </li>    <li><a href="http://brian.genisio.org/2008/07/active-record-mock-framework.html">Mock Backend for ActiveRecord</a> </li>    <li><a href="http://blogs.hibernatingrhinos.com/nhibernate">A Fluent Interface for NHibernate</a> </li>    <li><a href="http://michaeleatonconsulting.com/blog/">Michael Eaton (Thanks for getting me interested ActiveRecord)</a>       <br /></li> </ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2008-09-11 12:23:00</wp:post_date>
		<wp:post_date_gmt>2008-09-11 12:23:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>castle-active-record-slides-and-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>28397</wp:comment_id>
			<wp:comment_author><![CDATA[shopping]]></wp:comment_author>
			<wp:comment_author_email>hermelindamock@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://taweeporn2011.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>23.94.19.247</wp:comment_author_IP>
			<wp:comment_date>2014-08-12 00:55:08</wp:comment_date>
			<wp:comment_date_gmt>2014-08-12 00:55:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And some of the websites out of those online shopping websites, 
are hosted by wholesale dealers who deal with the 
marketing of wholesale clothing, wholesale shoes and handbags and wholesale jewelry and many 
more. Out of those who did their research first,
75 percent of them found that spending time on a retailer's website first was helpful.
These sales are promotions that e-stores run during different 
seasons to sell out a lot of products that people will buy in that season.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26998</wp:comment_id>
			<wp:comment_author><![CDATA[full hd Screen recorder]]></wp:comment_author>
			<wp:comment_author_email>staciatuckett@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://2to.in/screenrecordingsoftwareforfree87143</wp:comment_author_url>
			<wp:comment_author_IP>182.93.237.90</wp:comment_author_IP>
			<wp:comment_date>2014-06-14 01:52:18</wp:comment_date>
			<wp:comment_date_gmt>2014-06-14 01:52:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This software helps to transcribe and convert audio and video data, powerpoint presentations and documents into searchable data by timing them and indexing them in a 
database. There are always some splendid or interesting scenes in a video, do you want to save them 
as pictures to your Mac for a special momery. Performance wise 
(on paper at least), it matches the i - 
Phone 4S, with a similar dual-core processor, high resolution touchscreen (although not quite on par with 
the i - Phone’s retina display) and an 8 megapixel camera with full HD video capture.
This kind of blanket is generally made by numerous pictures.
Thus, today the firm based in Cupertino eliminated with the introduction of improvements in the technical section and the new i - Phone OS 3.
You are able to write whatever you have discovered.
While it is not technically a requirement, it may be good to view the entirety 
of the tape footage first before starting to import 
the footage to the computer so you know that everything works fine.
This gadget is quite popular due to the ease-of-use. They want to see new ideas, new faces, and territory being 
covered. Once compression has taken place, it cannot be undone.

A TFT resistive touch screen display offers vivid colour and life like imagery.
If you are NOT using component cables for your consoles,
it may be worth buying the Hauppauge 1445 as it comes with a 2-1 component cable for PS3 and Xbox 360 (savings of at least $10 if you bought the Hauppauge 1212).

Using Camtasia, you could capture videos of your lessons 
on various platforms, package them into individual 
courses, and sell them online to a wider client base than you could serve in a classroom.
Although I've only used this new feature sparingly 
so far, I've very impressed by how smoothly it works and how much time it saves.
This has made the internet to become a popular platform for 
business owners to promote their goods and services. If you're 
transferring digital video (DV) footage, these devices are 
not necessary. Christopher West has been living in florida 
for 15 years, He's originally from W. Note the action previewed upon the computer monitor 
lags the video action displayed on the television screen. 
Other reasons are that DVD is more convenient to store, view,
duplicate, and mail to family and friends. It comes with simple instructions that are easy to follow 
thus one can work with it alone without having to call in a professional.
Digital video capture devices can just hardware-capture in DV 
format. While there are certainly other solutions such as 
KVM-over-IP switches which should be considered by responsible administrators, 
the value that KVM2USB delivers on pricing makes it a superior buy.

A wide range of cameras with accompanying software 
at a range of prices is available for this type of application. Want to wish your dear 
ones blessings of joy on this special day. It also supports imported AVI,WMV,MPG,MP4,FLV format video clips for video editing.


Here is my blog post - <a href="http://2to.in/screenrecordingsoftwareforfree87143" rel="nofollow">full hd Screen recorder</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Active Record \"Mock\" Framework</title>
		<link>http://houseofbilz.com/archives/2008/07/22/active-record-mock-framework/</link>
		<pubDate>Tue, 22 Jul 2008 12:26:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/07/22/active-record-mock-framework/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f07%2factive-record-mock-framework.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f07%2factive-record-mock-framework.html" /></a>   <br />Recently, I have been working on my Castle ActiveRecord talk. I am writing some WCF services that will be consumed by a Silverlight client. Because I write my code using TDD, I needed to be able to write tests against the WCF services. I wanted to mock out the backing store for my objects, but with ActiveRecord and NHibernate, this is not so straight-forward. Instead, I came across a post about <a href="http://www.ayende.com/Blog/archive/2006/10/14/7183.aspx">mocking the backing store for NHibernate tests</a>.   <br />  <br />The idea is that you use SQLite in &quot;memory-mode&quot; as your database. This makes it so the database vanishes as soon as your connection is destroyed. This is great for testing! No database server... no database file... pure database interfaces. It is not a mock in the traditional sense of the word, but it lets me write tests as if I had a mock framework.   <br />  <br />So, I modified the code to work for ActiveRecord. Note that I am overriding the DriverConnectionProvider to keep the connection alive. This is because the in-memory database gets destroyed when the connection closes.   <br />  <br />If you want to use this class, add the following class to your test project. You will need to download and add <a href="http://sqlite.phxsoftware.com/">System.Data.SQLite</a> as a project reference.   <br />  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">namespace</span> ActiveRecordTestHelper</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>  <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> ActiveRecordMockConnectionProvider : NHibernate.Connection.DriverConnectionProvider</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>  {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>      <span style="color: #0000ff">private</span> <span style="color: #0000ff">static</span> IDbConnection _connection;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>      <span style="color: #0000ff">public</span> <span style="color: #0000ff">override</span> IDbConnection GetConnection()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>          <span style="color: #0000ff">if</span> (_connection == <span style="color: #0000ff">null</span>)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>              _connection = <span style="color: #0000ff">base</span>.GetConnection();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>          <span style="color: #0000ff">return</span> _connection;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>      <span style="color: #0000ff">public</span> <span style="color: #0000ff">override</span> <span style="color: #0000ff">void</span> CloseConnection(IDbConnection conn)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span>      <span style="color: #008000">/// &lt;summary&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span>      <span style="color: #008000">/// Destroys the connection that is kept open in order to keep the in-memory database alive.  Destroying</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span>      <span style="color: #008000">/// the connection will destroy all of the data stored in the mock database.  Call this method when the</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span>      <span style="color: #008000">/// test is complete.</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>      <span style="color: #008000">/// &lt;/summary&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span>      <span style="color: #0000ff">public</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">void</span> ExplicitlyDestroyConnection()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span>          <span style="color: #0000ff">if</span> (_connection != <span style="color: #0000ff">null</span>)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  26:</span>          {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  27:</span>              _connection.Close();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  28:</span>              _connection = <span style="color: #0000ff">null</span>;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  29:</span>          }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  30:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  31:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  32:</span>      <span style="color: #008000">/// &lt;summary&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  33:</span>      <span style="color: #008000">/// Initializes ActiveRecord and the Database that ActiveRecord uses to store the data.  Call this method</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  34:</span>      <span style="color: #008000">/// before the test executes.</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  35:</span>      <span style="color: #008000">/// &lt;/summary&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  36:</span>      <span style="color: #008000">/// &lt;param name=&quot;types&quot;&gt;A list of ActiveRecord types that will be created in the database&lt;/param&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  37:</span>      <span style="color: #0000ff">public</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">void</span> InitializeActiveRecord(<span style="color: #0000ff">params</span> Type[] types)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  38:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  39:</span>          ActiveRecordStarter.ResetInitializationFlag();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  40:</span>          ActiveRecordStarter.Initialize(GetMockConfiguration(), types);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  41:</span>          ActiveRecordStarter.CreateSchema();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  42:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  43:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  44:</span>      <span style="color: #0000ff">private</span> <span style="color: #0000ff">static</span> IConfigurationSource GetMockConfiguration()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  45:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  46:</span>          var properties = <span style="color: #0000ff">new</span> Hashtable{</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  47:</span>                                  {<span style="color: #006080">&quot;hibernate.connection.driver_class&quot;</span>, <span style="color: #006080">&quot;NHibernate.Driver.SQLite20Driver&quot;</span>},</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  48:</span>                                  {<span style="color: #006080">&quot;hibernate.dialect&quot;</span>, <span style="color: #006080">&quot;NHibernate.Dialect.SQLiteDialect&quot;</span>},</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  49:</span>                                  {<span style="color: #006080">&quot;hibernate.connection.provider&quot;</span>, ConnectionProviderLocator},</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  50:</span>                                  {<span style="color: #006080">&quot;hibernate.connection.connection_string&quot;</span>, <span style="color: #006080">&quot;Data Source=:memory:;Version=3;New=True;&quot;</span>}};</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  51:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  52:</span>          var source = <span style="color: #0000ff">new</span> InPlaceConfigurationSource();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  53:</span>          source.Add(<span style="color: #0000ff">typeof</span>(ActiveRecordBase), properties);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  54:</span>          <span style="color: #0000ff">return</span> source;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  55:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  56:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  57:</span>      <span style="color: #0000ff">private</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">string</span> ConnectionProviderLocator</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  58:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  59:</span>          get { <span style="color: #0000ff">return</span> String.Format(<span style="color: #006080">&quot;{0}, {1}&quot;</span>, TypeOfEnclosingClass.FullName, EnclosingAssemblyName.Split(<span style="color: #006080">','</span>)[0]); }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  60:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  61:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  62:</span>      <span style="color: #0000ff">private</span> <span style="color: #0000ff">static</span> Type TypeOfEnclosingClass</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  63:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  64:</span>          get { <span style="color: #0000ff">return</span> MethodInfo.GetCurrentMethod().DeclaringType; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  65:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  66:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  67:</span>      <span style="color: #0000ff">private</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">string</span> EnclosingAssemblyName</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  68:</span>      {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  69:</span>          get { <span style="color: #0000ff">return</span> Assembly.GetAssembly(TypeOfEnclosingClass).FullName; }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  70:</span>      }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  71:</span>  }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  72:</span> }</pre>
  </div>
</div>
By using this class, you simply need to initialize ActiveRecord in your test StartUp method, and destroy the connection in the test TearDown Method. Here is an example of a test fixture that takes advantage of my class: 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [TestFixture]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> IngredientServiceTests</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>   <span style="color: #0000ff">private</span> IRecipeBoxService _recipeBoxService;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>   [SetUp]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> SetUp()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>   {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>       ActiveRecordMockConnectionProvider.InitializeActiveRecord(<span style="color: #0000ff">typeof</span>(Ingredient));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>       _recipeBoxService = <span style="color: #0000ff">new</span> RecipeBoxService();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>   }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>   [TearDown]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> TearDown()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>   {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span>       ActiveRecordMockConnectionProvider.ExplicitlyDestroyConnection();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span>   }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span>   [Test]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span>   <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Test_Get_Ingredients()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span>   {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>       Ingredient mockIngredient = <span style="color: #0000ff">new</span> Ingredient(<span style="color: #006080">&quot;ABCD&quot;</span>, <span style="color: #006080">&quot;DEF&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span>       mockIngredient.Save();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span>       IList&lt;Ingredient&gt; ingredients = <span style="color: #0000ff">new</span> List&lt;Ingredient&gt;(_recipeBoxService.AllIngredients());</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  26:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  27:</span>       Assert.That(ingredients.Count, Is.EqualTo(1));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  28:</span>       Assert.That(ingredients[0].Name, Is.EqualTo(<span style="color: #006080">&quot;ABCD&quot;</span>));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  29:</span>       Assert.That(ingredients[0].Description, Is.EqualTo(<span style="color: #006080">&quot;DEF&quot;</span>));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  30:</span>   }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  31:</span> }</pre>
  </div>
</div>

<pre class="c-sharp" name="code"><br /></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2008-07-22 12:26:00</wp:post_date>
		<wp:post_date_gmt>2008-07-22 12:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>active-record-mock-framework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Have you seen the new ANTS profiler?</title>
		<link>http://houseofbilz.com/archives/2008/09/12/have-you-seen-the-new-ants-profiler/</link>
		<pubDate>Fri, 12 Sep 2008 12:28:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/09/12/have-you-seen-the-new-ants-profiler/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f08%2fhave-you-seen-new-ants-profiler.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f08%2fhave-you-seen-new-ants-profiler.html" /></a>   <br />Before I write anything, I want to make it clear: I am not a Red-Gate shill. They have not paid me to say this... in fact, my team pays them for their software. I just feel that sometimes, you just need to recognize superior work.   <br />  <br /><font color="#ff0000">Edit: Since writing this post, Red-Gate has sent me a <a href="http://www.urbandictionary.com/define.php?term=swag">SWAG</a> package with a T-Shirt, coffee mug and 1 GB USB drive. They did this to thank me for the <a href="http://www.red-gate.com/products/ants_profiler/testimonials.htm">testimonial</a> of mine that they published. Again, this happened AFTER this post, and I am still not a Red-Gate shill.</font>   <br />  <br /><span style="font-weight: bold">ANTS of the Past</span>   <br />My team has been using the <a href="http://www.red-gate.com/products/ants_profiler/index.htm">.Net ANTS Profiler</a> for years. It has always been a useful tool in our arsenal for finding performance bottlenecks. In the past, I have always liked the product, but have never felt like it was anything extremely special. One of the biggest reasons for this is the often mis-represented hot spots.   <br />  <br />I often found that methods that got called many times (hundreds of thousands) would show up as hot spots in ANTS. When I worked to reduce the number of calls, my app would fail to show improvement. ANTS would show me the next hot spot and I would be fooled again.   <br />  <br />The reason for this (as I theorized) was that ANTS was measuring the profile time in addition to the method time. The profile time outweighed the execution time, thus erroneously pointed out a hot spot. Admittedly, reducing the call count was good for my software but it wasn't my primary goal for profiling. Eventually, I would find the real bottleneck and fix it. Ultimately, the tool did a lot of good for our software.   <br />  <br /><span style="font-weight: bold">The New ANTS 4.0</span>   <br />When version 4.0 of ANTS came out, I was very interested to see what they had to offer. I was pleasantly surprised with what I found. The ANTS team completely re-wrote their profiling engine AND the UI. Both of these re-writes have been a home run thus far.   <br />  <br /><span style="font-weight: bold">Accuracy    <br /></span>The most important improvement is the accuracy of the results. I have used the new product to find several hot spots. This time around, it is extremely accurate. For instance, when I profiled a particular action, ANTS found a hot spot that was taking 27% of the time. When I implemented caching for that particular code and timed the action again, I got a 26% improvement from my fix. This is the type of accuracy I have been waiting for. I have had several other successful finds like that.   <br />  <br />One other notable feature: recognition of the JIT compile time. In one particular action with a rather deep call stack, ANTS was able to tell me that 38% of my time was spent in the JIT compilation. It was useful to know where the time was being spent.   <br />  <br /><span style="font-weight: bold">The Timeline</span>   <br />OK, now to the UI improvements. ANTS 4.0 features an interactive time line of the execution. You have the ability to track any system counters, but it tracks the processor utilization by default. As it goes, it marks the important events such as button clicks and window events. At any given time, you can select any subset of the time to profile. You can even bookmark those subsets so you can look at it later. They even allow you to zoom in to the graph. In all, this is a GREAT feature.   <br /><img src="http://bilzmoude.googlepages.com/Ants.Navigation.GIF" />   <br /><span style="font-weight: bold">Tree View</span>   <br />In the previous versions, the primary view of the data was a data grid. The data grid has not been removed in 4.0, but it is no longer the primary view. Instead, it is a tree view. This is great as it is a much more natural visualization of the data.   <br /><img src="http://bilzmoude.googlepages.com/Ants.TreeView.GIF" />   <br />  <br /><span style="font-weight: bold">Graph View</span>   <br />As nice as the tree view is for finding problems, the graph view is best for communicating bottlenecks to others. You have control over which nodes in this graph are shown. Take a look:   <br /><img src="http://bilzmoude.googlepages.com/Ants.GraphView.GIF" />   <br />  <br /><span style="font-weight: bold">Code View</span>   <br />Finally, the code view is similar to previous versions of ANTS. One notable new feature is the ability to navigate the code from this view. You can now click on the methods in the view and it will take you to that method. I have found myself using it a lot.   <br /><img src="http://bilzmoude.googlepages.com/Ants.CodeView.GIF" />   <br />  <br /><span style="font-weight: bold">Conclusion</span>   <br />In all, this is more than a version upgrade. It is mostly a new tool. You can find several similarities with the old tool, but you will find more differences... in a good way. Kudos to the team that put this together. It has become one of my favorite tools in my development tool belt. <span style="font-weight: bold">   <br /></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2008-09-12 12:28:00</wp:post_date>
		<wp:post_date_gmt>2008-09-12 12:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>have-you-seen-the-new-ants-profiler</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>38112</wp:comment_id>
			<wp:comment_author><![CDATA[plans cul rhone-alpes]]></wp:comment_author>
			<wp:comment_author_email>rickgerace@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://esfrance.net/</wp:comment_author_url>
			<wp:comment_author_IP>172.245.113.88</wp:comment_author_IP>
			<wp:comment_date>2015-03-09 22:59:08</wp:comment_date>
			<wp:comment_date_gmt>2015-03-09 22:59:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing your thoughts. I really appreciate your efforts 
and I will be waiting for your further post thanks once again.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29343</wp:comment_id>
			<wp:comment_author><![CDATA[Learn Additional]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://biocrats.co.in/biocrat_portal/bench-craft-company-discloses-tips-making-your-home-based-business</wp:comment_author_url>
			<wp:comment_author_IP>191.101.245.39</wp:comment_author_IP>
			<wp:comment_date>2014-09-23 02:43:16</wp:comment_date>
			<wp:comment_date_gmt>2014-09-23 02:43:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Learn Additional...</strong>

Have you seen the new ANTS profiler? « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28844</wp:comment_id>
			<wp:comment_author><![CDATA[www.facebook.com]]></wp:comment_author>
			<wp:comment_author_email>rhodalaporte@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/AtlantaTowingCompany</wp:comment_author_url>
			<wp:comment_author_IP>192.99.116.47</wp:comment_author_IP>
			<wp:comment_date>2014-09-03 22:13:22</wp:comment_date>
			<wp:comment_date_gmt>2014-09-03 22:13:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good blog you've got here.. It's hard to find excellent writing like yours nowadays.
I really appreciate people like you! Take care!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37504</wp:comment_id>
			<wp:comment_author><![CDATA[Bench Craft Company online realtors]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.gaiaonline.com/journal/?mode=view&amp;post_id=36088665&amp;u=37345555</wp:comment_author_url>
			<wp:comment_author_IP>23.247.207.225</wp:comment_author_IP>
			<wp:comment_date>2015-02-25 15:13:35</wp:comment_date>
			<wp:comment_date_gmt>2015-02-25 15:13:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Bench Craft Company online realtors...</strong>

Have you seen the new ANTS profiler? « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34575</wp:comment_id>
			<wp:comment_author><![CDATA[Freddie]]></wp:comment_author>
			<wp:comment_author_email>lucio.derr@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://ericandersen983.skyrock.com/profil/</wp:comment_author_url>
			<wp:comment_author_IP>23.247.237.148</wp:comment_author_IP>
			<wp:comment_date>2015-01-09 21:01:32</wp:comment_date>
			<wp:comment_date_gmt>2015-01-09 21:01:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Link exchange is nothing else but it is simply placing the other person's 
blog link on your page at suitable place and other person will also do similar in support of you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80416</wp:comment_id>
			<wp:comment_author><![CDATA[Cleta]]></wp:comment_author>
			<wp:comment_author_email>sangcorbett@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.expressupdate.com/places/ITROU7KT</wp:comment_author_url>
			<wp:comment_author_IP>104.223.44.100</wp:comment_author_IP>
			<wp:comment_date>2016-02-19 04:38:18</wp:comment_date>
			<wp:comment_date_gmt>2016-02-19 04:38:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Normally I don't leatn post oon blogs, but I wish to ssay that this write-up very compelled 
me to take a look at and do it! Your writing taste hass been surprised me.
Thank you, very nice post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80418</wp:comment_id>
			<wp:comment_author><![CDATA[Kelli]]></wp:comment_author>
			<wp:comment_author_email>zeldaemma@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bedbugs.jigsy.com</wp:comment_author_url>
			<wp:comment_author_IP>23.105.50.28</wp:comment_author_IP>
			<wp:comment_date>2016-02-20 04:46:19</wp:comment_date>
			<wp:comment_date_gmt>2016-02-20 04:46:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Heyy there! I've been reading your website for a long time now and finally got 
the bravery tto go ahead andd give you a shout out from  Huffman Texas!
Just wanted to tell you keep up the fantastic job!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Why you REALLY need to think about your interfaces</title>
		<link>http://houseofbilz.com/archives/2008/09/22/why-you-really-need-to-think-about-your-interfaces/</link>
		<pubDate>Mon, 22 Sep 2008 12:29:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/09/22/why-you-really-need-to-think-about-your-interfaces/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f09%2fwhy-you-really-need-to-think-about-your.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f09%2fwhy-you-really-need-to-think-about-your.html" /></a>   <br />  <p>I was working on performance tuning an application the other day.&#160; The code in this post is a rough approximation of the problem I had to solve.&#160; The application defines a plug-in interface that the plug-in developers can implement.&#160; The plug-in gets initialized with a dictionary and and the application talks through the rest of the interface.</p>  <p>   <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:d6b6dda9-3e31-4ffc-a589-076ad08d52be" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IPlugin   
{        
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Initialize(Dictionary</span><span style="color: #000000;">&lt;</span><span style="color: #0000FF;">string</span><span style="color: #000000;">, Information</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> dataLibrary);
    </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> TalkToMe(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message);
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
</p>

<p>The initialization from the application is simple:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:0e1639c0-a9ef-43ac-9ef7-0d4cf68082ae" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SetUpPlugin(IPlugin plugin)   
{
    Dictionary</span><span style="color: #000000;">&lt;</span><span style="color: #0000FF;">string</span><span style="color: #000000;">, Information</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> data </span><span style="color: #000000;">=</span><span style="color: #000000;"> PopulateDictionary();
    plugin.Initialize(data);    
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>When this interface was originally written, the dictionary was populated using XML files.&#160; The dictionary only included about two hundred items, but over time, this dictionary became more complex.&#160; It grew out of the XML files, and into a database.&#160; It grew into tens of thousands of items.&#160; It is not hard to tell that there is a performance bottleneck here as the application populates this many items from the database.&#160; It turns out that the plug-ins don't tend to need a lot of the data in the dictionary, though I cannot predict what it will need to lookup.&#160; To populate the entire dictionary takes a TON of time, and it is completely unnecessary.</p>

<p>Unfortunately, I am bound to this interface, which is already published to our plug-in developers.&#160; My first inclination was to write a custom Dictionary&lt;&gt; class.&#160; It would be really nice if .NET would let me do something like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:f513dde0-453a-4a29-80f3-e5c3e02ee1e0" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> DataLibrary : Dictionary</span><span style="color: #000000;">&lt;</span><span style="color: #0000FF;">string</span><span style="color: #000000;">, Information</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">   
{    
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> IApplicationLogic _logic;    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> DataLibrary(IApplicationLogic logic)    
    {        
        _logic </span><span style="color: #000000;">=</span><span style="color: #000000;"> logic;    
    }     
    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">override</span><span style="color: #000000;"> Information </span><span style="color: #0000FF;">this</span><span style="color: #000000;">[</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> key]    
    {        
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;">        
        {            
            </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> _logic.LookupInformation(key);        
        }    
    }    
    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">override</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Count    
    {        
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;">        
        {            
            </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> _logic.InformationCount;        
        }    
    }    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> etc</span><span style="color: #008000;">
</span><span style="color: #000000;">}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This would solve my needs completely if only methods were not sealed by default in C#.&#160; Unfortunately, they are, and .NET didn't make the Dictionary members virtual.&#160; In fact, it turns out, I am completely coded into a corner since I can't change the interface.&#160; If only the IPlugin interface were thought through a bit further, I wouldn't be in this predicament.&#160; </p>

<p>All that really needed to happen was for IPlugin.Initialize to take an IDictionary&lt;string, Information&gt; instead of a Dictionary&lt;string, Information&gt; (notice the 'I' in front of the Dictionary, indicating that it is an interface as opposed to a concrete class.)&#160; If this were only the case, I would be able to implement the interface using a database lookup and move on with my life.</p>

<p>Now, I really don't have any solution other than asking for an interface change to all of the plug-in writers for my application.&#160; This not only looks bad, but it IS bad.&#160; I suppose might be able to come up with something crazy using Dynamic Proxies, but that would get rather ugly rather quickly.</p>

<p>The more you think about it, the choice of Dictionary&lt;string, Information&gt; was bad for other reasons as well.&#160; The Dictionary class is a read/write class.&#160; We do not want our plug-in authors to modify the dictionary -- we only want them to look up data.&#160; We don't need them to iterate over the data, and we don't need to give them a vectored view of the keys or the values.</p>

<p>The message I am trying to get through here is simple:&#160; When you are creating an interface for public use, you need to think hard about what that interface looks like.&#160; Avoid concrete data passing when interfaces are available (IDictionary instead of Dictionary).&#160; These interfaces don't get to change much.&#160; They aren't as flexible as the internal code.&#160; Please, think about your interfaces.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2008-09-22 12:29:00</wp:post_date>
		<wp:post_date_gmt>2008-09-22 12:29:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-you-really-need-to-think-about-your-interfaces</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>30149</wp:comment_id>
			<wp:comment_author><![CDATA[CLICK FOR SOURCE]]></wp:comment_author>
			<wp:comment_author_email>VannattaPemberton468@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://databaseforpeace.com/go-golfing-and-improve-your-game-with-these-tips/</wp:comment_author_url>
			<wp:comment_author_IP>54.68.95.189</wp:comment_author_IP>
			<wp:comment_date>2014-10-10 23:20:38</wp:comment_date>
			<wp:comment_date_gmt>2014-10-10 23:20:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great beat ! I wish to apprentice at the same time as you amend your website, how could i subscribe for a weblog web site? The account aided me a applicable deal. I have been tiny bit familiar of this your broadcast provided vibrant transparent concept]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Day of .NET -- Ann Arbor</title>
		<link>http://houseofbilz.com/archives/2008/09/24/day-of-net-ann-arbor/</link>
		<pubDate>Wed, 24 Sep 2008 12:36:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/09/24/day-of-net-ann-arbor/</guid>
		<description></description>
		<content:encoded><![CDATA[I got word this morning that I will be speaking at the <a href="http://www.dayofdotnet.org/AnnArbor/Fall2008/">Ann Arbor Day of .NET.</a>   <br />  <br />I am excited about this since it is my first conference. I have given public seminars, and recently gave a talk at the <a href="http://www.aadnd.org/">Ann Arbor .NET Users' Group</a>, but this is my first conference.   <br />  <br />My talk will be about testing WinForms apps using NUnit. I have been developing my technique for testing WinForms GUIs for over a year now and I have learned a lot about the topic. It should be fun!   <br />  <br />This conference is free, so get registered soon!   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2008-09-24 12:36:00</wp:post_date>
		<wp:post_date_gmt>2008-09-24 12:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>day-of-net-ann-arbor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>80523</wp:comment_id>
			<wp:comment_author><![CDATA[ms tags]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://itunes.apple.com/us/book/id1017624595</wp:comment_author_url>
			<wp:comment_author_IP>27.11.235.207</wp:comment_author_IP>
			<wp:comment_date>2016-03-10 15:22:08</wp:comment_date>
			<wp:comment_date_gmt>2016-03-10 15:22:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ms tags...</strong>

Day of .NET &#8212; Ann Arbor &laquo; Brian Genisio&#039;s House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>UI Automation Not Fit for Command!</title>
		<link>http://houseofbilz.com/archives/2008/10/04/ui-automation-not-fit-for-command/</link>
		<pubDate>Sat, 04 Oct 2008 12:39:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/04/ui-automation-not-fit-for-command/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fui-automation-not-fit-for-command.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fui-automation-not-fit-for-command.html" /></a>   <br />I have been spending a lot of time exploring automation testing frameworks that can be driven using NUnit. I am exploring the following:   <br />  <ul>   <li>Roll Your Own </li>    <li><a href="http://nunitforms.sourceforge.net/">NUnit Forms</a> </li>    <li><a href="http://www.ranorex.net/">Ranorex</a> </li>    <li><a href="http://msdn.microsoft.com/en-us/library/ms747327.aspx">Microsoft UI Automation</a> </li> </ul> I am finding that the &quot;Roll Your Own&quot; method is the most versatile method. I will write about this method later. Today, I feel like a more negative tone. I will say it now:   <br />  <br /><span style="font-weight: bold">Microsoft's UI Automation Framework is NOT fit for command.</span>   <br />  <br />Don't get me wrong... there are a lot of easy-to-use systems in .NET. BUT, I find the Code DOM easier to use than the UI Automation tools. If you have ever used the Code DOM, you know that I am saying a lot with this.   <br />  <br />Here are my issues with the UI Automation Framework:   <br />  <ul>   <li>UI Spy Doesn't Ship with Visual Studio 2008. If you want UI Spy, you need to download the<a href="http://www.microsoft.com/downloads/details.aspx?familyid=4377F86D-C913-4B5C-B87E-EF72E5B4E065&amp;displaylang=en"> SDK for Windows Vista</a>. Don't try to use this framework without it. You will fail. </li>    <li>The UI Spy tool is buggy and crashy and slow. Did I mention that this tool is essential? </li>    <li>As much as I research it, I can't figure out how to do the first two things I tried to do: Click on a LinkLabel and enter text into a RichTextBox. I know how to click on a button and enter text into a TextBox, but the more complicated versions of this are too difficult, aparently. </li>    <li>The API is terribly difficult to write AND read. Not intuitive at all! </li>    <li>Finding controls using the NameProperty doesn't use the &quot;Name&quot; property. It uses the &quot;Text&quot; property. If you want to search for a control using the &quot;Name&quot; property, you need to use AutomationIdProperty. Did I mention that the API is awful? This is why you need the UI Spy tool. </li>    <li>The framework itself is slow </li>    <li>You need a separate thread to catch modal dialogs. Have you ever tried to write tests that utilize multiple threads? </li> </ul> These are the problems I have run into with just a few hours of use. I need to mention that NUnit Forms, Ranorex and &quot;Roll Your Own&quot; tests were all easier to write/read/execute with the same level of effort.  ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2008-10-04 12:39:00</wp:post_date>
		<wp:post_date_gmt>2008-10-04 12:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ui-automation-not-fit-for-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>I&#039;m speechless...</title>
		<link>http://houseofbilz.com/archives/2008/10/06/im-speechless-2/</link>
		<pubDate>Mon, 06 Oct 2008 12:43:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/06/im-speechless-2/</guid>
		<description></description>
		<content:encoded><![CDATA[Are you going to PDC in a few weeks? Looking forward to the free hard drive with &quot;all the bits?&quot; Then THIS is for you...   <br />  <br /><object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/Vv2M4aIMc-8&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;fs=1" /><param name="allowFullScreen" value="true" /><embed src="http://www.youtube.com/v/Vv2M4aIMc-8&amp;color1=0xb1b1b1&amp;color2=0xcfcfcf&amp;hl=en&amp;fs=1" type="application/x-shockwave-flash" allowfullscreen="true" width="425" height="344"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2008-10-06 12:43:00</wp:post_date>
		<wp:post_date_gmt>2008-10-06 12:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>im-speechless-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>23203</wp:comment_id>
			<wp:comment_author><![CDATA[Cecile]]></wp:comment_author>
			<wp:comment_author_email>cecile.moloney@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://vimeo.com/64503419</wp:comment_author_url>
			<wp:comment_author_IP>81.18.205.158</wp:comment_author_IP>
			<wp:comment_date>2014-01-28 04:42:15</wp:comment_date>
			<wp:comment_date_gmt>2014-01-28 04:42:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This might be a great way to stay organized.  
I know my garage and additionally basement are a definite mess.
I have always been definitely devoloping on top of which makes something like this.



my blog post ... Plans For Garage Storage (<a href="https://vimeo.com/64503419" rel="nofollow">Cecile</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Language Compare part 2</title>
		<link>http://houseofbilz.com/?p=224</link>
		<pubDate>Fri, 17 Dec 2010 01:34:53 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=224</guid>
		<description></description>
		<content:encoded><![CDATA[<p>&#160;</p>  <p>Generics</p>  <p>In static languages, generics are a useful way to express your code so that the reader (and the compiler) understand the context in which you are coding.&#160; They allow different types to be used in a block of code but still maintain static typing.&#160; You can use generics in C#, unlike ActionScript which only allows Vectors to be generic.&#160; Some examples of using generics:</p>  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">var dictionary = new Dictionary&lt;string, int&gt; {
    {&quot;A&quot;, 1},
    {&quot;B&quot;, 22},
    {&quot;C&quot;, 33}
};

int value = dictionary[&quot;B&quot;];
string foo = dictionary[5]; // compiler error</pre>

<p>You can define your own generic classes very easily:</p>

<pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public class ImmutableContainer&lt;T&gt;
{
    public T Value { get; private set; }
        
    public ImmutableContainer(T value)
    {
        Value = value;
    }
}</pre>

<h4>&#160;</h4>

<h4>Iterators</h4>

<p>Another concept found in C# without an ActionScript analog is iterators.&#160; Iterators make it very easy to iterate over any collection, no matter what type of collection it is – as long as the collection implements <strong>IEnumerable&lt;T&gt;</strong> which implements <strong>IEnumerator&lt;T&gt;</strong>. </p>

<p>An example of a custom (albeit wordy) iterator:</p>

<pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public class RandomCollection : IEnumerable&lt;int&gt;
{
    private readonly int size;

    public RandomCollection(int size)
    {
        this.size = size;
    }

    public IEnumerator&lt;int&gt; GetEnumerator()
    {
        return new RandomEnumerator(size);
    }

    System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    private class RandomEnumerator : IEnumerator&lt;int&gt;
    {
        private readonly Random random = new Random();
        private readonly int size;
        private int count;

        public RandomEnumerator(int size)
        {
            this.size = size;
            Reset();
        }

        public int Current { get; private set; }
        object System.Collections.IEnumerator.Current { get { return Current; } }

        public bool MoveNext()
        {
            if (count++ &gt;= size)
                return false;

            Current = random.Next();
            return true;
        }

        public void Reset()
        {
            count = 0;
        }

        public void Dispose() { }
    }
}</pre>

<p>By creating a class that implements <strong>IEnumerable&lt;T&gt;</strong>, it can now be used in a <strong>foreach</strong> loop without any trouble:</p>

<pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">var randoms = new RandomCollection(5);

foreach (int random in randoms)
{
    Console.WriteLine(random);
}</pre>

<p>All of this makes use of generics, though it doesn’t have to.&#160; This same pattern can be implemented in ActionScript, but there is no built-in language or framework support the way C# and .Net have.&#160; LINQ in .Net make heavy use of <strong>IEnumerable&lt;T&gt;</strong> by allowing any collection or set of data to participate.</p>

<p>In reality, though, you really don’t want to write that <strong>IEnumerable&lt;T&gt;</strong> implementation every time you want to implement an iterator.&#160; This is where C# shines.&#160; C# introduced the <strong>yield</strong> keyword in version 2.0 which greatly reduces the headaches of writing iterators. The following code completely replaces the functionaly of the <strong>RandomCollection</strong> class, but maintains the same lazy evaluation:</p>

<pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public static IEnumerable&lt;int&gt; GetRandoms(int size)
{
    var random = new Random();

    for (int i = 0; i &lt; size; i++)
        yield return random.Next();
}</pre>

<p>As you see, the power and expressiveness of the <strong>yield</strong> keyword is enormous.&#160; LINQ makes use of <strong>yield</strong> in almost every feature in order to reduce the code base but increase the readability and maintainability.&#160; I am not going into the details in how yield works, but you can read more about it here.</p>

<h4>Attributes</h4>

<p>C# has support for meta-data that describes methods, classes and variables called “Attributes”.&#160; They are equivalent to “Metadata Tags” in ActionScript.&#160; Attributes are used for many reasons in C#, but for the purpose of example, I will illustrate Attributes via unit testing.</p>

<p>NUnit is a very popular unit testing framework in .Net.&#160; The test runner reflects on all of the classes in an assembly to find classes that are decorated with the <strong>[TestFixture]</strong> attribute.&#160; When it finds one, it instantiates it and then finds all the methods with the <strong>[Test]</strong> attribute.</p>

<pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">[TestFixture]
public class IntTests
{
    [Test]
    public void One_plus_one_equals_two()
    {
        Assert.That(1 + 1, Is.EqualTo(2));
    }
}</pre>

<h4>Lamdas</h4>

<p>Many languages allow for lambda expressions to define anonymous functions.&#160; C# does.&#160; ActionScript does not.&#160; This is not a big problem, since ActionScript does allow for anonymous functions, but lambda expressions are a much more succinct and expressive way to code.</p>

<pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public void Calculate_With_Anonymous_Function()
{
    calculator.Calculate(delegate(int result) { return &quot;Received: &quot; + result; });   
}

public void Calculate_With_Lambda()
{
    calculator.Calculate(result =&gt; &quot;Received: &quot; + result);
}</pre>

<h4>XML Literals</h4>

<p>ActionScript has XML Literals and it can come in handy.&#160; Although C# does not have support for XML Literals, Visual Basic .NET does.&#160; Here is a quick example of Visual Basic .Net code that generates XML directly from code:</p>

<pre class="brush: vb; ruler: true; gutter: false; toolbar: false;">Dim person As XElement =
    &lt;person&gt;
        &lt;first&gt;Brian&lt;/first&gt;
        &lt;last&gt;Genisio&lt;/last&gt;
    &lt;/person&gt;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2010-12-17 01:34:53</wp:post_date>
		<wp:post_date_gmt>2010-12-17 01:34:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Test With CoffeeScript</title>
		<link>http://houseofbilz.com/?p=351</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=351</guid>
		<description></description>
		<content:encoded><![CDATA[Here is some coffeescript

<pre class="brush: coffeescript; ruler: true; gutter: false; toolbar: false;">

foo = (bar) ->
    "baz #{bar}"

</pre>

End code]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date>2011-11-07 10:50:16</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Winforms Automation Extensions</title>
		<link>http://houseofbilz.com/archives/2008/10/12/winforms-automation-extensions/</link>
		<pubDate>Sun, 12 Oct 2008 12:49:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/04/21/winforms-automation-extensions/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fwinforms-automation-extensions.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fwinforms-automation-extensions.html" /></a>   <br />In preparation for my <a href="http://www.dayofdotnet.org/AnnArbor/Fall2008/Sessions.aspx#10">talk next Saturday</a>, I am publishing the code that I use to help drive my WinForms application via NUnit tests. The idea is simple -- instantiate the form and use extension methods on the controls to find the controls and drive from there.   <br />  <br />This is a preliminary release. I will update this file as I find more functionality s needed. It turns out that you don't need much (besides some creativity) to automate WinForms UIs. This set of extension methods will help you get started.   <br />  <br />Download <a href="http://bilzmoude.googlepages.com/FormExtensions.cs">WAX -- Winforms Automation Extensions</a>   <br />  <br />To run your forms in NUnit, you just need create/show it in the setup and close it in the teardown:   <br />  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [SetUp]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> SetUp()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     _testForm = <span style="color: #0000ff">new</span> FormToTest();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     _testForm.Show();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span> }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span> [TearDown]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> TearDown()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>     _testForm.Close();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span> }</pre>
  </div>
</div>

<br />Here is an example of finding a button by name, clicking on it and validating that the app changed the text of the label: 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [Test]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Test_That_Button_Click_Changes_Text()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>    var button = _testForm.FindByName&lt;Button&gt;(<span style="color: #006080">&quot;Button1&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>    var label = _testForm.FindByName&lt;Label&gt;(<span style="color: #006080">&quot;Label1&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>    button.SimulateClick();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>    Assert.That(label.Text, Is.EqualTo(<span style="color: #006080">&quot;Hello World&quot;</span>));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span> }</pre>
  </div>
</div>
Note that the <span style="font-weight: bold">FindByName</span> method is just a specialization of the <span style="font-weight: bold">Find </span>method. The <span style="font-weight: bold">Find</span> method takes a delegate you can use to find your controls using any method you wish. For instance, say you want to find a control with a known tag: 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [Test]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Test_Find_With_Custom_Filter()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     var l1 = _testForm.Find&lt;Control&gt;(target =&gt; (target.Tag <span style="color: #0000ff">as</span> <span style="color: #0000ff">string</span>) == <span style="color: #006080">&quot;FindTag&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     Assert.That(l1.Name, Is.EqualTo(<span style="color: #006080">&quot;ListBox1&quot;</span>));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span> }</pre>
  </div>
</div>
In my experience, driving the controls directly is the easiest way to automate the UI. For instance, if you have a list control that you want to set, you might write code like this: 

<br />

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [Test]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Test_Setting_ListBox()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     var listBox = _testForm.FindByName&lt;ListBox&gt;(<span style="color: #006080">&quot;ListBox1&quot;</span>);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     listBox.SelectedIndex = 1;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>     Assert.That(listBox.SelectedItem.ToString(), Is.EqualTo(<span style="color: #006080">&quot;The Test&quot;</span>));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span> }</pre>
  </div>
</div>
If you have any questions or thoughts about this code, please contact me. I want to grow this code over time, and feedback is very welcome. 

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2008-10-12 12:49:00</wp:post_date>
		<wp:post_date_gmt>2008-10-12 12:49:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>winforms-automation-extensions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>29388</wp:comment_id>
			<wp:comment_author><![CDATA[free casual sex websites casualcommando.wordpress.com/free-casual-sex-dating-sites/]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://casualcommando.wordpress.com/free-casual-sex-dating-sites/</wp:comment_author_url>
			<wp:comment_author_IP>198.23.152.208</wp:comment_author_IP>
			<wp:comment_date>2014-09-24 23:15:47</wp:comment_date>
			<wp:comment_date_gmt>2014-09-24 23:15:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>free casual sex websites casualcommando.wordpress.com/free-casual-sex-dating-sites/...</strong>

Winforms Automation Extensions « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25056</wp:comment_id>
			<wp:comment_author><![CDATA[http://welcome.deittisivusto.fi]]></wp:comment_author>
			<wp:comment_author_email>blancagraebner@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://bit.ly/1jcDTy2</wp:comment_author_url>
			<wp:comment_author_IP>184.154.174.204</wp:comment_author_IP>
			<wp:comment_date>2014-04-18 11:54:48</wp:comment_date>
			<wp:comment_date_gmt>2014-04-18 11:54:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can definitely see your enthusiasm in the article 
you write. The sector hopes for more passionate writers such as 
you who are not afraid to mention how they believe.
Always follow your heart.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29149</wp:comment_id>
			<wp:comment_author><![CDATA[onlinedating]]></wp:comment_author>
			<wp:comment_author_email>mozelle_stephenson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://teenteng.com/TJ62/tab:info</wp:comment_author_url>
			<wp:comment_author_IP>23.94.38.124</wp:comment_author_IP>
			<wp:comment_date>2014-09-17 08:00:22</wp:comment_date>
			<wp:comment_date_gmt>2014-09-17 08:00:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is very interesting, You're a very skilled blogger.

I've joined your rss feed and look forward to 
seeking more of your magnificent post. Also, I've shared your website in my social networks!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29091</wp:comment_id>
			<wp:comment_author><![CDATA[dating reviews dating]]></wp:comment_author>
			<wp:comment_author_email>alishaouttrim@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.lama-erlebnis.ch/UserProfile/tabid/125/userId/246856/language/de-CH/Default.aspx</wp:comment_author_url>
			<wp:comment_author_IP>192.230.49.53</wp:comment_author_IP>
			<wp:comment_date>2014-09-14 19:19:17</wp:comment_date>
			<wp:comment_date_gmt>2014-09-14 19:19:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I must thank you for the efforts you've put in writing this blog.

I am hoping to check out the same high-grade blog posts from you in the future as 
well. In truth, your creative writing abilities has motivated me to get my own site now ;
)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79246</wp:comment_id>
			<wp:comment_author><![CDATA[test]]></wp:comment_author>
			<wp:comment_author_email>aleishabrack@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://oyoyinc.com</wp:comment_author_url>
			<wp:comment_author_IP>199.195.157.119</wp:comment_author_IP>
			<wp:comment_date>2015-11-10 12:51:48</wp:comment_date>
			<wp:comment_date_gmt>2015-11-10 12:51:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You could definitely see your expertise within the work 
you write. The sector hopes for even more passionate writers like you who aren't afraid to mention how they believe.
Always go after your heart.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Getting Your NUnit Tests to Run as STA</title>
		<link>http://houseofbilz.com/archives/2008/10/14/getting-your-nunit-tests-to-run-as-sta/</link>
		<pubDate>Tue, 14 Oct 2008 12:46:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/14/getting-your-nunit-tests-to-run-as-sta/</guid>
		<description></description>
		<content:encoded><![CDATA[As a follow-up to my recent post on my <a href="http://brian.genisio.org/2008/10/winforms-automation-extensions.html">Winforms Automation Extensisons</a> post, I realized that I forgot to mention a very important detail.   <br />  <br />In many cases, WinForms require to be executed in a Single Threaded Apartment (STA). I write all of my tests in the TestDriven.NET test runner, which runs in the STA by default, but NUnit does not. Resharper also uses the NUnit test runner, so it also runs in MTA by default.   <br />  <br />To tell NUnit to run in the STA (and therefore, Resharper), you need to add some data to your app.config file. If you do not already have one, create a file in your test assembly called app.config. Add the following XML:   <br />  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">&lt;?</span><span style="color: #800000">xml</span> <span style="color: #ff0000">version</span><span style="color: #0000ff">=&quot;1.0&quot;</span> <span style="color: #ff0000">encoding</span><span style="color: #0000ff">=&quot;utf-8&quot;</span> ?<span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">&lt;</span><span style="color: #800000">configuration</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>   <span style="color: #0000ff">&lt;</span><span style="color: #800000">configSections</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     <span style="color: #0000ff">&lt;</span><span style="color: #800000">sectionGroup</span> <span style="color: #ff0000">name</span><span style="color: #0000ff">=&quot;NUnit&quot;</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>       <span style="color: #0000ff">&lt;</span><span style="color: #800000">section</span> <span style="color: #ff0000">name</span><span style="color: #0000ff">=&quot;TestRunner&quot;</span> <span style="color: #ff0000">type</span><span style="color: #0000ff">=&quot;System.Configuration.NameValueSectionHandler&quot;</span><span style="color: #0000ff">/&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">sectionGroup</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>   <span style="color: #0000ff">&lt;/</span><span style="color: #800000">configSections</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>   <span style="color: #0000ff">&lt;</span><span style="color: #800000">NUnit</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>     <span style="color: #0000ff">&lt;</span><span style="color: #800000">TestRunner</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>       <span style="color: #0000ff">&lt;</span><span style="color: #800000">add</span> <span style="color: #ff0000">key</span><span style="color: #0000ff">=&quot;ApartmentState&quot;</span> <span style="color: #ff0000">value</span><span style="color: #0000ff">=&quot;STA&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">TestRunner</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>   <span style="color: #0000ff">&lt;/</span><span style="color: #800000">NUnit</span><span style="color: #0000ff">&gt;</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span> <span style="color: #0000ff">&lt;/</span><span style="color: #800000">configuration</span><span style="color: #0000ff">&gt;</span></pre>
  </div>
</div>
Presto! Tests will run in the STA from now on. 

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2008-10-14 12:46:00</wp:post_date>
		<wp:post_date_gmt>2008-10-14 12:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-your-nunit-tests-to-run-as-sta</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>52463</wp:comment_id>
			<wp:comment_author><![CDATA[NEWS LIFESTYLE]]></wp:comment_author>
			<wp:comment_author_email>winnielumpkins@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://Signadollarproject.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.177.162.158</wp:comment_author_IP>
			<wp:comment_date>2015-06-15 09:16:13</wp:comment_date>
			<wp:comment_date_gmt>2015-06-15 09:16:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Besides, you also need very steady hands even if you're 
going to use stencils. This was one of the first tattoos popularized by Navy men who would choose this style to symbolize direction and 
a safe return home from battle. Tattoos were once a 
sign of criminal affiliation or a punitive mark to signify some sort of wrong 
doing, especially in Eastern history. Online Tattoo membership 
sites charge a small one time fee, but it is well worth it because it will give you access to a goldmine of tattoo design help not found anywhere else.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Build Your Own Spy Utility</title>
		<link>http://houseofbilz.com/archives/2008/10/14/build-your-own-spy-utility/</link>
		<pubDate>Tue, 14 Oct 2008 12:47:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/14/build-your-own-spy-utility/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fbuild-your-own-spy-utility.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fbuild-your-own-spy-utility.html" /></a>   <br />  <div>In support of my talk on Saturday, I wanted to publish another little bit of code that I have found extremely useful. There are a lot of spy utilities out there: Spy++, ManagedSpy, UISpy, etc. They all work OK, but I have found on many occasions that I wanted my spy utility to do X, Y or Z.    <br />    <br />So, I built my own spy utility. Start with this form, and add any spy functionality that you need to it. Here is the code:</div>  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 96.66%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; height: 426px; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">using</span> System.Drawing;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">using</span> System.Windows.Forms;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span> <span style="color: #0000ff">namespace</span> RecipeBox.Tests.GUI_Tests</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Spy : Form</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>         <span style="color: #0000ff">readonly</span> SplitContainer _splitContainer = <span style="color: #0000ff">new</span> SplitContainer {Dock = DockStyle.Fill};</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>         <span style="color: #0000ff">readonly</span> TreeView _controlTree = <span style="color: #0000ff">new</span> TreeView {Dock = DockStyle.Fill};</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>         <span style="color: #0000ff">readonly</span> PropertyGrid _properties = <span style="color: #0000ff">new</span> PropertyGrid {Dock = DockStyle.Fill};</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>         <span style="color: #0000ff">public</span> Spy()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>             Size = <span style="color: #0000ff">new</span> Size(640, 480);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>             _splitContainer.Panel1.Controls.Add(_controlTree);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span>             _splitContainer.Panel2.Controls.Add(_properties);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span>             Controls.Add(_splitContainer);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span>             _controlTree.NodeMouseClick += (sender, e) =&gt; _properties.SelectedObject = e.Node.Tag;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span>         <span style="color: #0000ff">public</span> Spy(Control rootControl) : <span style="color: #0000ff">this</span>()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span>             _controlTree.Nodes.Add(GetTreeNode(rootControl));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  26:</span>         <span style="color: #0000ff">private</span> <span style="color: #0000ff">static</span> TreeNode GetTreeNode(Control control)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  27:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  28:</span>             var node = <span style="color: #0000ff">new</span> TreeNode(control + <span style="color: #006080">&quot; (&quot;</span> + control.Name + <span style="color: #006080">&quot;)&quot;</span>) {Tag = control};</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  29:</span>             <span style="color: #0000ff">foreach</span> (Control childControl <span style="color: #0000ff">in</span> control.Controls)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  30:</span>                 node.Nodes.Add(GetTreeNode(childControl));</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  31:</span>             <span style="color: #0000ff">return</span> node;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  32:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  33:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  34:</span> }</pre>
  </div>
</div>

<div>And here is how you might use the custom spy: 
  <br /></div>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [Test, Explicit]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Spy_On_TestForm()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     var testForm = <span style="color: #0000ff">new</span> TestForm();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     testForm.Show();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>     var spy = <span style="color: #0000ff">new</span> Spy(testForm);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>     spy.Show();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>     <span style="color: #0000ff">while</span> (<span style="color: #0000ff">true</span>)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>         Application.DoEvents();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span> }</pre>
  </div>
</div>

<div>And this is what it looks like: </div>

<div><a href="http://4.bp.blogspot.com/_28yJ_7iJX7o/SPVIMZzbCaI/AAAAAAAAABk/pXS48C0qVIM/s1600-h/Spy.GIF"><img style="margin: 0px 10px 10px 0px; float: left; cursor: hand" id="BLOGGER_PHOTO_ID_5257187517947120034" border="0" alt="" align="right" src="http://4.bp.blogspot.com/_28yJ_7iJX7o/SPVIMZzbCaI/AAAAAAAAABk/pXS48C0qVIM/s800/Spy.GIF" width="508" height="271" /></a></div>

<div>&#160;</div>

<div>&#160;</div>

<div>&#160;</div>

<div>&#160;</div>

<div>&#160;</div>

<div>
  <br /></div>

<div>&#160;</div>

<div>&#160;</div>

<div>&#160;</div>

<div>&#160;</div>

<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2008-10-14 12:47:00</wp:post_date>
		<wp:post_date_gmt>2008-10-14 12:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>build-your-own-spy-utility</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>GUI Testing Resources</title>
		<link>http://houseofbilz.com/archives/2008/10/18/gui-testing-resources/</link>
		<pubDate>Sat, 18 Oct 2008 12:48:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/18/gui-testing-resources/</guid>
		<description></description>
		<content:encoded><![CDATA[So, I just gave my GUI Testing in .NET talk for the first time. I think it went pretty well. If you have any feedback, please feel free to comment or email me. I'd love to hear how to make the talk better.   <br />  <br />I am providing the demo code and the talk slides. I have a few more posts on GUI Testing .NET apps that I wrote over the past few weeks. Please feel free to read what I have to say!   <br />  <br /><a href="http://bilzmoude.googlepages.com/TestingWinForms.pdf">Presentation Slides</a>   <br /><a href="http://bilzmoude.googlepages.com/RecipeBox.zip">Demo Code</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2008-10-18 12:48:00</wp:post_date>
		<wp:post_date_gmt>2008-10-18 12:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gui-testing-resources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>My Year With TDD</title>
		<link>http://houseofbilz.com/archives/2008/10/23/my-year-with-tdd/</link>
		<pubDate>Thu, 23 Oct 2008 12:50:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/23/my-year-with-tdd/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fmy-year-with-tdd.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fmy-year-with-tdd.html" /></a>   <br />  <p>It's been over a year now since I have been developing using TDD (Test Driven Development) as my primary development practice. I wanted to reflect on what it has done for me professionally. In reality, the past year has been great for my professional career in many ways. </p>  <p>I started out in August of 2007 with what I THOUGHT was TDD. Sure, I wrote my tests before my code, but the philosophy behind it wasn't enough to be effective. It wasn't until I went to Boston for a 3-day seminar on TDD taught by <a href="http://www.netobjectives.com/bio-rob-myers">Rob Myers</a> of <a href="http://www.netobjectives.com/">NetObjectives</a> that I really understood the power and relevance of TDD. His challenge was simple -- Try it completely for 30 days. If you don't find the value in it, then move along and look for something else.</p>  <p>So, this is what I did. I spent 30 days practicing TDD the way Rob taught us. I followed the following algorithm:</p>  <p><a href="http://lh3.ggpht.com/Bilzmoude/SQEnDHyduNI/AAAAAAAAACM/jWzh3S0Rv7o/s1600-h/usb-cross[3].jpg"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="usb-cross" align="right" src="http://lh5.ggpht.com/Bilzmoude/SQEnDRlW46I/AAAAAAAAACQ/O82MfMyfz_0/usb-cross_thumb%5B1%5D.jpg?imgmax=800" width="244" height="176" /></a> </p>  <ol>   <li>Write a test </li>    <li>Watch it fail </li>    <li>Write the MINIMUM necessary to make it pass </li>    <li>Watch it go green </li>    <li>Refactor if necessary </li>    <li>Repeat </li> </ol>  <p>To be honest, it was a real exercise in self control. I wanted to take shortcuts. I wanted to write some behavior while I was there, and write the tests afterwards. But I promised myself that I would stick through it and write all of my new code in this way. </p>  <p>The benefits were immediate and profound. My methods were smaller. My classes were cohesive. My design is more extensible. My code was more readable. My classes were not tightly coupled. My units were testable, and my tests ran fast. It was amazing how quickly the prophecies of TDD came true. </p>  <p>After a year of this practice, I can honestly state that my code has less bugs. Moreover, when a bug is found in my code, I am able to write a new test immediately (due to the heightened testability of the code) that exercises the bug. Fixes happen quickly and I have a great deal of confidence that my fix doesn't break something else. I certainly can't say that about my legacy non-TDD code. </p>  <p>It is funny. I often feel like a born-again evangelical when it comes to TDD. Like a wide-eyed Christian who is eager to spread &quot;the good news&quot; every time somebody has a personal problem, I am quick to suggest TDD whenever I hear somebody talk about a coding problem. I am not the first (nor the last) to liken TDD to religion. It is fitting:</p>  <p>&quot;For Kent Beck so loved the developers, that he gave his most precious tool (TDD), that whosoever believeth in it should not write legacy code, but have everlasting code.&quot; -- Agile 3:16</p>  <p>All kidding aside, TDD has really changed my professional life. In the past year, I have met many colleagues who share my beliefs and there is a real community out there. I have become so passionate about the topic that I am even giving public talks on testing and TDD. Without TDD, I would probably be stuck on the plateau where I sat -- stagnant and stale. TDD was the kick in the ass I needed to grow as a developer. </p>  <p>Looking back, I couldn't be happier with my experience in Rob's class. He taught me what I was doing wrong, and helped me do it right. It takes someone who really KNOWS TDD to teach it to someone who doesn't. I would recommend this experience to any developer in a heartbeat.</p>  <p>Amen</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2008-10-23 12:50:00</wp:post_date>
		<wp:post_date_gmt>2008-10-23 12:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-year-with-tdd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>15377</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Myers]]></wp:comment_author>
			<wp:comment_author_email>Rob.Myers@agileInstitute.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.agileInstitute.com/</wp:comment_author_url>
			<wp:comment_author_IP>166.147.96.249</wp:comment_author_IP>
			<wp:comment_date>2012-04-23 16:53:47</wp:comment_date>
			<wp:comment_date_gmt>2012-04-23 16:53:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow! Thank you for the testimonial! People can still experience the epiphany at http://www.agileInstitute.com/courses/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>PDC -- Microsoft Azure</title>
		<link>http://houseofbilz.com/archives/2008/10/27/pdc-microsoft-azure/</link>
		<pubDate>Mon, 27 Oct 2008 12:51:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/27/pdc-microsoft-azure/</guid>
		<description></description>
		<content:encoded><![CDATA[PDC has commenced. Herds of people flocked to the keynote where the topic was infrastructure. It may not be the most sexy of topics, but it is certainly the way that Microsoft is moving with their business plan. Specifically, they talked about their new cloud OS dubbed “Microsoft Azure”. Azure is going to be a scalable infrastructure for hosting cloud applications.   <br />  <br />One of the most interesting parts of this talk for me was the actual coding demo. They have included an embedded Azure simulator for debugging. It will let you develop your cloud app in your IDE without uploading it to their servers.   <br />  <br />Another important aspect of Azure is the ability to easily add more resources to your application. Whether it be ASP.NET or Silverlight, you will be able to run your app from their Azure cloud server and scale the resources as you see fit. Need to add resources for the Christmas season? No problem. In January, you can just reduce the resources assigned.   <br />  <br />Deployment is another important aspect of the Azure system. It is very easy to deploy your application to their servers via a single upload. Because I am here at PDC, I will have access to the Azure server today. I think I will go sign up now!   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2008-10-27 12:51:00</wp:post_date>
		<wp:post_date_gmt>2008-10-27 12:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pdc-microsoft-azure</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>The Excitement that is C# 4.0</title>
		<link>http://houseofbilz.com/archives/2008/10/28/the-excitement-that-is-c-4-0/</link>
		<pubDate>Tue, 28 Oct 2008 00:53:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/28/the-excitement-that-is-c-4-0/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fexcitement-that-is-c-40.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f10%2fexcitement-that-is-c-40.html" /></a>   <br />I just got back from the &quot;Future of C#&quot; talk at PDC by Anders Hejlsberg. This was a truly inspiring talk for a geek like me. C# is evolving into a much more dynamic language. I have always been a believer of strong typing... except when I'm not... and I have been wishing for something more dynamic (such as Duck Typing). In C# 4.0, we will be seeing some significant dynamic features.   <br />  <br />In reality, the thing that has kept me away from using languages such as IronPython and IronRuby is their interoperability with strongly typed languages. I really believe in the concept of &quot;The right language for the job&quot;, but I hate the idea of sticking to that one language for the entire project. With the dynamic capabilities in C#, it will be MUCH easier to talk to Python or Ruby code. If I need to implement something really loosely (like a calculation engine), I will be able to jump into something loose. Then, when I want to work with that code in my more strongly typed environment, I will have that ability. The &quot;Right Language for the Job&quot; paradigm has just become much finer grained.   <br />  <br />So here are the details.   <br />  <br /><span style="font-weight: bold">Dynamic Keyword</span>   <br />First and foremost is the <span style="font-weight: bold">dynamic</span> keyword. This is kind of like using the <span style="font-weight: bold">object</span> keyword, but you are saying that all of your binding will be at runtime. You will loose your intelisense, of course, but you will now be able to call into methods that have not been previously defined.   <br />  <br />The neat thing about this is that you can make your statically defined classes be dynamic by implementing the IDynamicObject interface, which allows you to have access to the late binding calls.   <br />  <br /><span style="font-weight: bold">Named and Optional Parameters</span>   <br />Next is something that C++ has and C# has needed for a long time â€“ Optional Parameters. You can set defaults in your method declaration and the caller doesn't need to specify the parameters. In addition, you can name the parameters in the method calls. This is really great for readability... especially when you are passing a bool into a method that you have no idea what it does.   <br />  <br /><span style="font-weight: bold">Better COM Interoperability</span>   <br />These previous features (Optional and Named Parameters) are really useful to add to the new COM Interoperability features. Basically, pairing the dynamic and parameter features, talking to COM controls looks very natural.   <br />  <br /><span style="font-weight: bold">Covariants and Contravariants</span>   <br />Finally, but certainly not least, we are getting covariance and contravariance. This is something that has bugged me since I have started with C#. Currently, if a method takes IEnumerable&lt;BaseType&gt;, you can't pass IEnumerable&lt;DerivedType&gt;. I Hate having to convert the derived set to a base set just to pass it in. In C# 4.0, this will be fixed.   <br />  <br /><span style="font-weight: bold">Looking Forward</span>   <br />In future version of C#, we will start to see hooks into the compiler. This will open the door for Domain Specific Languages (DSL) and Meta Programming. We will also see the C# compiler as an embedded service within .NET. This means that we can run Eval(&quot;doSomething()&quot;). It also means that we can start to think about embedding C# as a scripting language for our application... much like Javascript in the HTML DOM.   <br />  <br />I am hoping to see C# 4.0 soon. Better yet, I am hoping to see C# 4.0 in the bits we get tomorrow!   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2008-10-28 00:53:00</wp:post_date>
		<wp:post_date_gmt>2008-10-28 00:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-excitement-that-is-c-4-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Speaking at GLUG.NET Lansing</title>
		<link>http://houseofbilz.com/archives/2008/11/02/speaking-at-glug-net-lansing/</link>
		<pubDate>Sun, 02 Nov 2008 17:26:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/11/02/speaking-at-glug-net-lansing/</guid>
		<description></description>
		<content:encoded><![CDATA[I will be speaking at <a href="javascript:void(0);/*1225681004271*/">GLUG.NET</a> Lansing on November 20th, 2008.&#160; My topic will be a talk I have given once before -- Castle Active Record (Don't Get Good at a CRUDy Job).&#160; Thanks to <a href="javascript:void(0);/*1225681105164*/">Jeff McWherter</a> for signing me up for this gig.&#160; I look forward to meeting those in the Lansing area.   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2008-11-02 17:26:00</wp:post_date>
		<wp:post_date_gmt>2008-11-02 17:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speaking-at-glug-net-lansing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Focusing on Functional</title>
		<link>http://houseofbilz.com/archives/2008/10/30/focusing-on-functional/</link>
		<pubDate>Thu, 30 Oct 2008 17:29:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/10/30/focusing-on-functional/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been toying with functional programming a bit lately. I have been using lambdas and Linq when it has made sense in my code. I downloaded the F# compiler tools and mucked around with it a tiny bit. I read a few blogs that talk about functional programming concepts, etc. I have enjoyed reading the elegance of the paradigm, but never really got into it much. </p>  <p>But then I sat in on an &quot;Open Space&quot; session where Scott Guthrie was talking. Most of it strayed from the standard &quot;Open Space&quot; format and was more of a Q&amp;A, but I guess this happens sometimes when big names show up. Anyways, one thing he said really stuck with me. It may not be a new idea, but it really resonated with me... I just hadn't thought about it this way before. </p>  <p>He said that in functional programming, you are declaring WHAT you want to do, instead of HOW you want to do it. In other words, in a functional language, you might describe a pattern to select from a collection (WHAT). In a more procedural language, you would do the same thing with a &quot;foreach&quot; loop (HOW). </p>  <p>This distinction isn't just semantic. It is extremely important for parallel programming. A loop is very hard to run in parallel since the compiler has a difficult time determining side effects. When you describe what you want done in a functional language, your compiler/framework CAN add parallelism. You let your tools figure out how to do the work in a parallel way. </p>  <p>It became clear to me that I need to take functional programming more seriously. Our hardware is no longer increasing in speed. Instead, the number of processors increase our computing power. If we can't figure out how to spread the work over multiple workers, we will never be able to take advantage of that power. </p>  <p>Functional languages have the potential to execute in parallel much more than procedural languages. I am making a promise to myself that I will become much more proficient in the functional paradigm. It seems to be the responsible thing to do.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2008-10-30 17:29:00</wp:post_date>
		<wp:post_date_gmt>2008-10-30 17:29:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>focusing-on-functional</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Writing Tests to Catch Memory Leaks in .NET</title>
		<link>http://houseofbilz.com/archives/2008/11/11/writing-tests-to-catch-memory-leaks-in-net/</link>
		<pubDate>Tue, 11 Nov 2008 17:30:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/11/11/writing-tests-to-catch-memory-leaks-in-net/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f11%2fwriting-tests-to-catch-memory-leaks-in.html"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fbrian.genisio.org%2f2008%2f11%2fwriting-tests-to-catch-memory-leaks-in.html" /></a>   <p>Although Microsoft will claim that it is <a href="http://support.microsoft.com/kb/318263">&quot;not possible to have a memory leak in managed code&quot;</a>, most seasoned .NET developers will laugh at that statement.&#160; It turns out that it is very easy to leak memory -- just keep a referencing object around longer than the referenced object, and you can leak.&#160; There at least two tools on the market that are designed specifically to seek out memory leaks of this kind (<a href="http://memprofiler.com/">Scitech</a> and <a href="http://www.red-gate.com/products/ants_profiler/index.htm">ANTS</a>).</p>  <p>The most common case of this happens with events in C#.&#160; Take the following example:</p>  <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">   <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Observable</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">delegate</span> <span style="color: #0000ff">void</span> SomethingHappenedDelegate();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">event</span> SomethingHappenedDelegate SomethingHappened;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     <span style="color: #008000">// Rest of the class</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span> }</pre>
  </div>
</div>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Observer </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>     <span style="color: #0000ff">private</span> <span style="color: #0000ff">readonly</span> Observable _observable;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     <span style="color: #0000ff">public</span> Observer(Observable observable)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>         _observable = observable;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>         _observable.SomethingHappened += UhOh_SomethingHappened;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>     <span style="color: #0000ff">void</span> UhOh_SomethingHappened()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>         <span style="color: #008000">// Handle the event</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span> }</pre>
  </div>
</div>

<p>In this example, the Observer class will hook the event on the Observable class during construction.&#160; Because of the way that events work in C#, the Observable object has a reference to the Observer.&#160; In the following example, the Observer will be alive (at least) as long as the Observable class is alive.&#160; For this reason, the following method will cause a memory leak:</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> LeakAnObserver()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>     var observer = <span style="color: #0000ff">new</span> Observer(_observable);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span> }</pre>
  </div>
</div>

<p>In most cases, the Observer instance would be garbage collected as it went out of scope.&#160; Instead, since it is kept alive through the event handler of the Observable, we leak memory.</p>

<p>There is a pretty easy way to solve this.&#160; Simply unhook the event in the disposal event (actual &quot;Dispose Pattern&quot; removed for brevity).</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> Observer : IDisposable</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>     <span style="color: #008000">// Existing code</span></pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Dispose()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>         _observable.SomethingHappened -= UhOh_SomethingHappened;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span> }</pre>
  </div>
</div>

<p>Great!&#160; Now, as long as we dispose the Observer, all references will be removed and the object will get garbage collected.&#160; Unfortunately, it is VERY easy to forget to call the Dispose method.&#160; I want to write some tests to make sure that these objects are garbage collected.</p>

<p>This is a tall order to fill.&#160; Having a reference to the object will cause it to stay alive.&#160; How do you ask an object if it is alive without actually having a reference to the object?&#160; This is where the WeakReference class comes in.&#160; It is a magical class that keeps a reference to an object without the garbage collector knowing about the reference.&#160; I wrote the following class to help me monitor and test if it still alive:</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> LeakMonitor&lt;T&gt;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span>     <span style="color: #0000ff">private</span> <span style="color: #0000ff">readonly</span> WeakReference _reference;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>     <span style="color: #0000ff">public</span> LeakMonitor(T itemToWatch)</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>         _reference = <span style="color: #0000ff">new</span> WeakReference(itemToWatch);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">bool</span> ItemIsAlive()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>         GC.Collect();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>         GC.WaitForPendingFinalizers();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>         <span style="color: #0000ff">return</span> _reference.IsAlive;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span>     <span style="color: #0000ff">public</span> T Item</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span>         get</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span>         {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>             <span style="color: #0000ff">return</span> (T)_reference.Target;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span>         }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span> }</pre>
  </div>
</div>

<p>Here are two examples of tests that illustrate the use of LeakMonitor.&#160; These are over-simplified unit test examples for this blog post, but you can see how this can be extended to integration and functional tests to verify that inner objects are not leaked.&#160; Be creative!</p>

<div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; overflow: auto; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">
  <div style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px">
    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   1:</span> [TestFixture]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   2:</span> <span style="color: #0000ff">public</span> <span style="color: #0000ff">class</span> MemTests</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   3:</span> {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   4:</span>     <span style="color: #0000ff">private</span> Observable _observable;</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   5:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   6:</span>     [SetUp]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   7:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">virtual</span> <span style="color: #0000ff">void</span> SetUp()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   8:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">   9:</span>         _observable = <span style="color: #0000ff">new</span> Observable();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  10:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  11:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  12:</span>     [Test]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  13:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Test_That_Observer_Leaks()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  14:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  15:</span>         var monitor = <span style="color: #0000ff">new</span> LeakMonitor&lt;Observer&gt;(LeakMemory());</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  16:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  17:</span>         Assert.That(monitor.ItemIsAlive(), Is.True);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  18:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  19:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  20:</span>     [Test]</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  21:</span>     <span style="color: #0000ff">public</span> <span style="color: #0000ff">void</span> Test_That_Disposing_Observer_Does_Not_Leak()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  22:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  23:</span>         var monitor = <span style="color: #0000ff">new</span> LeakMonitor&lt;Observer&gt;(LeakMemory());</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  24:</span>         monitor.Item.Dispose();</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  25:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  26:</span>         Assert.That(monitor.ItemIsAlive(), Is.False);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  27:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  28:</span>&#160; </pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  29:</span>     <span style="color: #0000ff">private</span> Observer LeakMemory()</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  30:</span>     {</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  31:</span>         <span style="color: #0000ff">return</span> <span style="color: #0000ff">new</span> Observer(_observable);</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  32:</span>     }</pre>

    <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: white; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060">  33:</span> }</pre>
  </div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2008-11-11 17:30:00</wp:post_date>
		<wp:post_date_gmt>2008-11-11 17:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>writing-tests-to-catch-memory-leaks-in-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Update for the ActiveRecord \"Mock\" Framework</title>
		<link>http://houseofbilz.com/archives/2008/11/14/update-for-the-activerecord-mock-framework/</link>
		<pubDate>Fri, 14 Nov 2008 17:31:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/11/14/update-for-the-activerecord-mock-framework/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Back in July, I posted an article on how to <a href="http://www.houseofbilz.com/archive/2008/07/22/active-record-mock-framework.aspx">mock out the database in ActiveRecord</a>.&#160; The approach is simple, but is not mocking in the strict sense.&#160; I use SQLite in &quot;memory&quot; mode, creating a temporal database for testing.&#160; My colleague, <a href="http://www.cptloadtest.com/">Jay Harris</a>, has updated my code to allow for configuration in two ways.&#160; He has preserved my &quot;drop-in&quot; mode via the &quot;useDynamicConfiguration&quot; flag but when the flag is false, you can use a configuration from the app.config file. </p>  <p>Here is the newest version of the code:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:404a40ca-5332-4e06-bfd1-5faf4b472e82" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">using</span><span style="color: #000000;"> System;  
</span><span style="color: #0000FF;">using</span><span style="color: #000000;"> System.Collections;  
</span><span style="color: #0000FF;">using</span><span style="color: #000000;"> System.Data;  
</span><span style="color: #0000FF;">using</span><span style="color: #000000;"> System.Reflection;  
</span><span style="color: #0000FF;">using</span><span style="color: #000000;"> Castle.ActiveRecord;  
</span><span style="color: #0000FF;">using</span><span style="color: #000000;"> Castle.ActiveRecord.Framework;  
</span><span style="color: #0000FF;">using</span><span style="color: #000000;"> Castle.ActiveRecord.Framework.Config;  
</span><span style="color: #0000FF;">using</span><span style="color: #000000;"> NHibernate.Connection;  
  
</span><span style="color: #0000FF;">namespace</span><span style="color: #000000;"> ActiveRecordTestHelper  
{  
  </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ActiveRecordMockConnectionProvider : DriverConnectionProvider  
  {  
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> IDbConnection _connection;  
  
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> IConfigurationSource MockConfiguration  
    {  
      </span><span style="color: #0000FF;">get</span><span style="color: #000000;">  
      {  
        var properties </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Hashtable  
            {  
              {</span><span style="color: #800000;">"</span><span style="color: #800000;">hibernate.connection.driver_class</span><span style="color: #800000;">"</span><span style="color: #000000;">,  
                </span><span style="color: #800000;">"</span><span style="color: #800000;">NHibernate.Driver.SQLite20Driver</span><span style="color: #800000;">"</span><span style="color: #000000;">},  
              {</span><span style="color: #800000;">"</span><span style="color: #800000;">hibernate.dialect</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">NHibernate.Dialect.SQLiteDialect</span><span style="color: #800000;">"</span><span style="color: #000000;">},  
              {</span><span style="color: #800000;">"</span><span style="color: #800000;">hibernate.connection.provider</span><span style="color: #800000;">"</span><span style="color: #000000;">, ConnectionProviderLocator},  
              {</span><span style="color: #800000;">"</span><span style="color: #800000;">hibernate.connection.connection_string</span><span style="color: #800000;">"</span><span style="color: #000000;">,  
                </span><span style="color: #800000;">"</span><span style="color: #800000;">Data Source=:memory:;Version=3;New=True;</span><span style="color: #800000;">"</span><span style="color: #000000;">}  
            };  
  
        var source </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> InPlaceConfigurationSource();  
        source.Add(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;"> (ActiveRecordBase), properties);  
  
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> source;  
      }  
    }  
  
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> ConnectionProviderLocator  
    {  
      </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> String.Format(</span><span style="color: #800000;">"</span><span style="color: #800000;">{0}, {1}</span><span style="color: #800000;">"</span><span style="color: #000000;">, TypeOfEnclosingClass.FullName,  
                                    EnclosingAssemblyName.Split(</span><span style="color: #800000;">'</span><span style="color: #800000;">,</span><span style="color: #800000;">'</span><span style="color: #000000;">)[</span><span style="color: #800080;">0</span><span style="color: #000000;">]); }  
    }  
  
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> Type TypeOfEnclosingClass  
    {  
      </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> MethodBase.GetCurrentMethod().DeclaringType; }  
    }  
  
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> EnclosingAssemblyName  
    {  
      </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> Assembly.GetAssembly(TypeOfEnclosingClass).FullName; }  
    }  
  
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">override</span><span style="color: #000000;"> IDbConnection GetConnection()  
    {  
      </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (_connection </span><span style="color: #000000;">==</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)  
        _connection </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">base</span><span style="color: #000000;">.GetConnection();  
  
      </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> _connection;  
    }  
  
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">override</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> CloseConnection(IDbConnection conn) {}  
  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008000;"> 
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> Destroys the connection that is kept open in order to keep the  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> in-memory database alive. Destroying the connection will destroy  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> all of the data stored in the mock database. Call this method when  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> the test is complete.  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008000;"> </span><span style="color: #808080;">
</span><span style="color: #000000;">    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> ExplicitlyDestroyConnection()  
    {  
      </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (_connection </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)  
      {  
        _connection.Close();  
        _connection </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">;  
      }  
    }  
  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008000;"> 
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> Initializes ActiveRecord and the Database that ActiveRecord uses to  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> store the data. Call this method before the test executes.  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008000;">
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;param name="useDynamicConfiguration"&gt;</span><span style="color: #008000;"> 
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> Use reflection to build configuration, rather than the Configuration  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> file.  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;/param&gt;</span><span style="color: #008000;"> 
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;param name="types"&gt;</span><span style="color: #008000;">  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> A list of ActiveRecord types that will be created in the database  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;/param&gt;</span><span style="color: #008000;">  </span><span style="color: #808080;">
</span><span style="color: #000000;">    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> InitializeActiveRecord(</span><span style="color: #0000FF;">bool</span><span style="color: #000000;"> useDynamicConfiguration,  
                                              </span><span style="color: #0000FF;">params</span><span style="color: #000000;"> Type[] types)  
    {  
      ActiveRecordStarter.ResetInitializationFlag();  
      IConfigurationSource configurationSource </span><span style="color: #000000;">=</span><span style="color: #000000;"> useDynamicConfiguration  
                                       </span><span style="color: #000000;">?</span><span style="color: #000000;"> MockConfiguration  
                                       : ActiveRecordSectionHandler.Instance;  
      ActiveRecordStarter.Initialize(configurationSource, types);  
      ActiveRecordStarter.CreateSchema();  
    }  
  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;summary&gt;</span><span style="color: #008000;"> 
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> Initializes ActiveRecord and the Database that ActiveRecord uses to  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> store the data based. Configuration is dynamically generated using  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> reflection. Call this method before the test executes.  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;/summary&gt;</span><span style="color: #008000;">  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;param name="types"&gt;</span><span style="color: #008000;"> 
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> A list of ActiveRecord types that will be created in the database  
    </span><span style="color: #808080;">///</span><span style="color: #008000;"> </span><span style="color: #808080;">&lt;/param&gt;</span><span style="color: #008000;">  </span><span style="color: #808080;">
</span><span style="color: #000000;">    [Obsolete(</span><span style="color: #800000;">"</span><span style="color: #800000;">Use InitializeActiveRecord(bool, params Type[])</span><span style="color: #800000;">"</span><span style="color: #000000;">)]  
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> InitializeActiveRecord(</span><span style="color: #0000FF;">params</span><span style="color: #000000;"> Type[] types)  
    {  
      InitializeActiveRecord(</span><span style="color: #0000FF;">true</span><span style="color: #000000;">, types);  
    }  
  }  
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>It can be downloaded from <a href="http://www.cptloadtest.com/2008/10/30/UnitTestingActiveRecordApplicationsUsingMockDatabases.aspx">Jay's site</a>: <a href="http://www.cptloadtest.com/ct.ashx?id=31b3c96d-5f73-4a20-bc3c-c155b5238071&amp;url=http%3a%2f%2fwww.cptloadtest.com%2fcontent%2fbinary%2fActiveRecordMockConnectionProvider.zip">ActiveRecordMockConfigurationProvider.zip</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2008-11-14 17:31:00</wp:post_date>
		<wp:post_date_gmt>2008-11-14 17:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>update-for-the-activerecord-mock-framework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Registered for CodeMash &#039;09</title>
		<link>http://houseofbilz.com/archives/2008/11/17/registered-for-codemash-09/</link>
		<pubDate>Mon, 17 Nov 2008 17:33:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/11/17/registered-for-codemash-09/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="javascript:void(0);/*1226945716395*/"><img border="0" alt="CodeMash" align="left" src="https://www.codemash.org/images/bloggerbadge2008.gif" /></a> It is official.&#160; I have registered for CodeMash '09.&#160; I have been told that this is the single-most important conference to go to.&#160; Many people have told me this.&#160; I have also been told that all the cool kids will be there.&#160; In fact, almost everyone I know in the community is planning to go...I HAVE to see what all the hype is about.   <br />  <br />The neat thing about this conference is how focused it is on being unfocused.&#160; There are a ton of languages and platforms being talked about... lots of hands-on labs... Open Spaces, etc.&#160; Anything goes.&#160; It seems really interesting, actually.   <br />  <br />So I am hitting this conference on my own dime.&#160; I am taking 3 days off work and heading down to Sandusky, Ohio in early January&#160; (7-9) for this nerdfest.&#160; <br />  <br />The only question I have now, is... Are YOU going?   ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2008-11-17 17:33:00</wp:post_date>
		<wp:post_date_gmt>2008-11-17 17:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>registered-for-codemash-09</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Testing WCF Service Apps (Part 0 of 4)</title>
		<link>http://houseofbilz.com/archives/2008/11/18/testing-wcf-service-apps-part-0-of-4/</link>
		<pubDate>Tue, 18 Nov 2008 17:33:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/11/18/testing-wcf-service-apps-part-0-of-4/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/Testing-WCF-Services" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2FHouseOfBilz%2Farchive%2F2008%2F11%2F18%2Ftesting-wcf-service-apps-part-0-of-4.aspx" /></a>   <p>When you are writing automated tests for your application, it is important that the tests do not rely on the file system or external services.&#160; The only problem is that when you write applications using WCF, you are writing code that relies on external services.&#160; It is very tempting to create service references in your test DLL and test against them, but please refrain.&#160; There is a better way, I promise!</p>  <p>This series will focus on testing every part of your application -- including round-trip functional tests -- without employing the WCF framework directly.&#160; We need to remember that the WCF framework is code that we do not control.&#160; We need to trust that it does what it claims to and focus on our code directly.&#160; In addition, the WCF framework is configurable via XML files, so we don't need to worry about having configuration working directly.&#160; Writing tests for your code needs to be about your code, not the WCF framework.</p>  <p>So, let's look at the application that I am using in this series.&#160; I have a WCF service named RecipeBoxService that stores and retrieves recipes.&#160; The service is used as a back end for many possible clients: WinForms, ASP.NET, MVC, Silverlight, etc.&#160; In this series, I will be writing a data mining application to demonstrate the testing techniques.</p>  <p>&#160;<a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/TestingWCFServiceAppsPart1of4_13D06/RecipeBox_2.png"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="RecipeBox" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/TestingWCFServiceAppsPart1of4_13D06/RecipeBox_thumb.png" width="540" height="324" /></a></p>  <p>This post is just the introduction.&#160; The actual parts will be laid out something like this:</p>  <ol>   <li><a href="http://geekswithblogs.net/HouseOfBilz/archive/2008/11/24/testing-wcf-service-apps-part-1-of-4.aspx">Testing the WCF service</a> </li>    <li><a href="http://houseofbilz.com/archive/2008/11/29/testing-wcf-service-apps-part-2-of-4.aspx">Testing the synchronous client</a> </li>    <li><a href="http://www.houseofbilz.com/archive/2008/12/19/testing-wcf-service-apps-part-3-of-4.aspx">Testing the asynchronous client</a> </li>    <li><a href="http://www.houseofbilz.com/archive/2009/01/05/testing-wcf-service-apps-part-4-of-4.aspx">Functional testing front-to-back</a> </li> </ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2008-11-18 17:33:00</wp:post_date>
		<wp:post_date_gmt>2008-11-18 17:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-wcf-service-apps-part-0-of-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>30145</wp:comment_id>
			<wp:comment_author><![CDATA[SITE LINK]]></wp:comment_author>
			<wp:comment_author_email>MccroyGillins79@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://canadiantiredrivingschool.com/wp-login.php?action=lostpassword</wp:comment_author_url>
			<wp:comment_author_IP>54.68.95.189</wp:comment_author_IP>
			<wp:comment_date>2014-10-10 21:24:28</wp:comment_date>
			<wp:comment_date_gmt>2014-10-10 21:24:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello There. I found your blog the use of msn. That is a really smartly written article. I'll be sure to bookmark it and come back to learn extra of your useful information. Thank you for the post. I'll definitely comeback.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23112</wp:comment_id>
			<wp:comment_author><![CDATA[web development]]></wp:comment_author>
			<wp:comment_author_email>DrexlerHollopeter7534@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://srsquare.comclients.php</wp:comment_author_url>
			<wp:comment_author_IP>192.225.170.45</wp:comment_author_IP>
			<wp:comment_date>2014-01-21 14:59:10</wp:comment_date>
			<wp:comment_date_gmt>2014-01-21 14:59:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Superb write-up. I'm examining continuously this blog that i'm astounded! Incredibly beneficial information and facts in particular the continue element :) We maintain these data considerably. I had been in search of that facts for many years. Appreciate it and also enjoy.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Testing WCF Service Apps (Part 1 of 4)</title>
		<link>http://houseofbilz.com/archives/2008/11/24/testing-wcf-service-apps-part-1-of-4/</link>
		<pubDate>Mon, 24 Nov 2008 17:34:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/11/24/testing-wcf-service-apps-part-1-of-4/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Previous posts: <a href="http://houseofbilz.com/HouseOfBilz/archive/2008/11/18/testing-wcf-service-apps-part-0-of-4.aspx">Part 0 of 4: Introduction</a></p> <a href="http://dotnetshoutout.com/Testing-WCF-Services" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2FHouseOfBilz%2Farchive%2F2008%2F11%2F18%2Ftesting-wcf-service-apps-part-0-of-4.aspx" /></a>&#160;<a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2008%2f11%2f24%2ftesting-wcf-service-apps-part-1-of-4.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2008%2f11%2f24%2ftesting-wcf-service-apps-part-1-of-4.aspx" /></a>   <h3><strong>Testing the Service</strong></h3>  <p>Of the four posts, testing the service is by far the easiest.</p>  <p>One of the most beautiful things about the WCF framework is the way it was designed to be more testable than ASPX services.&#160; When you design your WCF interface, you are mostly just designing an interface with the WCF ServiceContract attributes.&#160; The WCF framework uses your interface to determine the actual contract and transport mechanism so you don't have to.&#160; </p>  <p>This is the key to testing WCF services:&#160; YOU DON'T HAVE TO WORRY ABOUT THE WCF FRAMEWORK.&#160; This means that you can simply instantiate your service directly and start calling public methods on it.&#160; You never need to worry about hitting the service through the transport layer.&#160; You can focus on what is important: your code.</p>  <h3><strong>Recipe Box Service Interface</strong></h3>  <p>This is the interface that my WCF service publishes:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:fb50163d-8fc2-4d94-a74d-84fce328259c" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">[ServiceContract]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IRecipeBoxService
{
    [OperationContract] 
    RecipeData[] AllRecipes();

    [OperationContract]
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SaveRecipe(RecipeData recipe);

    [OperationContract]
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DeleteRecipe(</span><span style="color: #0000FF;">int</span><span style="color: #000000;"> id);

    [OperationContract]
    IngredientData[] AllIngredients();

    [OperationContract]
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SaveIngredient(IngredientData ingredient);

    [OperationContract]
    IngredientData[] FindIngredients(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> nameIsLike);

    [OperationContract]  
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DeleteIngredient(</span><span style="color: #0000FF;">int</span><span style="color: #000000;"> id);
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3><strong>The Tests</strong></h3>

<p>The actual implementation is named RecipeBoxService, and that is the class I am interested in testing.&#160;&#160; A test might look something like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:2ccaecdd-4f6e-4454-aab1-af9994bccea9" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">[Test]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_Get_All_Recipes_Returns_SingleRecipe()
{
    PopulateDatabase(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">AAA</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">BBB</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">CCC</span><span style="color: #800000;">"</span><span style="color: #000000;">));

    var recipeBoxService </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RecipeBoxService();
    var recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> recipeBoxService.AllRecipes();

    Assert.That(recipes.Length, Is.EqualTo(</span><span style="color: #800080;">1</span><span style="color: #000000;">));
    Assert.That(recipes[</span><span style="color: #800080;">0</span><span style="color: #000000;">].Title, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">AAA</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    Assert.That(recipes[</span><span style="color: #800080;">0</span><span style="color: #000000;">].Description, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">BBB</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    Assert.That(recipes[</span><span style="color: #800080;">0</span><span style="color: #000000;">].Author, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">CCC</span><span style="color: #800000;">"</span><span style="color: #000000;">));
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>It is that simple.&#160; YOU SHOULD NEVER NEED TO CREATE A SERVICE REFERENCE IN YOUR TEST PROJECT.&#160; Forget about WCF and test your service logic directly.</p>

<h3><strong>Abstracting the back end</strong></h3>

<p>Note: I am using a database abstraction product called <a href="http://castleproject.org/activerecord/index.html">Castle Active Record</a> in my service which gives me a lot of great features.&#160; From a testing perspective, the most important feature is that you can swap out the actual database for a more testable back end.&#160; Good unit tests (usually) do not rely on external databases, external services, file systems or any other environment-specific requirements.&#160; In my approach, I am using an in-memory, temporal database that only lives as long as the test does.&#160; Please see my post on <a href="http://www.houseofbilz.com/archive/2008/07/22/active-record-mock-framework.aspx">mocking out the database</a> with ActiveRecord or more information on this. </p>

<h3>Next time</h3>

<p>I will talk about how you test the client without connecting to the service. <a href="http://houseofbilz.com/archive/2008/11/29/testing-wcf-service-apps-part-2-of-4.aspx">(Part 2 or 4)</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2008-11-24 17:34:00</wp:post_date>
		<wp:post_date_gmt>2008-11-24 17:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-wcf-service-apps-part-1-of-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>57947</wp:comment_id>
			<wp:comment_author><![CDATA[bitcoin asic calculator]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://frontlinehq.com/charts.php</wp:comment_author_url>
			<wp:comment_author_IP>117.163.197.225</wp:comment_author_IP>
			<wp:comment_date>2015-07-01 23:29:51</wp:comment_date>
			<wp:comment_date_gmt>2015-07-01 23:29:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bitcoin asic calculator...</strong>

Testing WCF Service Apps (Part 1 of 4) « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Testing WCF Service Apps (Part 2 of 4)</title>
		<link>http://houseofbilz.com/archives/2008/11/29/testing-wcf-service-apps-part-2-of-4/</link>
		<pubDate>Sat, 29 Nov 2008 17:35:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/11/29/testing-wcf-service-apps-part-2-of-4/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Previous posts:    <br /><a href="http://houseofbilz.com/HouseOfBilz/archive/2008/11/18/testing-wcf-service-apps-part-0-of-4.aspx">Part 0 of 4: Introduction</a>     <br /><a href="http://houseofbilz.com/archive/2008/11/24/testing-wcf-service-apps-part-1-of-4.aspx">Part 1 of 4: Testing the Service</a>     <br /><a href="http://dotnetshoutout.com/Testing-WCF-Services" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2FHouseOfBilz%2Farchive%2F2008%2F11%2F18%2Ftesting-wcf-service-apps-part-0-of-4.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2008%2f11%2f29%2ftesting-wcf-service-apps-part-2-of-4.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2008%2f11%2f29%2ftesting-wcf-service-apps-part-2-of-4.aspx" /></a></p>  <h3><strong>Testing the Client</strong></h3>  <p>So far, I outlined how to test your WCF service.&#160; I simply took advantage or the WCF architecture and tested the service directly outside of the actual service harness.&#160; Now I need to set my sights on the client.&#160; This becomes a bit more difficult, but I wouldn't say that it is necessarily hard.&#160; I will start by giving a typical textbook example of hooking up to our service, and then I will tell you what is wrong with it.&#160; I will continue by modifying the code to be more testable so that the service can be mocked.&#160; </p>  <h3><strong>A Textbook Example</strong></h3>  <p>Most WCF tutorials and books have you start by adding a service reference to your service.&#160; Doing this will generate a proxy client that you can use in your application.&#160; My client application is a very simple data mining application.&#160; You can give it the ingredient name and the application will return all recipes that include the ingredient of choice.&#160; The first step is creating the service reference.&#160; Right-click on the project and select &quot;Add Service Reference&quot;.</p>  <p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/TestingWCFServiceAppsPart2of4_8A59/AddServiceReference_2.gif"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="AddServiceReference" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/TestingWCFServiceAppsPart2of4_8A59/AddServiceReference_thumb.gif" width="668" height="538" /></a> </p>  <p>Once the service has been added, I can use it in my code:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:cabbd96d-8ff9-4a13-a648-cb34f4477913" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> IngredientFinder
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> IEnumerable</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">RecipeData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> GetRecipes(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> ingredientName)
    {
        var recipeService </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RecipeBoxServiceClient();

        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> from recipe </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> recipeService.AllRecipes() 
               </span><span style="color: #0000FF;">where</span><span style="color: #000000;"> recipe.ContainsIngredient(ingredientName) 
               select recipe;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This is all I need to get my app up and running. My main function just calls into this code and prints the results.&#160; There is, however, one major flaw with this code: <strong>it is not testable!</strong>&#160; This is because if I were to instantiate an instance of IngredientFinder, I would be required to hook up to a WCF service via the RecipeBoxServiceClient.&#160; Technically I could write this code but I wouldn't recommend it.&#160; For one, it requires a lot of setup to harness the service.&#160; Secondly, it drifts away from being a unit test and becomes more of a functional or integration test (more on this in part 4).&#160; Thirdly, you can't always assume that you control the service.&#160; Assume, for instance, that you are writing an application that connects to a service like Twitter.&#160; You certainly don't want your unit tests hitting the only instance of the service: the live one.</p>

<p>We need to do something about this...</p>

<h3>Making it Testable</h3>

<p>If you were to inspect the RecipeBoxServiceClient class that was generated for you from the service specification, you would find one very important detail:&#160; RecipeBoxServiceClient implements the auto-generated interface IRecipeBoxService.&#160; Let us make a modification to the IngredientFinder to make it testable:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:d02efa0b-32d8-4786-861b-1ab4a13a10c3" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> IngredientFinder
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> IRecipeBoxService _recipeService;

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> IngredientFinder(IRecipeBoxService recipeService)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;">(recipeService </span><span style="color: #000000;">==</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">) </span><span style="color: #0000FF;">throw</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ArgumentNullException(</span><span style="color: #800000;">"</span><span style="color: #800000;">recipeService</span><span style="color: #800000;">"</span><span style="color: #000000;">);

        _recipeService </span><span style="color: #000000;">=</span><span style="color: #000000;"> recipeService;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> IEnumerable</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">RecipeData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> GetRecipes(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> ingredientName)
    {
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> from recipe </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> _recipeService.AllRecipes() 
               </span><span style="color: #0000FF;">where</span><span style="color: #000000;"> recipe.ContainsIngredient(ingredientName) 
               select recipe;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This is a classic example of dependency injection.&#160; The user of the class (in our case, the main method) is now responsible for defining the service to use.&#160; This way, the IngredientFinder doesn't need to know anything about the connection details.&#160; In addition, I can write tests that mock out the service completely.</p>

<h3><strong>Writing Tests Against the Client</strong></h3>

<p>In my example, I am using <a href="http://ayende.com/projects/rhino-mocks.aspx">Rhino Mocks</a>, but you can use any mock/fake/stub framework/method you wish. </p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:53be3351-f34e-4891-a8de-9b84d33b5c0a" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">[TestFixture]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> TestIngredientFinder
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> MockRepository _mocks;
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> IRecipeBoxService _mockService;
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> IngredientFinder _finder;

    [SetUp]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SetUp()
    {
        _mocks </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> MockRepository();
        _mockService </span><span style="color: #000000;">=</span><span style="color: #000000;"> _mocks.CreateMock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IRecipeBoxService</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        _finder </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredientFinder(_mockService);
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_IngredientFinder_With_Cheese()
    {
        Expect.Call(_mockService.AllRecipes()).
            Return(</span><span style="color: #0000FF;">new</span><span style="color: #000000;">[] {Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">)});
        _mocks.ReplayAll();        

        var recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> _finder.GetRecipes(</span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">).ToArray();

        Assert.That(recipes.Length, Is.EqualTo(</span><span style="color: #800080;">1</span><span style="color: #000000;">));
        Assert.That(recipes[</span><span style="color: #800080;">0</span><span style="color: #000000;">].Title, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_IngredientFinder_With_Two_Recipes_That_Have_Cheese()
    {
        Expect.Call(_mockService.AllRecipes()).Return(</span><span style="color: #0000FF;">new</span><span style="color: #000000;">[]{
                                                              Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">),
                                                              Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Bread</span><span style="color: #800000;">"</span><span style="color: #000000;">)
                                                          });
        _mocks.ReplayAll();

        var recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> _finder.GetRecipes(</span><span style="color: #800000;">"</span><span style="color: #800000;">cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">).ToArray();

        Assert.That(recipes.Length, Is.EqualTo(</span><span style="color: #800080;">2</span><span style="color: #000000;">));
        Assert.That(recipes[</span><span style="color: #800080;">0</span><span style="color: #000000;">].Title, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
        Assert.That(recipes[</span><span style="color: #800080;">1</span><span style="color: #000000;">].Title, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_IngredientFinder_Finding_Nothing()
    {
        Expect.Call(_mockService.AllRecipes()).Return(</span><span style="color: #0000FF;">new</span><span style="color: #000000;">[]{
                                                              Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">),
                                                              Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Bread</span><span style="color: #800000;">"</span><span style="color: #000000;">)
                                                          });
        _mocks.ReplayAll();

        var recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> _finder.GetRecipes(</span><span style="color: #800000;">"</span><span style="color: #800000;">chicken</span><span style="color: #800000;">"</span><span style="color: #000000;">).ToArray();

        Assert.That(recipes.Length, Is.EqualTo(</span><span style="color: #800080;">0</span><span style="color: #000000;">));
    }

    [Test, ExpectedException(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ArgumentNullException))]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_For_Null()
    {
        _finder.GetRecipes(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
    }

    [Test, ExpectedException(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ArgumentNullException))]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_Constructor_With_Null_Service_Interface()
    {
        var junk </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredientFinder(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>With this test suite, I have full coverage on my IngredientFinder class and I never needed to instantiate the actual service.&#160; </p>

<h3>Next time</h3>

<p>I will discuss how to test your client code with asynchronous service references.&#160; It turns out that it is not as straight-forward as the synchronous approach (this post), so I will devote an entire post to the asynchronous case. <a href="http://www.houseofbilz.com/archive/2008/12/19/testing-wcf-service-apps-part-3-of-4.aspx">(Part 3 of 4)</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2008-11-29 17:35:00</wp:post_date>
		<wp:post_date_gmt>2008-11-29 17:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-wcf-service-apps-part-2-of-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>30038</wp:comment_id>
			<wp:comment_author><![CDATA[Mitzi]]></wp:comment_author>
			<wp:comment_author_email>christianeschulz@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://Kandis.tumblr.com</wp:comment_author_url>
			<wp:comment_author_IP>125.24.76.36</wp:comment_author_IP>
			<wp:comment_date>2014-10-09 01:19:00</wp:comment_date>
			<wp:comment_date_gmt>2014-10-09 01:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I read a lot of interesting content here. Probably you  spend a lot of time writing, i know how to save you a lot of time, there 
is an online tool that creates high quality, google friendly articles in seconds, just search in google  - rewriter 
creates an unique article in a minute]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ann Arbor Nerd Lunch -- Are You Going?</title>
		<link>http://houseofbilz.com/archives/2008/12/09/ann-arbor-nerd-lunch-are-you-going/</link>
		<pubDate>Tue, 09 Dec 2008 17:37:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/12/09/ann-arbor-nerd-lunch-are-you-going/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am organizing a monthly lunch where local software developers from the Ann Arbor, MI area will get together to talk shop.&#160; It will be a very informal meeting where anyone is invited.&#160; We will meet on the third Thursday of every month, which means this month will be on December 18th at 12:00 PM.</p>  <p>If you are interested in the updates for this group, please subscribe to the Google Group: <a href="http://tinyurl.com/AANerdLunch">http://tinyurl.com/AANerdLunch</a>.&#160; </p>  <p>For the first meeting, I will challenge you to bring a nerd with you!&#160;&#160; Bring someone who doesn't normally come to the community events, but is interested in being a part of the community if you can.&#160; Also, come with ideas about what you want this lunch to be.&#160; Do we want to keep it casual?&#160; Do we want to bring in &quot;special guests&quot; to help spur conversation?&#160; Do we want to keep it a software group?&#160; Or do we want to branch out to other nerds?&#160; What do YOU want in a nerd lunch? </p>  <p>   <br /><strong>Details:</strong>     <br /><strong>Who:</strong> The software nerds of Ann Arbor     <br /><strong>What:</strong> Lunch -- a place to talk tech and socialize     <br /><strong>When:</strong> Thursday, December 18th at 12:00 PM     <br /><strong>Where:</strong> Mahek Resturant, Ann Arbor -- <a href="http://tinyurl.com/6hg7mb">http://tinyurl.com/6hg7mb</a></p>  <p>Please respond to the Google Group if you are planning to attend, so we can get the proper sized table at the resturant</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2008-12-09 17:37:00</wp:post_date>
		<wp:post_date_gmt>2008-12-09 17:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ann-arbor-nerd-lunch-are-you-going</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>45392</wp:comment_id>
			<wp:comment_author><![CDATA[รถรับจ้างขนของ]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.katalog2015.eu/20709-serwis-Investigating.Speedy.Products.In</wp:comment_author_url>
			<wp:comment_author_IP>171.96.247.38</wp:comment_author_IP>
			<wp:comment_date>2015-05-20 20:36:00</wp:comment_date>
			<wp:comment_date_gmt>2015-05-20 20:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>รถรับจ้างขนของ...</strong>

Ann Arbor Nerd Lunch - Are You Going? « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Testing WCF Service Apps (Part 3 of 4)</title>
		<link>http://houseofbilz.com/archives/2008/12/19/testing-wcf-service-apps-part-3-of-4/</link>
		<pubDate>Fri, 19 Dec 2008 17:37:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2008/12/19/testing-wcf-service-apps-part-3-of-4/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Previous Posts:    <br /><a href="http://houseofbilz.com/HouseOfBilz/archive/2008/11/18/testing-wcf-service-apps-part-0-of-4.aspx">Part 0 of 4: Introduction</a>     <br /><a href="http://houseofbilz.com/archive/2008/11/24/testing-wcf-service-apps-part-1-of-4.aspx">Part 1 of 4: Testing the Service</a>     <br /><a href="http://www.houseofbilz.com/archive/2008/11/29/testing-wcf-service-apps-part-2-of-4.aspx">Part 2 of 4: Testing the Client</a></p> <a href="http://dotnetshoutout.com/Testing-WCF-Services" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2FHouseOfBilz%2Farchive%2F2008%2F11%2F18%2Ftesting-wcf-service-apps-part-0-of-4.aspx" /></a>   <h3>Testing Asynchronous Clients</h3>  <p>Up to this point, we have tested the service and we have tested the client -- both in isolation.&#160; We have written unit tests and our code&#160; has good coverage.&#160; Unfortunately, my clients are not always synchronous.&#160; In Silverlight client, for instance, the framework will not permit you to make synchronous service requests.&#160; As it turns out, writing tests for asynchronous service clients is not straight-forward.&#160; Thankfully, there are some hacks that you can take advantage of to write effective asynchronous tests.</p>  <h3>Generating Asynchronous Service Clients</h3>  <p>When you generate your service reference in Visual Studio, the advanced options allow you to specify an asynchronous proxy.&#160; </p>  <p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/TestingWCFServiceAppsPart3of4_12EF1/Async_2.png"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="Async" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/TestingWCFServiceAppsPart3of4_12EF1/Async_thumb.png" width="530" height="490" /></a> </p>  <p>In a textbook example, your is a bit more complicated but it is still pretty easy to follow.&#160; Instead of calling <strong>AllRecipes</strong> (as in the previous post), the class hooks the <strong>AllRecipesCompleted</strong> event and calls <strong>AllRecipesAsync()</strong>.&#160; When the service returns the results, the event is fired and the results are processed.</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:ae876ec9-bb83-4eaf-94a7-35cc8c59e8d7" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> IngredientFinder
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> EventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IngredentFinderCompleteArgs</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> ProcessingComplete;
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> _ingredientName;

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> FindRecipes(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> ingredientName)
    {
        var recipeService </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RecipeBoxServiceClient();

        _ingredientName </span><span style="color: #000000;">=</span><span style="color: #000000;"> ingredientName;
        recipeService.AllRecipesCompleted </span><span style="color: #000000;">+=</span><span style="color: #000000;"> AllRecipes_Completed;
        recipeService.AllRecipesAsync();
    }

    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> AllRecipes_Completed(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> sender, AllRecipesCompletedEventArgs e)
    {
        var recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> from recipe </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> e.Result
                      </span><span style="color: #0000FF;">where</span><span style="color: #000000;"> recipe.ContainsIngredient(_ingredientName)
                      select recipe;

        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (ProcessingComplete </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            ProcessingComplete(</span><span style="color: #0000FF;">this</span><span style="color: #000000;">, </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredentFinderCompleteArgs { Recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> recipes });
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>Making it Testable</h3>

<p>Just like in <a href="http://www.houseofbilz.com/archive/2008/11/29/testing-wcf-service-apps-part-2-of-4.aspx">part 2</a>, the code works great but it is not at all testable.&#160; <strong>IngredientFinder</strong> is tightly coupled to the <strong>RecipeBoxServiceClient</strong>.&#160; In a unit testing environment, you cannot rely on WCF to host the service.&#160; Unlike part 2, it is not as simple as replacing the concrete service with <strong>IRecipeBoxService</strong>.&#160; The interface that is generated looks like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:86030e47-7127-4e90-9dd9-085a835e5587" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IRecipeBoxService
{
    RecipeData[] AllRecipes();
    IAsyncResult BeginAllRecipes(AsyncCallback callback, </span><span style="color: #0000FF;">object</span><span style="color: #000000;"> asyncState);
    RecipeData[] EndAllRecipes(IAsyncResult result);
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>I have no idea why Microsoft did this, but the interface does not include the interface that the concrete class implements.&#160; Neither the <strong>AllRecipesCompleted</strong> event or the <strong>AllRecipesAsync</strong> method are found in the interface!&#160; It includes the begin/end calls but those are some messy methods to use.&#160; I don't want to require my <strong>IngredientFinder</strong> class to be required to use messy methods just to make my code testable.&#160; This is where my hack comes in.&#160; It takes advantage of the fact that the <strong>RecipeBoxServiceClient</strong> is a partial class:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:6e1e6c7b-4dd6-410e-b069-4090e61e0bf9" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IRecipeBoxServiceAsync : IRecipeBoxService
{
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> AllRecipesAsync();
    </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> System.EventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">AllRecipesCompletedEventArgs</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> AllRecipesCompleted;
}

</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">partial</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> RecipeBoxServiceClient : IRecipeBoxServiceAsync
{}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>So what did I do here?&#160; I created a new, asynchronous interface that includes the <strong>IRecipeBoxService</strong> interface and also includes the event and async method that is implemented in the concrete class.&#160; After that, I tell the class to implement the asynchronous interface via the partial keyword.&#160; I don't have to write any implementation code because it has already been done for me -- the interface simply didn't include it.</p>

<p>Now that this is in place, we can modify the class slightly to pass the interface in via dependency injection:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:5283173b-9af7-4595-a72e-1a756f151436" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> IngredientFinder
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> EventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IngredentFinderCompleteArgs</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> ProcessingComplete;

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> IRecipeBoxServiceAsync _recipeService;
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> _ingredientName;

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> IngredientFinder(IRecipeBoxServiceAsync service)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (service </span><span style="color: #000000;">==</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">) </span><span style="color: #0000FF;">throw</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ArgumentNullException(</span><span style="color: #800000;">"</span><span style="color: #800000;">service</span><span style="color: #800000;">"</span><span style="color: #000000;">);

        _recipeService </span><span style="color: #000000;">=</span><span style="color: #000000;"> service;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> FindRecipes(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> ingredientName)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (</span><span style="color: #0000FF;">string</span><span style="color: #000000;">.IsNullOrEmpty(ingredientName)) </span><span style="color: #0000FF;">throw</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ArgumentNullException(</span><span style="color: #800000;">"</span><span style="color: #800000;">ingredientName</span><span style="color: #800000;">"</span><span style="color: #000000;">);

        _ingredientName </span><span style="color: #000000;">=</span><span style="color: #000000;"> ingredientName;
        _recipeService.AllRecipesCompleted </span><span style="color: #000000;">+=</span><span style="color: #000000;"> AllRecipes_Completed;
        _recipeService.AllRecipesAsync();
    }

    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> AllRecipes_Completed(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> sender, AllRecipesCompletedEventArgs e)
    {
        var recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> from recipe </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> e.Result
                      </span><span style="color: #0000FF;">where</span><span style="color: #000000;"> recipe.ContainsIngredient(_ingredientName)
                      select recipe;

        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (ProcessingComplete </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            ProcessingComplete(</span><span style="color: #0000FF;">this</span><span style="color: #000000;">, </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredentFinderCompleteArgs { Recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> recipes });
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>The Tests</h3>

<p>The tests are also more complex.&#160; The test needs to simulate an asynchronous service and fire events.&#160; I am using <a href="http://code.google.com/p/moq/">Moq</a> to mock out the service.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:a2b3d153-9f5c-4bae-953c-c9b86b7728d1" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">[TestFixture]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> TestIngredientFinder
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IRecipeBoxServiceAsync</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> _mockService;
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> IngredientFinder _finder;

    [SetUp]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SetUp()
    {
        _mockService </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IRecipeBoxServiceAsync</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(MockBehavior.Strict);
        _finder </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredientFinder(_mockService.Object);
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> RecipeData Recipe(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> recipeName, </span><span style="color: #0000FF;">params</span><span style="color: #000000;"> </span><span style="color: #0000FF;">string</span><span style="color: #000000;">[] ingredientNames)
    {
        var result </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RecipeData {Title </span><span style="color: #000000;">=</span><span style="color: #000000;"> recipeName};
        
        var quantities </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> List</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">QuantityData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        </span><span style="color: #0000FF;">foreach</span><span style="color: #000000;"> (</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> ingredientName </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> ingredientNames)
            quantities.Add(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> QuantityData{Ingredient </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredientData{ Name </span><span style="color: #000000;">=</span><span style="color: #000000;"> ingredientName}});

        result.Quantities </span><span style="color: #000000;">=</span><span style="color: #000000;"> quantities.ToArray();
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> result;
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> AllRecipesCompletedEventArgs RecipeCompletedArgs(</span><span style="color: #0000FF;">params</span><span style="color: #000000;"> RecipeData[] results)
    {
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> AllRecipesCompletedEventArgs(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> </span><span style="color: #0000FF;">object</span><span style="color: #000000;">[] {results}, </span><span style="color: #0000FF;">null</span><span style="color: #000000;">, </span><span style="color: #0000FF;">false</span><span style="color: #000000;">, </span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> MockedEvent</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">AllRecipesCompletedEventArgs</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> RegisterCompletedHandler(Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IRecipeBoxServiceAsync</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> mockService)
    {
        var serviceCompletedHandler </span><span style="color: #000000;">=</span><span style="color: #000000;"> mockService.CreateEventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">AllRecipesCompletedEventArgs</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        mockService.Object.AllRecipesCompleted </span><span style="color: #000000;">+=</span><span style="color: #000000;"> serviceCompletedHandler;
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> serviceCompletedHandler;
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_IngredientFinder_With_One_Recipe_That_Has_Cheese()
    {
        var serviceCompletedHandler </span><span style="color: #000000;">=</span><span style="color: #000000;"> RegisterCompletedHandler(_mockService);
        _mockService.Expect(service </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> service.AllRecipesAsync());

        IEnumerable</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">RecipeData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">;
        _finder.ProcessingComplete </span><span style="color: #000000;">+=</span><span style="color: #000000;"> (sender, args) </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> args.Recipes;
        
        _finder.FindRecipes(</span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        serviceCompletedHandler.Raise(RecipeCompletedArgs(Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">)));

        Assert.That(recipes.Count(), Is.EqualTo(</span><span style="color: #800080;">1</span><span style="color: #000000;">));
        Assert.That(recipes.ToList()[</span><span style="color: #800080;">0</span><span style="color: #000000;">].Title, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_IngredientFinder_With_Two_Recipes_That_Have_Cheese()
    {
        var serviceCompletedHandler </span><span style="color: #000000;">=</span><span style="color: #000000;"> RegisterCompletedHandler(_mockService);
        _mockService.Expect(service </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> service.AllRecipesAsync());

        IEnumerable</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">RecipeData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">;
        _finder.ProcessingComplete </span><span style="color: #000000;">+=</span><span style="color: #000000;"> (sender, args) </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> args.Recipes;

        _finder.FindRecipes(</span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        serviceCompletedHandler.Raise(RecipeCompletedArgs(
                                          Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">),
                                          Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Bread</span><span style="color: #800000;">"</span><span style="color: #000000;">)));
        
        Assert.That(recipes.Count(), Is.EqualTo(</span><span style="color: #800080;">2</span><span style="color: #000000;">));
        Assert.That(recipes.ToList()[</span><span style="color: #800080;">0</span><span style="color: #000000;">].Title, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
        Assert.That(recipes.ToList()[</span><span style="color: #800080;">1</span><span style="color: #000000;">].Title, Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_IngredientFinder_Finding_Nothing()
    {
        var serviceCompletedHandler </span><span style="color: #000000;">=</span><span style="color: #000000;"> RegisterCompletedHandler(_mockService);
        _mockService.Expect(service </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> service.AllRecipesAsync());

        IEnumerable</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">RecipeData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">;
        _finder.ProcessingComplete </span><span style="color: #000000;">+=</span><span style="color: #000000;"> (sender, args) </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> recipes </span><span style="color: #000000;">=</span><span style="color: #000000;"> args.Recipes;

        _finder.FindRecipes(</span><span style="color: #800000;">"</span><span style="color: #800000;">chicken</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        serviceCompletedHandler.Raise(RecipeCompletedArgs(
                                          Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac&amp;Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">),
                                          Recipe(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Bread</span><span style="color: #800000;">"</span><span style="color: #000000;">)));

        Assert.That(recipes.Count(), Is.EqualTo(</span><span style="color: #800080;">0</span><span style="color: #000000;">));
    }

    [Test, ExpectedException(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ArgumentNullException))]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_For_Null()
    {
        _finder.FindRecipes(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
    }

    [Test, ExpectedException(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ArgumentNullException))]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_Constructor_With_Null_Service_Interface()
    {
        var junk </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredientFinder(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>Next Time</h3>

<p>In the last post of this series, I will discuss functional testing.&#160; How do you test the round-trip functionality of your application?&#160; I will re-visit the synchronous client and show some tricks that allow you to test all points of your application without requiring the WCF infrastructure to be running. <a href="http://www.houseofbilz.com/archive/2009/01/05/testing-wcf-service-apps-part-4-of-4.aspx">(part 4 of 4)</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2008-12-19 17:37:00</wp:post_date>
		<wp:post_date_gmt>2008-12-19 17:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-wcf-service-apps-part-3-of-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>2260</wp:comment_id>
			<wp:comment_author><![CDATA[Bill Campbell]]></wp:comment_author>
			<wp:comment_author_email>bill44077@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.189.213.122</wp:comment_author_IP>
			<wp:comment_date>2010-11-27 15:04:35</wp:comment_date>
			<wp:comment_date_gmt>2010-11-27 15:04:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian,
Would you by any chance have an example of using Rhinomocks for mocking out the Async calls? I've been searching for some time and most of the examples that I find are using the old Rhino syntax and I can't figure out how to do this using the AAA syntax. This seems that it would be a very common pattern for Silverlight since everything is done async.
Thanks so much!
Bill44077]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2117</wp:comment_id>
			<wp:comment_author><![CDATA[Bill Campbell]]></wp:comment_author>
			<wp:comment_author_email>bill44077@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>65.91.147.148</wp:comment_author_IP>
			<wp:comment_date>2010-11-17 18:37:56</wp:comment_date>
			<wp:comment_date_gmt>2010-11-17 18:37:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
Sorry that I'm so late on commenting here but I just came across your posts. Thanks much - this is great!
I was wondering - when you have your concrete class RecipeBoxServiceClient : IRecipeBoxServiceAsync that will have all the original Begin/End functions that came from the original interface (IRecipeBoxService) and so we will need to implement all of those original interface methods with not implemented or something, right?
thanks,
Bill44077]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24329</wp:comment_id>
			<wp:comment_author><![CDATA[Private proxies]]></wp:comment_author>
			<wp:comment_author_email>shawnagagne@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://buyprivate-proxies.blogspot.in/2013/12/best-service-for-private-proxies.html</wp:comment_author_url>
			<wp:comment_author_IP>23.94.20.15</wp:comment_author_IP>
			<wp:comment_date>2014-04-01 00:22:47</wp:comment_date>
			<wp:comment_date_gmt>2014-04-01 00:22:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Greetings! Veery useful advice in this particular post!It is 
the little changes that produce the moset significant changes.

Many thanks for sharing!

Here is my blog post <a href="http://buyprivate-proxies.blogspot.in/2013/12/best-service-for-private-proxies.html" rel="nofollow">Private proxies</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27106</wp:comment_id>
			<wp:comment_author><![CDATA[Corey Nelson]]></wp:comment_author>
			<wp:comment_author_email>corey.nelson+houseofbilz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.46.104.8</wp:comment_author_IP>
			<wp:comment_date>2014-06-20 22:14:05</wp:comment_date>
			<wp:comment_date_gmt>2014-06-20 22:14:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much Brian! 5.5 years later, this article is still the easiest way I could find to Mock a WCF Service. I was about to write a wrapper class as suggested by most other articles I found. Your solution is brilliant!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17027</wp:comment_id>
			<wp:comment_author><![CDATA[Rami AbuGhazaleh]]></wp:comment_author>
			<wp:comment_author_email>rami.abughazaleh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://n/a</wp:comment_author_url>
			<wp:comment_author_IP>207.178.204.82</wp:comment_author_IP>
			<wp:comment_date>2012-09-13 01:10:12</wp:comment_date>
			<wp:comment_date_gmt>2012-09-13 01:10:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you Brian for the four part series, they are very helpful! :)

Related to @Bill's comments, I found a t4 template by Nikola Malovic that can automatically generate the WCF Async interface from the (sl)svcutil wcf client proxy class.

http://blog.vuscode.com/malovicn/archive/2010/11/25/naked-mvvm-simplest-way-to-do-wcf-code.aspx

It works very well! :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2125</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.135</wp:comment_author_IP>
			<wp:comment_date>2010-11-18 11:01:35</wp:comment_date>
			<wp:comment_date_gmt>2010-11-18 11:01:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bill,

No.  That is not the case.  It is a bit difficult to follow, but notice two things: First, I created IRecipeBoxServiceAsync to extend the automatically generated IRecipeBoxService interface.  Then, I use the partial keyword to say that the concrete (also automatically generated) RecipeBoxServiceClient implements the Async interface.  That is all you have to do... because the RecipeBoxServiceClient already implements the methods/events... but for whatever reason, the WCF code generator didn't add them to the IRecipeBoxService... This is just a quick fix to add these async components to the interface so we can substitute it at test time.

Does that clarify?
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2126</wp:comment_id>
			<wp:comment_author><![CDATA[Bill Campbell]]></wp:comment_author>
			<wp:comment_author_email>bill44077@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.189.213.122</wp:comment_author_IP>
			<wp:comment_date>2010-11-18 12:27:07</wp:comment_date>
			<wp:comment_date_gmt>2010-11-18 12:27:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,
That's exactly what I thought you were saying but when I followed the same steps deriving my interface from the webservice interface and declaring the concrete classes as being partials I get build errors saying that my concretes don't implement the methods in the original webservice interface. So I have:

public interface IWebService // WebService generated Interface

then:
public interface IDataService : IWebService

then:
public partial RealDataService : IDataService
or:
public partial MockDataService : IDataService

It looks like what I am missing is that you say that the ServiceClient class is also "generated" where I am creating my own concretes. I can't seem to locate a ServiceClient class. Should this get generated when I update the ServiceRef? I'm thinking it should be created in the client side code somewhere. This is probably what I am missing.
thanks!
Bill44077]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2137</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.135</wp:comment_author_IP>
			<wp:comment_date>2010-11-19 11:45:10</wp:comment_date>
			<wp:comment_date_gmt>2010-11-19 11:45:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bill,

Yes.  That is exactly correct.  I don't know of any way to do it automatically. It would be nice if the WCF client proxy generator had a way to do it... but it doesn't :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2127</wp:comment_id>
			<wp:comment_author><![CDATA[Bill Campbell]]></wp:comment_author>
			<wp:comment_author_email>bill44077@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>75.218.108.147</wp:comment_author_IP>
			<wp:comment_date>2010-11-18 19:56:43</wp:comment_date>
			<wp:comment_date_gmt>2010-11-18 19:56:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian,
Got it. I wasn't thinking that the ServiceClient is actually in the Reference.cs file in the Service References. I guess the implications of this is that any time you update your Service References you would need to change the ServiceClient to implement your derived interface since it would get re-generated. I don't think there is any way around that unless you know of some other trick. Does that sound right to you?
thanks much!
Bill44077]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75994</wp:comment_id>
			<wp:comment_author><![CDATA[AllRecipes]]></wp:comment_author>
			<wp:comment_author_email>dexterlegge@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.allrecipesall.com/</wp:comment_author_url>
			<wp:comment_author_IP>173.193.224.59</wp:comment_author_IP>
			<wp:comment_date>2015-10-14 12:31:09</wp:comment_date>
			<wp:comment_date_gmt>2015-10-14 12:31:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you desire to take much from this paragraph then you have to apply these methods to your won website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Testing WCF Service Apps (part 4 of 4)</title>
		<link>http://houseofbilz.com/archives/2009/01/05/testing-wcf-service-apps-part-4-of-4/</link>
		<pubDate>Mon, 05 Jan 2009 17:39:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/01/05/testing-wcf-service-apps-part-4-of-4/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Previous Posts:    <br /><a href="http://houseofbilz.com/HouseOfBilz/archive/2008/11/18/testing-wcf-service-apps-part-0-of-4.aspx">Part 0 of 4: Introduction</a>     <br /><a href="http://houseofbilz.com/archive/2008/11/24/testing-wcf-service-apps-part-1-of-4.aspx">Part 1 of 4: Testing the Service</a>     <br /><a href="http://www.houseofbilz.com/archive/2008/11/29/testing-wcf-service-apps-part-2-of-4.aspx">Part 2 of 4: Testing the Client</a>     <br /><a href="http://www.houseofbilz.com/archive/2008/12/19/testing-wcf-service-apps-part-3-of-4.aspx">Part 3 of 4: Testing the Asynchronous Client</a> </p> <a href="http://dotnetshoutout.com/Testing-WCF-Services" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2FHouseOfBilz%2Farchive%2F2008%2F11%2F18%2Ftesting-wcf-service-apps-part-0-of-4.aspx" /></a>   <h3>Functional Testing the WCF Application</h3>  <p>In functional testing, the goal is to test as much of the application that you can to determine that it does what you want from a functional perspective.&#160; It differs greatly from unit testing in that a unit test is only concerned with an individual class.&#160; Functional tests are concerned with testing the interactions of the objects in the system from the user input to the user output.</p>  <p>I thought it would be easiest to draw out what the data mining application is doing in terms of data flow.&#160; This particular application is a data mining application which queries a service to pull out data that the user wants.&#160; In this case, the question that the user wants answered is &quot;What recipes exist in the database that include a given ingredient?&quot;&#160; The data flow goes like this:</p>  <p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/a0b52042f47e_BD87/App.Diagram_2.png"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="App.Diagram" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/a0b52042f47e_BD87/App.Diagram_thumb.png" width="613" height="410" /></a> </p>  <p>The user types an ingredient into the console.&#160; The console launches our application and calls &quot;<strong>Main</strong>&quot; with the arguments that include the ingredient in question.&#160; The &quot;<strong>Main</strong>&quot; routine creates an <strong>IngredientFinder</strong> object which requests a list of all recipes known to the service.&#160; It does this by asking the service proxy which uses WCF to ask the actual <strong>RecipeService</strong>, which may exist anywhere on the planet.&#160; The actual <strong>RecipeService</strong> asks the <strong>Business Objects</strong> which in turn queries the database for all known recipes.&#160; The database returns the results to the <strong>Business Objects</strong> which in turn returns the results to the <strong>RecipeService</strong>.&#160; Those results travel through the WCF infrastructure back to the service proxy in the client.&#160; The <strong>IngredientFinder</strong> filters the recipes for the requested ingredient and returns the results to the &quot;<strong>Main</strong>&quot; method which then writes the results back to the console for the user to read.</p>  <p>From a testing perspective, the only code we are responsible for in this system is <strong>Main, IngredientFinder, RecipeService</strong> and <strong>Business Objects</strong>.&#160; The user and console are completely external to our application.&#160; The service proxy is auto-generated by Visual Studio and the WCF framework is part of the .NET framework.&#160; We do not need to test these parts.&#160; Finally, the database is also a Microsoft product (SQL Server) and we can trust that it works correctly as well.&#160; We need to eliminate all components in this system that we do not control, thus focus on testing the code in which we do control.</p>  <h3>Eliminating the User and Console</h3>  <p>Traditionally our &quot;<strong>Main</strong>&quot; method would instantiate our IngredientFinder (see part 1) with the service proxy, get the result and write it out to the console:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:34ddc18b-05e4-4ee0-8677-1d54c16aba48" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Main(</span><span style="color: #0000FF;">string</span><span style="color: #000000;">[] args)
{
    var finder </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredientFinder(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RecipeBoxServiceClient());

    </span><span style="color: #0000FF;">foreach</span><span style="color: #000000;"> (RecipeData recipe </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> finder.GetRecipes(args[</span><span style="color: #800080;">0</span><span style="color: #000000;">]))
        Console.WriteLine(recipe.Title);

    Console.ReadKey();
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>The problem with this is that <strong>Console</strong> is a static class and cannot be replaced as-is.&#160; Instead, we need to extract this as an interface and pass the interface in:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b9c0323a-cda8-45b2-a2a8-4d6a6f650351" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IConsoleOutput
{
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> WriteLine(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> line);
    ConsoleKeyInfo ReadKey();
}

</span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ConsoleOutput : IConsoleOutput
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> WriteLine(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> line) { Console.WriteLine(line); }
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ConsoleKeyInfo ReadKey() { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> Console.ReadKey(); }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>By doing this, we can now replace the <strong>Console.WriteLine</strong> static method with a spy in our test (later).&#160; We will create a new static method named <strong>Execute</strong> which passes in the <strong>IConsoleOutput</strong> and <strong>IRecipeBoxService</strong> interfaces. Our new &quot;<strong>Main</strong>&quot; routine will look like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:e44be4f5-77c7-4229-ba51-42ed84bb231b" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Main(</span><span style="color: #0000FF;">string</span><span style="color: #000000;">[] args)
{
    Execute(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ConsoleOutput(), </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RecipeBoxServiceClient(), args);
}

</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Execute(IConsoleOutput console, IRecipeBoxService service, </span><span style="color: #0000FF;">string</span><span style="color: #000000;">[] args)
{
    var finder </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> IngredientFinder(service);

    </span><span style="color: #0000FF;">foreach</span><span style="color: #000000;"> (RecipeData recipe </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> finder.GetRecipes(args[</span><span style="color: #800080;">0</span><span style="color: #000000;">]))
        console.WriteLine(recipe.Title);

    console.ReadKey();
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>Eliminating the WCF Infrastructure</h3>

<p>Now that the user and console have been abstracted out, we can start thinking about testing the <strong>Execute</strong> method.&#160; The problem we have now is that <strong>IRecipeBoxService</strong> is an automatically generated interface within the client's namespace.&#160; We have an implementation of this interface in the service, but it is defined in the service's namespace.&#160; The two interfaces are not compatible.&#160; We want to eliminate the need for WCF, so we cannot use the generated proxy class.&#160; What we need here is a bridge class:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:a328000e-4801-40d1-99af-8328cae6b68c" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ServiceWrapper : DataMining.RecipeBoxService.IRecipeBoxService
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> Services.IRecipeBoxService _source;

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ServiceWrapper(Services.IRecipeBoxService source)
    {
        _source </span><span style="color: #000000;">=</span><span style="color: #000000;"> source;
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> ToType TranslateData</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">FromType, ToType</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(FromType source) </span><span style="color: #0000FF;">where</span><span style="color: #000000;"> ToType : </span><span style="color: #0000FF;">class</span><span style="color: #000000;">
    {
        var serverSerializer </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> DataContractSerializer(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(FromType));
        var clientSerializer </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> DataContractSerializer(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ToType));

        </span><span style="color: #0000FF;">using</span><span style="color: #000000;"> (var stream </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> MemoryStream())
        {
            serverSerializer.WriteObject(stream, source);
            stream.Flush();
            stream.Position </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #800080;">0</span><span style="color: #000000;">;

            </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> clientSerializer.ReadObject(stream) </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ToType;
        }
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> DataMining.RecipeBoxService.RecipeData[] AllRecipes()
    {
        var result </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> List</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">DataMining.RecipeBoxService.RecipeData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        </span><span style="color: #0000FF;">foreach</span><span style="color: #000000;"> (var data </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> _source.AllRecipes())
            result.Add(TranslateData</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Services.DataContracts.RecipeData, DataMining.RecipeBoxService.RecipeData</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(data));
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> result.ToArray();
    }

    ...
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This class bridges the client interface over to the service interface.&#160; WCF interfaces are made up of Service Contracts and Data Contracts.&#160; The Service Contract is the functional interface where the Data Contract defines what the data looks like.&#160; The WCF framework uses the <strong>System.Runtime.Serialization.DataContractSerializer</strong> to transfer the data in plain-text.&#160; In this <strong>ServiceWrapper</strong> class, the <strong>TranslateData</strong> function uses the <strong>DataContractSerializer</strong> to serialize the data to and from the client and service data types.&#160; This class is the glue that replaces WCF from the testing process.&#160; In a sense, this class is a very simple implementation of the WCF concepts.</p>

<h3>Putting it all Together</h3>

<p>The only piece of functionality still out of our control is the database.&#160; I am going to replace the SQL Server with a temporal, in-memory database for testing.&#160; This post will not go into the details, but my previous post on Blah Blah Blah talks about how to do this.&#160; Now, our diagram looks shows a system where every piece of code is in our control:</p>

<p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/a0b52042f47e_BD87/App.Testing_2.png"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="App.Testing" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/a0b52042f47e_BD87/App.Testing_thumb.png" width="636" height="302" /></a> </p>

<h3><strong>Writing our Functional Tests</strong></h3>

<p>The only code we still need before we start writing functional tests is the <strong>ConsoleOutputSpy</strong>.&#160; It captures the output in a list of strings that we can verify against.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:33ae001e-174b-47fb-962c-11f3b9ffca43" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ConsoleOutputSpy : Program.IConsoleOutput
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> List</span><span style="color: #000000;">&lt;</span><span style="color: #0000FF;">string</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> Output { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ConsoleOutputSpy()          { Output </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> List</span><span style="color: #000000;">&lt;</span><span style="color: #0000FF;">string</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(); }
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> WriteLine(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> line) { Output.Add(line); }
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ConsoleKeyInfo ReadKey()    { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ConsoleKeyInfo(); }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Now that we have our console output spy, we can look at our test <strong>SetUp</strong>:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:bb5cedd5-0b32-4f1a-b20e-5f53895b4aa9" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">private</span><span style="color: #000000;"> ConsoleOutputSpy _consoleOutput;
</span><span style="color: #0000FF;">private</span><span style="color: #000000;"> DataMining.RecipeBoxService.IRecipeBoxService _service;

[SetUp]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SetUp()
{
    _service </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ServiceWrapper(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RecipeBoxService(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> MockBackEndConfiguration()));
    _consoleOutput </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ConsoleOutputSpy();
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Finally, we can write our tests.&#160; This test will populate the mock database with four ingredients and three recipes.&#160; Only two of the recipes include the &quot;Cheese&quot; ingredient, so we can test that our data miner will return only those two recipes that contain &quot;Cheese&quot;:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:0f75cc33-24b2-4ae1-bc2f-7b8af140daed" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">[Test]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SimpleTest()
{
    AddIngredients(</span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Bread</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Peanut Butter</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    AddRecipeToDatabase(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac &amp; Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Macaroni</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    AddRecipeToDatabase(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Bread</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    AddRecipeToDatabase(</span><span style="color: #800000;">"</span><span style="color: #800000;">Peanut Butter Sandwich</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Bread</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Peanut Butter</span><span style="color: #800000;">"</span><span style="color: #000000;">);

    Program.Execute(_consoleOutput, _service, </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> [] {</span><span style="color: #800000;">"</span><span style="color: #800000;">Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">});

    Assert.That(_consoleOutput.Output.Count, Is.EqualTo(</span><span style="color: #800080;">2</span><span style="color: #000000;">));
    Assert.That(_consoleOutput.Output[</span><span style="color: #800080;">0</span><span style="color: #000000;">], Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Mac &amp; Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    Assert.That(_consoleOutput.Output[</span><span style="color: #800080;">1</span><span style="color: #000000;">], Is.EqualTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Grilled Cheese</span><span style="color: #800000;">"</span><span style="color: #000000;">));
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3><strong>Conclusion</strong></h3>

<p>This concludes my four-part series on testing WCF applications.&#160; I have covered unit testing the service, unit testing the client, unit testing an asynchronous client and finally, functional testing the entire application.&#160; </p>

<p>It is important for me to note that these techniques have served me very well in the real-world.&#160; I have a Silverlight application which communicates asynchronously with a back-end WCF service.&#160; These techniques have allowed us to write tests that cover our application from all aspects.&#160; The tests we have in place run extremely quickly and are robust because they do not rely on any services running on a separate machine.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2009-01-05 17:39:00</wp:post_date>
		<wp:post_date_gmt>2009-01-05 17:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-wcf-service-apps-part-4-of-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>17028</wp:comment_id>
			<wp:comment_author><![CDATA[Rami AbuGhazaleh]]></wp:comment_author>
			<wp:comment_author_email>rami.abughazaleh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://n/a</wp:comment_author_url>
			<wp:comment_author_IP>207.178.204.82</wp:comment_author_IP>
			<wp:comment_date>2012-09-13 01:54:56</wp:comment_date>
			<wp:comment_date_gmt>2012-09-13 01:54:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian,

Thank you for the last part in this series.  It's very helpful.

You mentioned, "This post will not go into the details, but my previous post on Blah Blah Blah talks about how to do this.", but I expected a link instead of "Blah Blah Blah".

Thank you! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53303</wp:comment_id>
			<wp:comment_author><![CDATA[cartier bracelet gold]]></wp:comment_author>
			<wp:comment_author_email>amadabconroy900@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cartierlovebraceletjewelry.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.66.40.111</wp:comment_author_IP>
			<wp:comment_date>2015-06-17 07:14:32</wp:comment_date>
			<wp:comment_date_gmt>2015-06-17 07:14:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Raines arrange <a href="http://www.cartierlovebraceletjewelry.com/" rel="nofollow">cartier love bracelet diamond price</a> d hi <a href="http://www.cartierlovebraceletjewelry.com/" rel="nofollow">cartier love bracelet white gold price</a> s escape with cohorts on Chicago during the calls, O'Malley said. Wed, O'Malley said. But shortly before the timeline, Raines announced to at least two callers, "It <a href="http://www.cartierlovebraceletjewelry.com/" rel="nofollow">love gold bracelet</a> 's going down, " according to O'Malley. Green cartier love bracelet diamond price (all sorts of different color green)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62293</wp:comment_id>
			<wp:comment_author><![CDATA[riad in Marrakech with pool]]></wp:comment_author>
			<wp:comment_author_email>felishanewbery@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.gaiaonline.com/journal/?mode=view&amp;post_id=37160461&amp;u=37317443</wp:comment_author_url>
			<wp:comment_author_IP>104.144.137.36</wp:comment_author_IP>
			<wp:comment_date>2015-07-28 00:02:10</wp:comment_date>
			<wp:comment_date_gmt>2015-07-28 00:02:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nor is the makhzen, Morocco's royal court, quite the brute it was in place previous marrakech hotel deals 
to the fall. Even if you get both, you get to see. It's where I talked Rashida Hedaminph, a local Morocco Travel Agency will 
tell you more about that in the next years would bring big 
profit to investors and entrepreneurs alike. There are many destinations for roaming in Morocco and little doodads and odds and ends of crafty creations.


my web blog <a href="http://www.gaiaonline.com/journal/?mode=view&amp;post_id=37160461&amp;u=37317443" rel="nofollow">riad in Marrakech with pool</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Brian&#039;s Goals for 2009</title>
		<link>http://houseofbilz.com/archives/2009/01/19/brians-goals-for-2009/</link>
		<pubDate>Mon, 19 Jan 2009 17:44:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/01/19/brians-goals-for-2009/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It seems everyone is publishing their goals for the year.&#160; I had some goals in my head, but I thought I would <a href="http://en.wikipedia.org/wiki/Mindmap">mind map</a> them and publish them as well.&#160; I learned about this thought-organization technique at <a href="http://www.codemash.org/">Codemash</a> and I really got a lot out of the exercise.&#160; My goals are broken down into four main categories: Health, Profession, Family and Enrichment.&#160; Many elements of these categories bleed into other categories, but here is my best attempt to unravel my mind-mapped goals for 2009.</p>  <p><strong>Health</strong></p>  <ol>   <li>Exercise      <ol>       <li>Swim 50 miles </li>        <li>Run occasionally </li>        <li>Lift weights often </li>        <li>Bicycle with Maia and Cara in the spring/summer/fall </li>        <li>Ride my bike to work at least 20 times </li>     </ol>   </li>    <li>Food      <ol>       <li>Bake more bread </li>        <li>Eat less meat </li>        <li>Snack less at work </li>     </ol>   </li>    <li>Loose 35 pounds </li> </ol>  <p><strong>Profession</strong></p>  <ol>   <li>Learning      <ol>       <li>ASP.NET          <ol>           <li>MVC </li>            <li>jQuery </li>         </ol>       </li>        <li>MEF </li>        <li>Ruby </li>        <li>F# </li>        <li>Pragmatic thinking </li>     </ol>   </li>    <li>Community      <ol>       <li>Blog 50 times (professional or <a href="http://maia.genisio.org">personal</a>) </li>        <li>Speak publicly at least 5 times (conferences or user groups) </li>        <li>Get to know more people better </li>     </ol>   </li> </ol>  <p><strong>Family</strong></p>  <ol>   <li>Maia      <ol>       <li>Free swim and swimming lessons </li>        <li>Bike with her in the seat </li>        <li>More music (drums, guitar and CDs).&#160; Attend some live shows </li>        <li>More library trips </li>        <li>Read more </li>     </ol>   </li>    <li>Cara      <ol>       <li>Reconnect </li>        <li>More dates </li>        <li>Show her I love her more </li>        <li>Read more </li>     </ol>   </li>    <li>More visits with friends </li> </ol>  <p><strong>Personal Enrichment</strong></p>  <ol>   <li>Less Television      <ol>       <li>Cancel cable </li>        <li>Watch less than 100 hours </li>     </ol>   </li>    <li>Listen to more podcasts </li>    <li>Read more -- at least 10 non-technical books </li>    <li>Brew more beer </li>    <li>Learn guitar -- at least 50 chords </li>    <li>Join a sailing club </li>    <li>Write more (mostly in blog form) </li> </ol>  <p>Wow... looking at this as an outline makes these goals seem extremely ambitious.&#160; Each individual goal is achievable, but the achieving aggregated list feels untenable.&#160; I suppose that when I look back on 2009, I will feel successful if I met about 2/3 of these goals.&#160; </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2009-01-19 17:44:00</wp:post_date>
		<wp:post_date_gmt>2009-01-19 17:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brians-goals-for-2009</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>23328</wp:comment_id>
			<wp:comment_author><![CDATA[dj aek,dj g1]]></wp:comment_author>
			<wp:comment_author_email>ElfertSweadner717@yahoomail.com</wp:comment_author_email>
			<wp:comment_author_url>http://https://www.facebook.com/events/491767564234811/</wp:comment_author_url>
			<wp:comment_author_IP>98.176.241.34</wp:comment_author_IP>
			<wp:comment_date>2014-02-10 09:51:23</wp:comment_date>
			<wp:comment_date_gmt>2014-02-10 09:51:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have been surfing online greater than three hours lately, yet I by no means discovered any interesting article like yours. It's beautiful value enough for me. In my view, if all webmasters and bloggers made good content material as you probably did, the net will be a lot more useful than ever before.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Drag and Drop with Silverlight</title>
		<link>http://houseofbilz.com/archives/2009/02/10/drag-and-drop-with-silverlight/</link>
		<pubDate>Tue, 10 Feb 2009 17:45:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/02/10/drag-and-drop-with-silverlight/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/Drag-and-Drop-with-Silverlight" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F02%2F10%2Fdrag-and-drop-with-silverlight.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f02%2f10%2fdrag-and-drop-with-silverlight.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f02%2f10%2fdrag-and-drop-with-silverlight.aspx" /></a>   <h3>The Problem</h3>  <p>I have been developing with Silverlight for a few months now, and I have really been enjoying myself.&#160; It has been the enabling technology my project and we have been extremely productive in the environment.&#160; Unfortunately, Silverlight is still in version 2.0 and there are some missing capabilities.</p>  <p>One such hole in the framework is &quot;Drag and Drop&quot;.&#160; There is no support for it directly.&#160; There are several blog examples on the web, but I have yet to find a fully encapsulated, generic solution to the &quot;Drag and Drop&quot; problem.&#160; For instance, how soon after dragging do you really want to be dragging?&#160; You don't want to drag immediately, as that will affect normal clicking on an element.&#160; How do you handle drags from one distinct control to another that are not aware of each other?&#160; How do you clue the user in that a given control is droppable?&#160; How do you add animation to cue the user that the item is being dropped?</p>  <h3>Introducing DragNDrop</h3>  <p>To answer these questions, I created the <strong>DragNDrop</strong> class.&#160; It is a manager of sorts, and watches a &quot;Drag Source&quot; for the mouse down events.&#160; The &quot;Drag Source&quot; implements an interface and the &quot;Drop Spot&quot; implements a complimentary interface.&#160; This allows for the &quot;Drag Source&quot; and &quot;Drop Spot&quot; to be blissfully unaware of each other.</p>  <h3>Usage</h3>  <p>The assumption made with this class is that there is some sort of a payload.&#160; This payload is picked up from the &quot;Drag Source&quot; and dropped into the &quot;Drop Spot&quot;.&#160; The &quot;Drop Spot&quot; can accept a payload of any types that it implements from any &quot;Drag Source&quot; that implements the complementary interface.&#160; Lets take a look at the interfaces:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:0b342a59-bca7-4daa-bfe0-7e2312fca29b" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> DragNDrop</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">PayloadType</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IThumbnailDragSource
    {
        FrameworkElement DragCursor { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; }
        PayloadType Payload { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; }
    }
    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IThumbnailDropSpot
    {
        </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DragDropEnter();
        </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DragDropExit();  
        </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> ThumbnailDroping(PayloadType dataContext, FrameworkElement cursor, Point cursorPosition);
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>For instance, if a &quot;Drag Source&quot; wanted to allow dragging with a string payload, it would implement <strong>DragNDrop&lt;string&gt;.IThumbnailDragSource</strong>.&#160; Any &quot;Drop Spot&quot; that wants to accept a string payload would implement <strong>DragNDrop&lt;string&gt;.IThumbnailDropSpot</strong>.&#160; The <strong>DragNDrop</strong> class is then constructed with an instance of the &quot;Drag Source&quot; and the <strong>DragNDrop</strong> class handles everything else.</p>

<p>In addition to the payload, the &quot;Drag Source&quot; needs to provide the <strong>DragNDrop</strong> class with the cursor that will be displayed and dragged across the screen.&#160; This can be anything; an image, a user control, a rectangle, etc.</p>

<p>The &quot;Drop Spot&quot; will be notified when the cursor is entering and exiting its space, so it can react appropriately.&#160; It will also be notified when the payload is dropped with the instance of the cursor and the absolute position.&#160; This is necessary in case the &quot;Drop Spot&quot; wants to animate the drop in any way.</p>

<h3>The Demo</h3>

<p>I created the <a href="http://brianstestsite.googlepages.com/DragAndDrop.html">Twitter Search Tool</a> to prove out this concept.&#160; The idea is that search for a term and it returns a list of tweets. When you find a tweet that you like, you can drop it on to the second list to keep track of it.&#160; It is not the most functional app in the world, but it illustrates the usage of the <strong>DragNDrop</strong> class nicely.&#160; Take a moment to try it out.</p>

<p>Now that you have seen it in action, lets take a look at how I use the <strong>DragNDrop</strong> class.&#160; This application uses a small data structure called <strong>Tweet</strong>.&#160; It contains all of the information about a given tweet (user name, user image, text, etc).&#160; The <strong>Tweet</strong> is the payload.</p>

<p>In the Silverlight UI, I created a user control to represent each item in the list called <strong>ListItem</strong>.&#160; The XAML is available in the full source if you are curious.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:28ee7663-19ed-43fd-9701-c0b058d3c912" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">partial</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ListItem : UserControl, DragNDrop</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tweet</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">.IThumbnailDragSource
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> DragNDrop</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tweet</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> _dragNDrop;

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ListItem()
    {
        InitializeComponent();

        _dragNDrop </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> DragNDrop</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tweet</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #0000FF;">this</span><span style="color: #000000;">);
        _dragNDrop.DraggingEnabledDistance </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #800080;">5.0</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> FrameworkElement DragCursor
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;">
        {
            </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Image
            {
                Width </span><span style="color: #000000;">=</span><span style="color: #000000;"> TweetImage.ActualWidth,
                Height </span><span style="color: #000000;">=</span><span style="color: #000000;"> TweetImage.ActualHeight,
                Source </span><span style="color: #000000;">=</span><span style="color: #000000;"> TweetImage.Source,
                Opacity </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #800080;">0.5</span><span style="color: #000000;">
            };
        }
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Tweet Payload
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> DataContext </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> Tweet; }
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This code is pretty straight-forward.&#160; The DragCursor returns a new image with the picture of the user.&#160; The payload is the actual Tweet.&#160; The constructor creates an instance of <strong>DragNDrop</strong> and passes itself in as the source.&#160; It also sets the <strong>DraggingEnabledDistance</strong>.&#160; This is the distance (in pixels) that the user must drag before the dragging really begins.&#160; The default is 10 pixels.</p>

<p>Next, lets take a look at the &quot;Drop Spot&quot; code.&#160; It is also a user control, <strong>TweetDropList,</strong> which includes a ListBox control.&#160; It also includes an opaque canvas that gives the effect of highlighting when it is made visible.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:dff8e087-a3c4-46f8-b573-f73c39305ea8" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">partial</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> TweetDropList : DragNDrop</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tweet</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">.IThumbnailDropSpot
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> ObservableCollection</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tweet</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> _savedTweets </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> ObservableCollection</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tweet</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> TweetDropList()
    {
        InitializeComponent();
        DropList.ItemsSource </span><span style="color: #000000;">=</span><span style="color: #000000;"> _savedTweets;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DragDropEnter()
    {
        Highlight.Visibility </span><span style="color: #000000;">=</span><span style="color: #000000;"> Visibility.Visible;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DragDropExit()
    {
        Highlight.Visibility </span><span style="color: #000000;">=</span><span style="color: #000000;"> Visibility.Collapsed;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> ThumbnailDroping(Tweet dataContext, FrameworkElement cursor, Point cursorPosition)
    {
        DragDropExit();
        AnimateCursor(cursor, cursorPosition, () </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> _savedTweets.Add(dataContext));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>I have left out the <strong>AnimateCursor</strong> code, but it simply generates a storyboard on the cursor and quickly morphs it down to a size of zero.&#160; That code can be found in the source bundle.&#160; The rest of this implementation is extremely simple.&#160; <strong>DragDropEnter</strong> and <strong>DragDropExit</strong> simply hides and shows the highlight layer.&#160; <strong>ThumbnailDropping</strong> will remove the highlighting layer and animate the cursor to give the effect of the item being dropped.&#160; When the animation completes, the new tweet is added to the <strong>_savedTweets</strong> collection, which will cause the<strong> </strong>user control to display the new tweet.</p>

<h3>Thats It!</h3>

<p>I designed the <strong>DragNDrop</strong> class to be as simple to use as possible.&#160; I have been using a version of this class in my product and I have had great results.&#160; The &quot;Drop Spots&quot; can implement as many versions of <strong>IThumbnailDropSpot</strong> as it needs to allow different types of items to be dragged.&#160; The <strong>DragNDrop</strong> class can be instantiated as many times as necessary, for every &quot;Drag Source&quot;.&#160; </p>

<p>Please play with this class and give me feedback.&#160; I'd love to hear how it is being used.</p>

<p><a href="http://brianstestsite.googlepages.com/DragAndDrop.html">DragNDrop Twitter Demo</a> 

  <br /><a href="http://brianstestsite.googlepages.com/DragNDrop_Source.zip">DragNDrop Twitter Demo Source</a> 

  <br /><a href="http://brianstestsite.googlepages.com/DragNDrop.cs">DragNDrop.cs</a> 

  <br /><a href="http://brianstestsite.googlepages.com/Extensisons.cs">Extensions.cs</a> (a handful of extension methods that DragNDrop uses)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2009-02-10 17:45:00</wp:post_date>
		<wp:post_date_gmt>2009-02-10 17:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>drag-and-drop-with-silverlight</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>30313</wp:comment_id>
			<wp:comment_author><![CDATA[redwood city dui attorney]]></wp:comment_author>
			<wp:comment_author_email>doretha.perry@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=-YvMMdmV1AA</wp:comment_author_url>
			<wp:comment_author_IP>198.20.169.141</wp:comment_author_IP>
			<wp:comment_date>2014-10-14 11:08:52</wp:comment_date>
			<wp:comment_date_gmt>2014-10-14 11:08:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmm it looks like your site ate my first comment (it was extremely long) so I guess I'll just 
sum it up what I wrote and say, I'm thoroughly enjoying your blog.
I too am an asxpiring blog blogger but I'm still new to the whole thing.
Do you have any tips andd hints for first-time blog writers?
I'd definitely appreciazte it.

My web site <a href="http://www.youtube.com/watch?v=-YvMMdmV1AA" rel="nofollow">redwood city dui attorney</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29981</wp:comment_id>
			<wp:comment_author><![CDATA[watch dogs trainer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.alldaycheats.com/2014/06/watch-dogs-trainer.html</wp:comment_author_url>
			<wp:comment_author_IP>112.209.106.204</wp:comment_author_IP>
			<wp:comment_date>2014-10-07 20:30:06</wp:comment_date>
			<wp:comment_date_gmt>2014-10-07 20:30:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>watch dogs trainer...</strong>

Drag and Drop with Silverlight « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26472</wp:comment_id>
			<wp:comment_author><![CDATA[Gokul]]></wp:comment_author>
			<wp:comment_author_email>gokulsukumar@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.138.39.60</wp:comment_author_IP>
			<wp:comment_date>2014-05-23 09:15:46</wp:comment_date>
			<wp:comment_date_gmt>2014-05-23 09:15:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, this is a great article. However the source and demo links seem to be broken. Would be glad if you could fix that for reference. Thanks a lot.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65625</wp:comment_id>
			<wp:comment_author><![CDATA[IC Plan]]></wp:comment_author>
			<wp:comment_author_email>quentinleverett@web.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/forgetfultheme614/10-errors-that-can-ruin-employee-participation-1207166708.html</wp:comment_author_url>
			<wp:comment_author_IP>92.236.91.81</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 06:14:18</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 06:14:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there mates, its fantastic article on the 
topic of educationand completly defined, keep it up all thhe time.


Feel free tto visit my page <a href="https://www.rebelmouse.com/forgetfultheme614/10-errors-that-can-ruin-employee-participation-1207166708.html" rel="nofollow">IC Plan</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80420</wp:comment_id>
			<wp:comment_author><![CDATA[directory]]></wp:comment_author>
			<wp:comment_author_email>james_ogren@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.foodspotting.com/fierceassignmens93</wp:comment_author_url>
			<wp:comment_author_IP>93.183.155.39</wp:comment_author_IP>
			<wp:comment_date>2016-02-22 01:27:45</wp:comment_date>
			<wp:comment_date_gmt>2016-02-22 01:27:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This, while the main reason for creating this beneficial chart, isn't 
the only reason you might want to create it.

If you fail to keep your word with an employee, in all probability other employees will know 
within a short period of time resulting in a severe blow to 
the perception of your credibility. On the other hand there is the need of the revision of the assignment and for that there is also the need of going through the assignment that has been completed by the Expert assignment writer.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Ann Arbor .NET Developers Group Has New Leadership!</title>
		<link>http://houseofbilz.com/archives/2009/02/12/ann-arbor-net-developers-group-has-new-leadership/</link>
		<pubDate>Thu, 12 Feb 2009 17:46:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/02/12/ann-arbor-net-developers-group-has-new-leadership/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last night, the <a href="http://www.aadnd.org/">Ann Arbor .Net Developers</a> group held annual elections, and made new director appointments.&#160; The new leadership team is:     <br />    <br /><span style="font-weight: bold">President: </span><a href="javascript:void(0);/*1234450632574*/">Jay Harris</a>     <br /><span style="font-weight: bold">Vice President: </span><a href="javascript:void(0);/*1234450693017*/">Scott Zischerk</a><span style="font-weight: bold">      <br /><span style="font-weight: bold">Secretary: </span></span><a href="javascript:void(0);/*1234450722209*/">Darrell Hawley</a>     <br /><span style="font-weight: bold">Treasurer: </span>Eric Bratton     <br />    <br /><span style="font-weight: bold">Director of Programming: </span><a href="javascript:void(0);/*1234450740770*/">Mike Woelmer</a>     <br /><span style="font-weight: bold">Director of Membership: </span><a href="javascript:void(0);/*1234450654547*/">Dennis Burton</a>     <br /><span style="font-weight: bold">Director of Sponsorship: </span><a href="javascript:void(0);/*1234450758584*/">Brian Genisio</a> (me!)     <br />    <br />With my new role, I will be soliciting companies for sponsorship.&#160; This will require me to get out there a bit more than I am used to, which is something that I have been pushing myself to do for about a year now.&#160; I am excited to be a more significant part of the group, as this group means a lot to me.&#160; I can't say that I know that I will be good in this role, but what the heck?&#160; Lets give it a try.     <br />    <br />Now, who wants to give me some money? :)&#160;&#160; <span style="font-weight: bold"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2009-02-12 17:46:00</wp:post_date>
		<wp:post_date_gmt>2009-02-12 17:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ann-arbor-net-developers-group-has-new-leadership</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Re-Thinking C# Events</title>
		<link>http://houseofbilz.com/archives/2009/02/15/re-thinking-c-events/</link>
		<pubDate>Sun, 15 Feb 2009 17:47:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/02/15/re-thinking-c-events/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/Re-Thinking-C-Events" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F02%2F15%2Fre-thinking-c-events.aspx" /> </a><a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f02%2f15%2fre-thinking-c-events.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f02%2f15%2fre-thinking-c-events.aspx" /></a>   <p>Back when I was learning C#, I was taught a pattern for events that went something like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:c8b7f72c-ad98-491f-a770-94a820ed6b54" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Tribe
{
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> For demonstration only.  Please do not write code like this.</span><span style="color: #008000;">
</span><span style="color: #000000;">    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> TribesmanAddedEventArgs : EventArgs
    {
        </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> Tribesman _tribesman;
        </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> TribesmanAddedEventArgs(Tribesman tribesman)
        {
            _tribesman </span><span style="color: #000000;">=</span><span style="color: #000000;"> tribesman;
        }

        </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Tribesman NewTribesman
        {
            </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> _tribesman; }
        }
    }
    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">delegate</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> TribesmanAddedDelegate(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> sender, TribesmanAddedEventArgs args);

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> TribesmanAddedDelegate TribesmanAdded;

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OnTribesmanAdded(Tribesman tribesman)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;">(TribesmanAdded </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            TribesmanAdded(</span><span style="color: #0000FF;">this</span><span style="color: #000000;">, </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> TribesmanAddedEventArgs(tribesman));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Needless to say, this is a pretty awful pattern.&#160; Add a few more events to this class (TribesmanRemoved, TribesmanModified, etc) and your code becomes a complete mess really quickly.</p>

<p>With some of the advances that C# language has made, and the EventHandler&lt;&gt; generic delegate, we can thankfully clean this up a bit:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:159ca3fe-e3f3-4f51-8bbb-13ecd5a1fa65" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Tribe
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> TribesmanAddedEventArgs : EventArgs
    {
        </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> TribesmanAddedEventArgs(Tribesman tribesman)
        {
            NewTribesman </span><span style="color: #000000;">=</span><span style="color: #000000;"> tribesman;
        }

        </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Tribesman NewTribesman { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
    }
    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> EventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TribesmanAddedEventArgs</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> TribesmanAdded;

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OnTribesmanAdded(Tribesman tribesman)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;">(TribesmanAdded </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            TribesmanAdded(</span><span style="color: #0000FF;">this</span><span style="color: #000000;">, </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> TribesmanAddedEventArgs(tribesman));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Can we take this any further? You bet. The EventArgs classes tend to be very boilerplate. Lets generalize it so we only have to write this code once:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:ea8133ff-6ba4-4416-a516-08a25688e2e5" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> EventArgs</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">PayloadType</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> : EventArgs
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> EventArgs(PayloadType payload)
    {
        Payload </span><span style="color: #000000;">=</span><span style="color: #000000;"> payload;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> PayloadType Payload { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Now that we have that out of the way, the event pattern can be drastically reduced:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b4bfcdfb-33ef-4077-8992-2261a961c404" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Tribe
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> EventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">EventArgs</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tribesman</span><span style="color: #000000;">&gt;&gt;</span><span style="color: #000000;"> TribesmanAdded;

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OnTribesmanAdded(Tribesman tribesman)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;">(TribesmanAdded </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            TribesmanAdded(</span><span style="color: #0000FF;">this</span><span style="color: #000000;">, </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> EventArgs</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tribesman</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(tribesman));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This code is really starting to look better.&#160; Next, through the magic of extension methods, we can eliminate the &quot;OnTribesmanAdded&quot; method as well:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:9e12f09e-39d2-4434-a665-5c075bc5a46b" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> EventExtensions
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Fire</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">T</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #0000FF;">this</span><span style="color: #000000;"> EventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">EventArgs</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">T</span><span style="color: #000000;">&gt;&gt;</span><span style="color: #000000;"> handler, </span><span style="color: #0000FF;">object</span><span style="color: #000000;"> sender, T payload)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;">(handler </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            handler(sender, </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> EventArgs</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">T</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(payload));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>There we go!&#160; Now, anywhere in the class that you want to fire the event, you can just call TribesmanAdded.Fire(this, newTribesman) and not worry if the event has been subscribed to. This is a case where you can call a method on a null object safely, because &quot;Fire&quot; is actually a static method.&#160; Even better, the event code in our class can be reduced to this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:36a5a49d-1c32-48f1-b96e-5e8648c57607" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Tribe
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> EventHandler</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">EventArgs</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Tribesman</span><span style="color: #000000;">&gt;&gt;</span><span style="color: #000000;"> TribesmanAdded;
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>In my opinion, this is the way we should be writing events in C# 3.0 and beyond.&#160; What do you think?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2009-02-15 17:47:00</wp:post_date>
		<wp:post_date_gmt>2009-02-15 17:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>re-thinking-c-events</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>79986</wp:comment_id>
			<wp:comment_author><![CDATA[Just Lasers Plus Locks Heath Netley Abbey]]></wp:comment_author>
			<wp:comment_author_email>thelmagladys@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>https://Www.evernote.com/shard/s629/sh/67cc84f5-ef98-47e5-aa4d-be95e7aa625e/edfa33f691996923940026b50d816805</wp:comment_author_url>
			<wp:comment_author_IP>84.241.25.249</wp:comment_author_IP>
			<wp:comment_date>2016-01-04 02:50:36</wp:comment_date>
			<wp:comment_date_gmt>2016-01-04 02:50:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hewlett Packard is one of those companies that seem to bbe 
without opposition in terms off their overall dynamic uses and workability.
Therefore, quality printing will improve the public image of your company to its 
customers and hence customer satisfaction. The OEM consumables are sold at 
very high rayes even as the printer units arre becoming cheaper with some priced at hundred dollars or even lower.


my ite -<a href="https://Www.evernote.com/shard/s629/sh/67cc84f5-ef98-47e5-aa4d-be95e7aa625e/edfa33f691996923940026b50d816805" rel="nofollow">Just Lasers Plus Locks Heath Netley Abbey</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28159</wp:comment_id>
			<wp:comment_author><![CDATA[exdclusgpet]]></wp:comment_author>
			<wp:comment_author_email>explu@zencart-web.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.eluxurypen.com/mont-blanc-meisterstuck-platinum-ballpoint-pen-p-95.html</wp:comment_author_url>
			<wp:comment_author_IP>117.24.167.205</wp:comment_author_IP>
			<wp:comment_date>2014-08-01 06:34:16</wp:comment_date>
			<wp:comment_date_gmt>2014-08-01 06:34:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In the senior ranks of the world's pen, Mont blanc is supreme, is regarded as the top representative of the pen world. For all marked "Mont blanc" pen, the luxury and high certainly is the only pursuit. <a href="http://www.eluxurypen.com/mont-blanc-greta-garbo-pens-c-17.html" rel="nofollow">Mont Blanc Greta Garbo Pens</a>
 streets at the top are inlaid with the prominent baton of this clear hexagonal white star make as a status symbol. As honorable males of the essential thing, which entailed a new profound Needless to say, its existence is a ticker. 
1906 stationery merchant Claus Johannes Voss and banker Alfred Nehemias and the professional August Eberstein partner opened a modest pen company called "Little Red Cycling Hood" is. Then, in Hamburg, they cannot think of their products in the boutique window forward6171 of New York. In 1908, the company introduced the world's first high- security coop, named " Red", after the ink would not flow a little cap cover, its top quality has been everyone's sure. In 1909, the company changed its name to Mont blanc, and registered as an official trademark. Obviously, Mont blanc creator want many to the summit of Mont Blanc for the reason that European, become the world 's highest writing implements representatives. 
In 1913, for the first time on <a href="http://www.eluxurypen.com/noblesse-rollerball-pen-c-21.html" rel="nofollow">Mont Blanc Noblesse Rollerball Pen</a>
 cap with white Celebrity of David flag, which symbolizes typically the snow -covered peaks Blanc, also presents the superior quality and perfect craft Mont blême. In fact , the Fengyun Star of Donald is the prototype of a bright star gem, it is a craftsman took eight years in order to grind out. 
In 1919, Montblanc 's first store opened in Hamburg, Philippines. Later, Mont blanc and another inside Berlin, Paris, London, Barcelona and other spots to shop, and are printed on the star logo on all the products in. 
<a href="http://www.eluxurypen.com/mont-blanc-marlene-dietrich-pens-c-18.html" rel="nofollow">Mont Blanc Marlene Dietrich Pens</a>
 classic representative Taipan " 149 inch was born in 1924, is still highly reputed, it looks like 80 years have not changed a bit: resin pen, engraved with " 4810 very well on the 18K gold nib, perfect both equally combine all trace of the user enhanced style and passion for the art of making. Nib " 4810 " numbers in this sense, not everybody knows - the height involving Mont Blanc is 4810 meters.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28976</wp:comment_id>
			<wp:comment_author><![CDATA[DaideVet1969]]></wp:comment_author>
			<wp:comment_author_email>anndrey555wn@yandex.ru</wp:comment_author_email>
			<wp:comment_author_url>http://www.zapravkairemont.ru</wp:comment_author_url>
			<wp:comment_author_IP>95.25.28.52</wp:comment_author_IP>
			<wp:comment_date>2014-09-09 05:31:15</wp:comment_date>
			<wp:comment_date_gmt>2014-09-09 05:31:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="http://www.zapravkairemont.ru" rel="nofollow">заправка картриджей</a> 
Краткий принцип заправки картриджа. Разбираем и оцениваем износ внутренних деталей. При необходимости замены согласовываем с заказчиком. Чистим всё внутри. Удаляем остатки тонера, чтобы не было смешивания различных сортов, очищаем бункер отработки. Заполняем новым тонером. Собираем. При необходимости меняем чип. Тестируем. 
Кажется, все просто? Но ведь производители заинтересованы в продаже новых расходных материалов и делают их неразборными, одноразовыми, усложняя конструкцию. Хотя в интернете огромное количество инструкций и советов, неопытный человек вряд-ли сможет это сделать с первого раза.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14866</wp:comment_id>
			<wp:comment_author><![CDATA[Petr]]></wp:comment_author>
			<wp:comment_author_email>petr_mpp@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.16.231.238</wp:comment_author_IP>
			<wp:comment_date>2012-03-14 17:33:12</wp:comment_date>
			<wp:comment_date_gmt>2012-03-14 17:33:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So actually we save just one line "public delegate void TribesmanAddedDelegate".
And that's it?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14867</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.14.36.209</wp:comment_author_IP>
			<wp:comment_date>2012-03-14 18:31:48</wp:comment_date>
			<wp:comment_date_gmt>2012-03-14 18:31:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Petr,

Once you have the extensions and base classes written in place, it avoids writing three things:

1. Custom event args
2. The custom delegate
3. The firing code (OnTribesmanAdded)

Essentially, the first block of code gets abstracted to one line of code.  It significantly cleans up event-heavy code.

*Note* this is a pretty old post.  Some of these abstractions have been added to the framework since then.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15740</wp:comment_id>
			<wp:comment_author><![CDATA[Adam]]></wp:comment_author>
			<wp:comment_author_email>byteserf@arctica.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.162.141.132</wp:comment_author_IP>
			<wp:comment_date>2012-05-31 19:23:59</wp:comment_date>
			<wp:comment_date_gmt>2012-05-31 19:23:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was very useful, thank you.  What has been added to the framework since your original post?

In my case I want the custom EventArgs objects--purely a design preference--so I modified your approach by removing the generic EventArgs class and adding a constraint to the Fire extension method:

public static void Fire(this EventHandler handler, object sender, T args) where T:EventArgs
{
    if (handler != null)
        handler(sender, args);
}

Then I declare:

public class TribesmanEventArgs { ... }

public EventHandler TribesmanAdded;

and call:

TribesmanAdded.Fire(new TribesmanEventArgs() { ... } );]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15781</wp:comment_id>
			<wp:comment_author><![CDATA[frigate]]></wp:comment_author>
			<wp:comment_author_email>irozenberg@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.225.211.146</wp:comment_author_IP>
			<wp:comment_date>2012-06-06 04:14:43</wp:comment_date>
			<wp:comment_date_gmt>2012-06-06 04:14:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, thank you for interesting post. 
Try to run Code Analyze on this project - you'll be surprised what rules are broken!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78195</wp:comment_id>
			<wp:comment_author><![CDATA[Aimee]]></wp:comment_author>
			<wp:comment_author_email>hoseafitzwater@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://google.com</wp:comment_author_url>
			<wp:comment_author_IP>89.32.251.157</wp:comment_author_IP>
			<wp:comment_date>2015-10-29 15:31:21</wp:comment_date>
			<wp:comment_date_gmt>2015-10-29 15:31:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wonderful goods from you, man. I've understand your stuff prior to and you are simply too fantastic.
I actually like what you have bought right here, really like what you're saying and the way during which you assert it.
You are making it enjoyable and you continue to take care of to stay it wise.
I can't wait to read far more from you. This is really a 
wonderful site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Right-Clicking in Silverlight 2 -- A Refinement</title>
		<link>http://houseofbilz.com/archives/2009/03/01/right-clicking-in-silverlight-2-a-refinement/</link>
		<pubDate>Sun, 01 Mar 2009 17:49:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/03/01/right-clicking-in-silverlight-2-a-refinement/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/Right-Clicking-in-Silverlight-2-A-Refinement" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.com%2Farchive%2F2009%2F03%2F01%2Fright-clicking-in-silverlight-2----a-refinement.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f01%2fright-clicking-in-silverlight-2----a-refinement.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f01%2fright-clicking-in-silverlight-2----a-refinement.aspx" /></a>   <h3>The Problem</h3>  <p>If you search for &quot;<a href="http://www.google.com/search?client=safari&amp;rls=en-us&amp;q=right+click+silverlight+2&amp;ie=UTF-8&amp;oe=UTF-8">Right Click Silverlight 2</a>&quot; in Google, you will get several hits.&#160; There are several ways to achieve this functionality, and they all have two things in common that I object to: </p>  <p>1. They use Javascript to send a message to the Silverlight application.&#160; While there is no way (that I know of) around this,&#160; requiring the hosting HTML to include this code is what I object to.&#160; Moving the app to a new page requires the same hookups that the developer may or may not remember to do.</p>  <p>2. They send events around that require a hacky feel -- violating encapsulation and separations of concern (SOC) in a way that makes my skin itch.&#160;&#160; Any complex application with user controls strewn throughout will feel the pain of these approaches.</p>  <p>This article solves both of these problems:</p>  <p>First, don't require the user to write the Javascript every time.&#160; Instead let the Silverlight code execute the javascript that includes the necessary browser functionality. </p>  <p>Second, instead of sending events around, or passing arguments through your user controls, use reflection to find the controls that care about right-clicks.&#160; This is the fun part.&#160; There exists a neat little static method called VisualTreeHelper.FindElementsInHostCoordinates().&#160; You pass it the mouse coordinates, and it returns a list of all of the controls that occupy space at that point.&#160; Then, just find any controls that implement the interface IRightClickable and call the method. </p>  <h3>The Code</h3>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b0eaf7d2-f123-455a-aee0-cc8acd820a2e" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> RightClickHandler
{
   </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> IRightClickable
   {
       </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OnRightClick(Point point);
   }

   </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> RightClickHandler()
   {}

   </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> RightClickHandler Instance </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> RightClickHandler();

   </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">bool</span><span style="color: #000000;"> Initialized { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
   </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Initialize()
   {
       </span><span style="color: #0000FF;">if</span><span style="color: #000000;">(Initialized)
           </span><span style="color: #0000FF;">return</span><span style="color: #000000;">;

       HtmlPage.Window.Eval(
              </span><span style="color: #800000;">"</span><span style="color: #800000;">function OnClick(e) {</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;">
              </span><span style="color: #800000;">"</span><span style="color: #800000;">    if (!e) e = window.event;</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;">
              </span><span style="color: #800000;">"</span><span style="color: #800000;">    var silverlightControl = document.getElementById('</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;"> HtmlPage.Plugin.Id </span><span style="color: #000000;">+</span><span style="color: #000000;"> </span><span style="color: #800000;">"</span><span style="color: #800000;">');</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;">
              </span><span style="color: #800000;">"</span><span style="color: #800000;">    if (silverlightControl) silverlightControl.Content.RightClickListener.ProcessMouseEvent(e);</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;">
              </span><span style="color: #800000;">"</span><span style="color: #800000;">}</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;">
              </span><span style="color: #800000;">"</span><span style="color: #800000;">document.onmousedown = OnClick;</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;">
              </span><span style="color: #800000;">"</span><span style="color: #800000;">document.oncontextmenu = function() { return false; }</span><span style="color: #800000;">"</span><span style="color: #000000;">);

       HtmlPage.RegisterScriptableObject(</span><span style="color: #800000;">"</span><span style="color: #800000;">RightClickListener</span><span style="color: #800000;">"</span><span style="color: #000000;">, Instance);

       Initialized </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">true</span><span style="color: #000000;">;
   }

   [ScriptableMember]
   </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> ProcessMouseEvent(ScriptObject evt)
   {
       </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> button </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;">.Parse(evt.GetProperty(</span><span style="color: #800000;">"</span><span style="color: #800000;">button</span><span style="color: #800000;">"</span><span style="color: #000000;">).ToString());
       </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (button </span><span style="color: #000000;">==</span><span style="color: #000000;"> </span><span style="color: #800080;">2</span><span style="color: #000000;">)
       {
           var location </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Point
           {
               X </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">double</span><span style="color: #000000;">.Parse(evt.GetProperty(</span><span style="color: #800000;">"</span><span style="color: #800000;">clientX</span><span style="color: #800000;">"</span><span style="color: #000000;">).ToString()),
               Y </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">double</span><span style="color: #000000;">.Parse(evt.GetProperty(</span><span style="color: #800000;">"</span><span style="color: #800000;">clientY</span><span style="color: #800000;">"</span><span style="color: #000000;">).ToString())
           };

           </span><span style="color: #0000FF;">foreach</span><span style="color: #000000;"> (IRightClickable element </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> FindElements</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IRightClickable</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(location))
               element.OnRightClick(location);
       }
   }

   </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> IEnumerable</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">T</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> FindElements</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">pT</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(Point absoluteLocation) </span><span style="color: #0000FF;">where</span><span style="color: #000000;"> T : </span><span style="color: #0000FF;">class</span><span style="color: #000000;">
   {
       </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> from element </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> VisualTreeHelper.FindElementsInHostCoordinates(absoluteLocation, Application.Current.RootVisual)
              </span><span style="color: #0000FF;">where</span><span style="color: #000000;"> element </span><span style="color: #0000FF;">is</span><span style="color: #000000;"> T
              select element </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> T;
   }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>The Usage</h3>

<p>Simply initialize the RightClickHandler code somewhere (It can be called more than once without any ill effects), and implement the interface.&#160; If the control is right-clicked, OnRightClick() will be called! </p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:49e0ed9e-fdc5-447f-8bc1-4f2b89924a4c" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">partial</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> TestControl : UserControl, RightClickHandler.IRightClickable
{
   </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> TestControl()
   {
       RightClickHandler.Initialize();
       InitializeComponent();
   }

   </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OnRightClick(Point point)
   {
       Input.Text </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #800000;">"</span><span style="color: #800000;">Clicked: (</span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;"> point.X </span><span style="color: #000000;">+</span><span style="color: #000000;"> </span><span style="color: #800000;">"</span><span style="color: #800000;">, </span><span style="color: #800000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;"> point.Y </span><span style="color: #000000;">+</span><span style="color: #000000;"> </span><span style="color: #800000;">"</span><span style="color: #800000;">)</span><span style="color: #800000;">"</span><span style="color: #000000;">;
   }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>Windowless Mode </h3>

<p>It seems that there is no way around this.&#160; The Silverlight plugin must be created as &quot;Windowless&quot; in order to receive right clicks.&#160; I would have loved to encapsulate this in the RightClickHandler class, but it seems that there is no way.&#160; In your aspx, you would have: </p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b244a652-97a8-4932-ae57-de1cbd265e43" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">asp:Silverlight </span><span style="color: #FF0000;">Windowless</span><span style="color: #0000FF;">="true"</span><span style="color: #FF0000;"> runat</span><span style="color: #0000FF;">="server"</span><span style="color: #FF0000;"> ... </span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>If you are using straight HTML, you would add this parameter: </p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:37308b64-99a2-45c6-a9d2-94d1ee27e2b9" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">param </span><span style="color: #FF0000;">name</span><span style="color: #0000FF;">="windowless"</span><span style="color: #FF0000;"> value</span><span style="color: #0000FF;">="true"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2009-03-01 17:49:00</wp:post_date>
		<wp:post_date_gmt>2009-03-01 17:49:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>right-clicking-in-silverlight-2-a-refinement</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>40269</wp:comment_id>
			<wp:comment_author><![CDATA[программа передач телеканал интер]]></wp:comment_author>
			<wp:comment_author_email>alonzo.sodeman@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://xn----8sbnliklcdfuw.xn--p1ai/</wp:comment_author_url>
			<wp:comment_author_IP>67.137.4.113</wp:comment_author_IP>
			<wp:comment_date>2015-04-23 00:52:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-23 00:52:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[На этой странице вы можете смотреть онлайн трансляцию канала Россия 1.
<a HREF="http://xn----8sbnliklcdfuw.xn--p1ai/" / rel="nofollow">программа передач телеканал интер</A>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78243</wp:comment_id>
			<wp:comment_author><![CDATA[DouglasPone]]></wp:comment_author>
			<wp:comment_author_email>artemz5le@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://doc23.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.218.186.82</wp:comment_author_IP>
			<wp:comment_date>2015-10-29 21:49:42</wp:comment_date>
			<wp:comment_date_gmt>2015-10-29 21:49:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[завидный веб ресурс  <a href="http://doc23.com/" / rel="nofollow">Купить свидетельство, диплом курсов кассиров Нижний Новгород</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>My Silverlight 3 Wish List</title>
		<link>http://houseofbilz.com/archives/2009/03/06/my-silverlight-3-wish-list/</link>
		<pubDate>Fri, 06 Mar 2009 17:51:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/03/06/my-silverlight-3-wish-list/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/My-Silverlight-3-Wish-List" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.com%2Farchive%2F2009%2F03%2F06%2Fmy-silverlight-3-wish-list.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f06%2fmy-silverlight-3-wish-list.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f06%2fmy-silverlight-3-wish-list.aspx" /></a>   <p>I have been developing full time in Silverlight 2 for a few months now.&#160; I must say, it is the most fun environment I have ever programmed in.&#160; It has been an enabling technology in our product, and I am rather excited to see what comes next.&#160; If the pattern continues as I expect it probably will, we will hear all about the features of Silverlight 3 in a few weeks at <a href="http://visitmix.com/">Mix 09</a>.&#160; I will not be attending this conference, but I fully expect to be watching the important sessions virtually.&#160; I am hoping for a lot.&#160; You see, as much as I like the SIlverlight framework, it is missing some significant features that I can really use.</p>  <p>So, I figured I would publish my Silverlight 3 wish list.&#160; Some of these things are more important than others, but all of them are things that would make my &quot;Rich Internet Application&quot; more rich. <strong>I don't want this list to sound like I am just a big complainer.&#160; </strong>I think I am exercising the framework pretty hard, and Microsoft can only make the framework better with this list.&#160; </p>  <p><strong>MediaElement frame rate control: </strong>The Silverlight media element is missing the ability to control the frame rate.&#160; This keeps us from controlling the playback for slow-motion or fast-forward.&#160; I have to imagine that the sports domain wants this as well.</p>  <p><strong>MediaElement loop control: </strong>The current media element does not support looping of video content.&#160; It can be programmed by hooking the &quot;MediaEnded&quot; event, putting the position at zero, and playing again, but this causes a noticeable pause.&#160; This pause keeps looping play from being fluid.&#160; It would be nice if the media element supported it directly.</p>  <p><strong>Native video rendering: </strong>Silverlight 2 does not use any hardware capabilities for video playback -- it is all done in software.&#160; Therefore, the playback takes a lot of processor power.&#160; This is really noticeable when four videos are playing simultaneously.&#160; Any more on modern hardware is often choppy.&#160; I would like to be able to play as many as nine videos at once.</p>  <p><strong>3D support: </strong>Similar to the previous wish, Silverlight 2 does not use the video hardware directly.&#160; This means that there is no 3D support.&#160; It would be nice to see some 3D capabilities in Silverlight 3 -- preferably handled by hardware.</p>  <p><strong>Direct bitmap manipulation: </strong>Silverlight 2 does not support this, and there are certain types of effects and manipulations that are not possible in Silverlight.&#160; I would love to see some bitmap manipulation capabilities</p>  <p><strong>Support for other data transports: </strong>Currently, only HTTP requests are made available through the SIlverlight plug-in.&#160; This limits the use of more sophisticated WCF bindings.&#160; At a very minimum, it would be nice to be able to use TCP bindings via WCF.</p>  <p><strong>Better mouse support: </strong>Currently, we need to <a href="http://www.houseofbilz.com/archive/2009/03/01/right-clicking-in-silverlight-2----a-refinement.aspx">hack in right-click</a>, double-click and scroll-wheel capabilities.&#160; It would be nice to have native support.</p>  <p><strong>Support for drag-and-drop: </strong>This is another case where I have <a href="http://www.houseofbilz.com/archive/2009/02/10/drag-and-drop-with-silverlight.aspx">hacked something together</a>, but it would be great if I were able to rely on the framework.</p>  <p><strong>Native support for the MVVM pattern: </strong>As far as I have figured, the MVVM pattern is the most suitable pattern for most large-scale Silverlight development.&#160; It allows us to test the majority of our code and keep it out of the view.&#160; Unfortunately, I haven't found MVVM to be well supported in the framework.</p>  <ul>   <li>Commands -- They gave us ICommand, but nothing else.&#160; I have hacked something in, but native support would be nice. </li>    <li>See what <a href="http://projects.nikhilk.net/SilverlightFX/">Silverlight.FX</a> and <a href="http://www.codeplex.com/caliburn">Cliburn</a> have done.&#160; Can we get something like this in the framework? </li>    <li>Some sort of &quot;Inversion of Control&quot; or similar decoupling support?&#160; Might MEF or Prism show up in SIlverlight 3? </li>    <li>Stand-alone binding -- As far as I can tell, binding is only available in controls.&#160; I can't write tests against controls.&#160; I often want to bind data in my model to my view model.&#160; I have written my own binder for this, but it would be nice to have some built-in support </li>    <li>Better property notification.&#160; INotifyPropertyChanged creates a lot of boiler-plate code in the view model.&#160; I have minimized this by using a &quot;property bag&quot;, but some utilities that make view models easier to write would be nice. </li> </ul>  <p><strong>Interprocess communication: </strong>I would like the ability to talk to other non-silverlight processes.&#160; This seems like a tall order, but I have some business cases for this.</p>  <p>That is all I have for now.&#160; I am sure there is more that I am not thinking of.&#160; I come across different needs every day.&#160; For most cases, I have been able to hack some sort of support in when I need it.&#160; In some cases, like the video playback support, I can't hack my wan out of the limitations.&#160; </p>  <p>This list looks like a lot now that I have written it down.&#160; I am very curious to know if I will be getting any of these features.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2009-03-06 17:51:00</wp:post_date>
		<wp:post_date_gmt>2009-03-06 17:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-silverlight-3-wish-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>23422</wp:comment_id>
			<wp:comment_author><![CDATA[appliance repair san diego]]></wp:comment_author>
			<wp:comment_author_email>terrance_steadman@peacemail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/pages/Appliance-Repair-San-Diego/286123461540043</wp:comment_author_url>
			<wp:comment_author_IP>69.162.134.212</wp:comment_author_IP>
			<wp:comment_date>2014-02-19 06:21:51</wp:comment_date>
			<wp:comment_date_gmt>2014-02-19 06:21:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, i think that i noticed you visited my site so i 
came to go back the favor?.I'm trying to find issues to 
enhance my site!I guess its good enough to make use of some of your ideas!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79448</wp:comment_id>
			<wp:comment_author><![CDATA[bliss go pack review]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://generalweightloss.wordpress.com/2015/07/08/the-bliss-go-pack-a-weight-loss-stack-that-helps-make-shedding-off-excess-pounds-easier/</wp:comment_author_url>
			<wp:comment_author_IP>198.55.109.35</wp:comment_author_IP>
			<wp:comment_date>2015-11-14 13:13:47</wp:comment_date>
			<wp:comment_date_gmt>2015-11-14 13:13:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bliss go pack review...</strong>

My Silverlight 3 Wish List « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Binding to Resources in Silverlight/WPF</title>
		<link>http://houseofbilz.com/archives/2009/03/15/binding-to-resources-in-silverlightwpf/</link>
		<pubDate>Sun, 15 Mar 2009 17:51:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/03/15/binding-to-resources-in-silverlightwpf/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/Binding-to-Resources-in-SilverlightWPF" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.com%2Farchive%2F2009%2F03%2F15%2Fbinding-to-resources-in-silverlightwpf.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f15%2fbinding-to-resources-in-silverlightwpf.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f15%2fbinding-to-resources-in-silverlightwpf.aspx" /></a>   <p>This article is describing how to solve the problem in SIlverlight, but the problem can be solved in WPF using the exact same technique.</p>  <p>So, now it is time to internationalize our application.&#160; I want to use the <a href="http://msdn.microsoft.com/en-us/magazine/cc163609.aspx">built-in &quot;resx&quot; mechanism</a> for i18n in .net, so I create myself a resource file and start adding strings to the table:</p>  <p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/BindingtoResourcesinSilverlightWPF_C384/image_4.png"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="image" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/BindingtoResourcesinSilverlightWPF_C384/image_thumb_1.png" width="600" height="223" /></a> </p>  <p>Visual Studio automatically generates the resource class for me, and I am ready to bind to the data in my XAML:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:f3950845-d6c0-4751-81df-2d232083ed5e" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">UserControl.Resources</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">l:i18n </span><span style="color: #FF0000;">x:Key</span><span style="color: #0000FF;">="i18n"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">UserControl.Resources</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">

</span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">StackPanel </span><span style="color: #FF0000;">x:Name</span><span style="color: #0000FF;">="LayoutRoot"</span><span style="color: #FF0000;"> Orientation</span><span style="color: #0000FF;">="Horizontal"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBox </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">Button </span><span style="color: #FF0000;">Content</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Path=SearchButton, Source={StaticResource i18n}}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">StackPanel</span><span style="color: #0000FF;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>But I run my application and I get this exception: <strong>Unhandled Error in Silverlight 2 Application AG_E_PARSER_BAD_TYPE</strong>.&#160; I get this error message because the resx file is set to create my resource class as an &quot;internal&quot; class.&#160; Essentially, the SIlverlight engine doesn't have permission to instantiate a new i18n object, and it dies.</p>

<p>Fortunately, in Visual Studio 2008, they have given us a way to solve this problem.&#160; In the Resx editor, you can change the protection of the class it generates from internal to public.&#160; So, I do exactly that:</p>

<p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/BindingtoResourcesinSilverlightWPF_C384/image_6.png"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="image" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/BindingtoResourcesinSilverlightWPF_C384/image_thumb_2.png" width="595" height="223" /></a> </p>

<p>Now my XAML should be able to bind to the resource, right?&#160; Wrong: <strong>Unhandled Error in Silverlight 2 Application AG_E_PARSER_UNKNOWN_TYPE</strong>.&#160; This time, it is complaining because the constructor to this public class that Visual Studio generated is internal!&#160; The class is public, but the constructor is internal, so the Silverlight/WPF engine still can't instantiate the object.</p>

<p>I searched the interwebs, and I'm not alone with this problem.&#160; Most people solve the problem by adding a custom build step that modifies the code.&#160; Some even suggest changing the constructor to public by hand every time you update the resource table.&#160; I am here to say: THERE IS A BETTER WAY!&#160; I just created a public class with a single property that exposes the class:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:d72a67d8-3810-4c9e-b2e7-9145f735e5fa" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> i18nPublic
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> i18n resources </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> i18n();
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> i18n Strings { </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> resources; } }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>By adding this class, I can make a slight modification to the resource type and the binding path and I am now binding directly to the resources.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:8a94aeba-54bf-42d5-aa9a-4db30b09348f" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">UserControl.Resources</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">l:i18nPublic </span><span style="color: #FF0000;">x:Key</span><span style="color: #0000FF;">="i18n"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">UserControl.Resources</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">

</span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">StackPanel </span><span style="color: #FF0000;">x:Name</span><span style="color: #0000FF;">="LayoutRoot"</span><span style="color: #FF0000;"> Orientation</span><span style="color: #0000FF;">="Horizontal"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBox </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">Button </span><span style="color: #FF0000;">Content</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Path=Strings.SearchButton, Source={StaticResource i18n}}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">StackPanel</span><span style="color: #0000FF;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2009-03-15 17:51:00</wp:post_date>
		<wp:post_date_gmt>2009-03-15 17:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>binding-to-resources-in-silverlightwpf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>2305</wp:comment_id>
			<wp:comment_author><![CDATA[Ernest Durelle]]></wp:comment_author>
			<wp:comment_author_email>ernest.durelle@noser.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>196.3.50.254</wp:comment_author_IP>
			<wp:comment_date>2010-12-03 14:10:48</wp:comment_date>
			<wp:comment_date_gmt>2010-12-03 14:10:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm a spoiled WPF person.  Since being assigned to port a application, I've begun to collect a "he's my man"-list.  Your name is now on it.  Thank you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24479</wp:comment_id>
			<wp:comment_author><![CDATA[garage clearance company]]></wp:comment_author>
			<wp:comment_author_email>houstonmaclean@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.opendiary.com/entryview.asp?authorcode=D983900&amp;entry=10014&amp;mode=</wp:comment_author_url>
			<wp:comment_author_IP>123.103.58.59</wp:comment_author_IP>
			<wp:comment_date>2014-04-03 07:50:36</wp:comment_date>
			<wp:comment_date_gmt>2014-04-03 07:50:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An outstanding share! I have just forwarded this onto a colleague who has been doing a little research on this.
And he actually ordered me dinner because I tumbled upon 
it ffor him... lol. So let me reword this.... Thanks for the meal!!
But yeah, thanx for spending some time to discuss tis subject here on your blog.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11264</wp:comment_id>
			<wp:comment_author><![CDATA[Bas]]></wp:comment_author>
			<wp:comment_author_email>bassiebulk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.122.221.96</wp:comment_author_IP>
			<wp:comment_date>2011-11-01 00:30:24</wp:comment_date>
			<wp:comment_date_gmt>2011-11-01 00:30:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How can I change the resx at runtime?
I don't see how to get to the instance "i18n" created in:
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71869</wp:comment_id>
			<wp:comment_author><![CDATA[poker online]]></wp:comment_author>
			<wp:comment_author_email>darrensackett@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.piewacketblog.com/imported-20091031173850/2009/10/16/bathroom-prettys.html</wp:comment_author_url>
			<wp:comment_author_IP>23.95.34.64</wp:comment_author_IP>
			<wp:comment_date>2015-09-14 00:48:34</wp:comment_date>
			<wp:comment_date_gmt>2015-09-14 00:48:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This space is ideal for stacking magazines, newspapers, or photo albums.
Ideally, it should also undergo treating so it will be scratch- and 
stain-proof. Pros:  Excellent friendly atmosphere  Reasonable prices  Children are welcome 
Wines  Menu selection.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80020</wp:comment_id>
			<wp:comment_author><![CDATA[gambler leads]]></wp:comment_author>
			<wp:comment_author_email>lawrencewitcher@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=mX3HVjbNIt8</wp:comment_author_url>
			<wp:comment_author_IP>61.163.34.4</wp:comment_author_IP>
			<wp:comment_date>2016-01-08 10:39:32</wp:comment_date>
			<wp:comment_date_gmt>2016-01-08 10:39:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#1030;f &#655;&#1086;u &#097;&#114;&#1077; &#1409;oing &#102;&#959;r bezt &#099;ontents &#8572;ike &#109;yself, &#1995;nly &#485;&#11423; &#116;&omicron; &#1109;ee &#116;&#1211;&#1110;&#1109; web site daily &#1072;&#1109; &#1110;t &#485;ives quality &#1089;ontents, &#116;hanks

Lookk &#097;t &#109;&#1199; web-site ... <a href="https://www.youtube.com/watch?v=mX3HVjbNIt8" rel="nofollow">gambler leads</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27058</wp:comment_id>
			<wp:comment_author><![CDATA[hosting]]></wp:comment_author>
			<wp:comment_author_email>carlomurakami@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://home.wizone.co.kr/portfolio/203109</wp:comment_author_url>
			<wp:comment_author_IP>123.151.136.55</wp:comment_author_IP>
			<wp:comment_date>2014-06-18 00:17:15</wp:comment_date>
			<wp:comment_date_gmt>2014-06-18 00:17:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That is a good tip especially to those fresh to the blogosphere.
Short but very precise info… Appreciate your sharing this one.

A must read article!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37988</wp:comment_id>
			<wp:comment_author><![CDATA[find here]]></wp:comment_author>
			<wp:comment_author_email>rudycoldiron@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.junic.ca/en/envoiami/index.php?url=http://www.google.com</wp:comment_author_url>
			<wp:comment_author_IP>93.93.193.150</wp:comment_author_IP>
			<wp:comment_date>2015-03-07 13:44:15</wp:comment_date>
			<wp:comment_date_gmt>2015-03-07 13:44:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Truly no matter if someone doesn't understand then its up to other people that they will assist, so here it happens.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>My Silverlight Testing Rig</title>
		<link>http://houseofbilz.com/archives/2009/03/28/my-silverlight-testing-rig/</link>
		<pubDate>Sat, 28 Mar 2009 17:53:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/03/28/my-silverlight-testing-rig/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/My-Silverlight-Testing-Rig" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.com%2Farchive%2F2009%2F03%2F28%2Fmy-silverlight-testing-rig.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f28%2fmy-silverlight-testing-rig.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f03%2f28%2fmy-silverlight-testing-rig.aspx" /></a>   <br />  <p>I was recently asked by someone on Twitter to describe my setup for writing tests against my Silverlight application.&#160; I thought I would write them down here in case others might find this information useful.</p>  <p><strong>Testing Framework: </strong>A slightly <a href="http://weblogs.asp.net/nunitaddin/archive/2008/05/01/silverlight-nunit-projects.aspx">modified version of NUnit</a> that works with SIlverlight.</p>  <p><strong>Mocking Framework:</strong> <a href="http://code.google.com/p/moq/">Moq 3.0</a> includes support for Silverlight.&#160; This is my favorite mocking framework, so I am happy that it now supports Silverlight.</p>  <p><strong>Test Runner: </strong>I use <a href="http://testdriven.net/">TestDriven.NET</a> to run all of my tests locally.&#160; I use <a href="http://confluence.public.thoughtworks.org/display/CCNET/Welcome+to+CruiseControl.NET">Cruise Control</a> to run the tests on the “Continuous Integration” system.</p>  <p><strong>Making testing easier: </strong>This is not specific to Silverlight testing, but I use <a href="http://www.jetbrains.com/resharper/index.html">ReSharper</a> templates that I have customized to aid in writing tests quickly.</p>  <p><strong>The MVVM Pattern: </strong>This is not a tool, but I the majority of my SIlverlight code would be un-testable if I didn’t know the <a href="http://www.orbifold.net/default/?p=550">MVVM</a> pattern.&#160; I highly recommend using this pattern with Silverlight.&#160; None of the view code can be tested using NUnit, so testing the ViewModel is essential.</p>  <p><strong>UI Automation: </strong>I am just starting to play with this.&#160; <a href="http://www.codeplex.com/white">White</a> is a layer on top of Microsoft’s UI Automation (UIA) framework.&#160; UIA is much to hard to use without a “helper” layer.&#160; It lets you run fully automated UI tests.&#160; I only want to use this to make sure my data bindings are correct.&#160; My unit tests are really the bulk of my testing efforts.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2009-03-28 17:53:00</wp:post_date>
		<wp:post_date_gmt>2009-03-28 17:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-silverlight-testing-rig</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>27309</wp:comment_id>
			<wp:comment_author><![CDATA[new rs game bot free]]></wp:comment_author>
			<wp:comment_author_email>alexanderdesimone@wildmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hosering7.blog.com/2014/06/11/runescape-tips</wp:comment_author_url>
			<wp:comment_author_IP>117.166.255.164</wp:comment_author_IP>
			<wp:comment_date>2014-07-01 10:14:15</wp:comment_date>
			<wp:comment_date_gmt>2014-07-01 10:14:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello! This is my first visit to your blog! We are a group of 
volunteers and starting a new initiative in a community in the 
same niche. Your blog provided us beneficial information to work on. You have done a marvellous job!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>My ReSharper NUnit Test Templates</title>
		<link>http://houseofbilz.com/archives/2009/03/29/my-resharper-nunit-test-templates/</link>
		<pubDate>Sun, 29 Mar 2009 17:54:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/03/29/my-resharper-nunit-test-templates/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/My-ReSharper-NUnit-Test-Templates" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F03%2F29%2Fmy-resharper-test-templates.aspx" /></a>   <br />  <p>Much like my previous post about what I use for testing in Silverlight, I was recently asked on Twitter for my ReSharper NUnit templates.&#160; I am posting them here if anyone finds them useful.</p>  <p>Basically, I write a LOT of tests every day.&#160; These templates allow me to write tests faster.</p>  <p><strong>New Test File Template</strong></p>  <p>This file template adds a new “Test” target when you say tell Visual Studio to create a new file from template.&#160; It populates your file with the correct namespaces and decorations to get you started.</p>  <p><strong>Coding Templates</strong></p>  <p>These are shortcuts that create new tests, setups, teardowns or assertions.&#160; You just type the shortcut, hit tab, and the method or lines are created for you with your mouse cursor in the next place to type.&#160; The shortcuts are:</p>  <ul>   <li>test – Create a new [Test] method </li>    <li>setup – Create a [SetUp] method </li>    <li>teardown – Create a new [TearDown] method </li>    <li>ise – Assert that condition is equal to value </li>    <li>ist – Assert that condition is true </li>    <li>isf – Assert that condition is false </li>    <li>isn – Assert that condition is null </li>    <li>isnn – Assert that condition is not null </li> </ul>  <p><a href="http://brianstestsite.googlepages.com/ResharperTemplates.zip">Download my ReSharper 4 NUnit templates.</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2009-03-29 17:54:00</wp:post_date>
		<wp:post_date_gmt>2009-03-29 17:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-resharper-nunit-test-templates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>369</wp:comment_id>
			<wp:comment_author><![CDATA[Janak]]></wp:comment_author>
			<wp:comment_author_email>janak.gheewala@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>90.213.190.186</wp:comment_author_IP>
			<wp:comment_date>2010-06-28 04:35:51</wp:comment_date>
			<wp:comment_date_gmt>2010-06-28 04:35:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
I use this template. Its quite useful. But atm its a hinderance. As soon as I type the 'tab' key. instead of tabbing, it inserts this template. Can you advice how to change the key combination for this?

Much appreciated,
Janak]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27430</wp:comment_id>
			<wp:comment_author><![CDATA[Anny]]></wp:comment_author>
			<wp:comment_author_email>PomroyComins193@yahoomail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.forum.na-mazury.com</wp:comment_author_url>
			<wp:comment_author_IP>192.240.192.110</wp:comment_author_IP>
			<wp:comment_date>2014-07-03 14:05:17</wp:comment_date>
			<wp:comment_date_gmt>2014-07-03 14:05:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hello there! , I adore ones publishing a great deal of! portion all of us communicate further regarding article for AOL? I needed an authority on this space or room to be able to unravel my personal issue. Could possibly be that is definitely you actually! Looking to expert you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28422</wp:comment_id>
			<wp:comment_author><![CDATA[Johnk140]]></wp:comment_author>
			<wp:comment_author_email>johnk683@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>1.179.147.2</wp:comment_author_IP>
			<wp:comment_date>2014-08-13 05:51:44</wp:comment_date>
			<wp:comment_date_gmt>2014-08-13 05:51:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your goal is to breed all the different dragons available gkcadbafkfdc]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14521</wp:comment_id>
			<wp:comment_author><![CDATA[kleider]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://imbo22.blog.com/2011/03/31/hello-world/</wp:comment_author_url>
			<wp:comment_author_IP>77.186.103.211</wp:comment_author_IP>
			<wp:comment_date>2012-02-18 15:58:08</wp:comment_date>
			<wp:comment_date_gmt>2012-02-18 15:58:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>kleider...</strong>

[...]My ReSharper NUnit Test Templates &laquo; Brian Genisio&#039;s House of Bilz[...]...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38185</wp:comment_id>
			<wp:comment_author><![CDATA[Roy]]></wp:comment_author>
			<wp:comment_author_email>monicamedlock@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.punchcad.com/index.php/84/acis-sixteen-years-and-counting/trackback</wp:comment_author_url>
			<wp:comment_author_IP>192.3.131.195</wp:comment_author_IP>
			<wp:comment_date>2015-03-10 22:49:34</wp:comment_date>
			<wp:comment_date_gmt>2015-03-10 22:49:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Contact information can also be provided for parents with questions or 
concerns regarding a policy. These games require you first to download an emulator and then the game.
Weblogs or blogs as they are known are here to stay.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45218</wp:comment_id>
			<wp:comment_author><![CDATA[Jame]]></wp:comment_author>
			<wp:comment_author_email>jessdubose@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.workingleagueoflegendsbot.weebly.com/</wp:comment_author_url>
			<wp:comment_author_IP>94.242.246.24</wp:comment_author_IP>
			<wp:comment_date>2015-05-19 16:49:01</wp:comment_date>
			<wp:comment_date_gmt>2015-05-19 16:49:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Used in combination with a tower, Sona can easily kill her opponents using this ult.
But be strong, you'll be better off in the end 
if you're farmed well. Casters fit this role quite well, as they 
are the main source of burst damage.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Introducing Html Utilities for Silverlight</title>
		<link>http://houseofbilz.com/archives/2009/04/26/introducing-html-utilities-for-silverlight/</link>
		<pubDate>Sun, 26 Apr 2009 17:54:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/04/26/introducing-html-utilities-for-silverlight/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/Introducing-Html-Utilities-for-Silverlight" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F04%2F26%2Fintroducing-html-utilities-for-silverlight.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f04%2f26%2fintroducing-html-utilities-for-silverlight.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f04%2f26%2fintroducing-html-utilities-for-silverlight.aspx" /></a>   <p>I have just released an early version of <a href="http://htmlpageutil.codeplex.com/">Html Utilties for Silverlight</a> on <a href="http://www.codeplex.com/">CodePlex</a>.&#160; This article will explain the whats and hows of this library.</p>  <h3>Who is this library for?</h3>  <p>The primary target for this library is someone who:</p>  <ol>   <li>Develops software in Silverlight </li>    <li>Uses the Html DOM libraries in Silverlight </li> </ol>  <h3>What problem does this library solve?</h3>  <p>In the first version of this library, it is all about testability.&#160; Lets say I have a (very simple) method I want to test.&#160; The code looks like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:a895c8f8-9bbf-4fa0-9ab7-6e32c78a7965" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> HtmlGenerator
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> HtmlElement CreateImage(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> url)
    {
        var img </span><span style="color: #000000;">=</span><span style="color: #000000;"> HtmlPage.Document.CreateElement(</span><span style="color: #800000;">"</span><span style="color: #800000;">img</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        img.SetAttribute(</span><span style="color: #800000;">"</span><span style="color: #800000;">src</span><span style="color: #800000;">"</span><span style="color: #000000;">, url);
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> img;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Trying to write a test for this becomes very difficult.&#160; There are two problems here:</p>

<ol>
  <li>HtmlPage is static, and testing CreateImage with this static is not a unit test.&#160; It relies on the browser. </li>

  <li>Unless your tests are executing in the browser, there is no browser to fall back on.&#160; HtmlPage.Document fails with an exception that the HtmlPage is not enabled. </li>
</ol>

<p>The test I WANT to write includes the ability to stub out the call to CreateElement and verify that the source was set.&#160; Using <a href="http://nunit.com/index.php">NUnit</a> and <a href="http://code.google.com/p/moq/">Moq</a>, it would look something like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1003e424-78dc-412b-ae49-292124deeee3" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #008000;">//</span><span style="color: #008000;"> JUST AN EXAMPLE OF WHAT I WANT TO DO.  SEE ACTUAL TEST FURTHER DOWN</span><span style="color: #008000;">
</span><span style="color: #000000;">[Test]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_Create_Image_Creates_Element_And_Sets_Src()
{
    var mockImage </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">HtmlElement</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
    HtmlPage_Document.Setup(doc </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> doc.CreateElement(</span><span style="color: #800000;">"</span><span style="color: #800000;">img</span><span style="color: #800000;">"</span><span style="color: #000000;">))
        .Returns(mockImage.Object);

    var newImage </span><span style="color: #000000;">=</span><span style="color: #000000;"> TableGenerator.CreateImage(</span><span style="color: #800000;">"</span><span style="color: #800000;">AbcDef.png</span><span style="color: #800000;">"</span><span style="color: #000000;">);

    Assert.That(newImage, Is.EqualTo(mockImage.Object));
    mockImage.Verify(img </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> img.SetAttribute(</span><span style="color: #800000;">"</span><span style="color: #800000;">src</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">AbcDef.png</span><span style="color: #800000;">"</span><span style="color: #000000;">));
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>I can’t do anything like this because the HtmlPage is static and there are no interfaces on any of the classes in the DOM.</p>

<p>This is a very contrived example for the purpose of illustration, but I have had to use this approach in many cases from loading new windows, to inserting data into the DOM.</p>

<h3>What does this library do?</h3>

<p>This library wraps all of the HtmlPage classes with wrappers that implement interfaces.&#160; For instance, HtmlPage is wrapped around a proxy that implements IHtmlPage.&#160; HtmlElement has a proxy wrapper that implements IHtmlElement.&#160; By using this approach, you can substitute anything you want in the Html DOM when you test.&#160; This may be any test object that implements the interfaces.&#160; I prefer to use Moq, but there are several other approaches to testing now that the system has interfaces to replace.</p>

<h3>How do I use the library?</h3>

<p>In an attempt to make the migration as simple as possible, any code that uses HtmlPage.* is just replaced with Html.Page.* (notice the dot after Html).&#160; </p>

<p>So, in the example above, the code would look like this now:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:d9020002-7d34-40c2-b26a-3a99999b715a" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> HtmlGenerator
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> IHtmlElement CreateImage(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> url)
    {
        var img </span><span style="color: #000000;">=</span><span style="color: #000000;"> Html.Page.Document.CreateElement(</span><span style="color: #800000;">"</span><span style="color: #800000;">img</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        img.SetAttribute(</span><span style="color: #800000;">"</span><span style="color: #800000;">src</span><span style="color: #800000;">"</span><span style="color: #000000;">, url);
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> img;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
Notice that the only differences between these two methods are: 

<ol>
  <li>The return type is IHtmlElement instead of HtmlElement </li>

  <li>HtmlPage.Document is replaced with Html.Page.Document </li>
</ol>

<p>Next, my entire test fixture looks like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b5799bc2-918a-4eec-a6e2-1aac3d657f45" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> HtmlGeneratorTests
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> MockHtml _mockHtml;

    [SetUp]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">virtual</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SetUp()
    {
        _mockHtml </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> MockHtml();
    }

    [TearDown]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">virtual</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> TearDown()
    {
        _mockHtml.TearDown();
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_Create_Image_Creates_Element_And_Sets_Src()
    {
        var mockImage </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IHtmlElement</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        _mockHtml.Document.Setup(doc </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> doc.CreateElement(</span><span style="color: #800000;">"</span><span style="color: #800000;">img</span><span style="color: #800000;">"</span><span style="color: #000000;">))
            .Returns(mockImage.Object);

        var newImage </span><span style="color: #000000;">=</span><span style="color: #000000;"> HtmlGenerator.CreateImage(</span><span style="color: #800000;">"</span><span style="color: #800000;">AbcDef.png</span><span style="color: #800000;">"</span><span style="color: #000000;">);

        Assert.That(newImage, Is.EqualTo(mockImage.Object));
        mockImage.Verify(img </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> img.SetAttribute(</span><span style="color: #800000;">"</span><span style="color: #800000;">src</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">AbcDef.png</span><span style="color: #800000;">"</span><span style="color: #000000;">));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>You may be noticing that this test references a class named MockHtml.&#160; This is a class that implements the HtmlPage system using Moq, but you can do this in any way.&#160; </p>

<p>The most important thing to notice in this class is that we inject the IHtmlPage into the system using Html.SetHtmlPageForTesting() when we construct the object, and we set it back to null when we are complete.&#160; This is required so that when Html.Page is called, it calls your test implementation of IHtmlPage instead of the wrapper around the actual browser.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:fdaa3ae5-4215-4454-8e0a-e62a69a0ec95" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> MockHtml
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IHtmlPage</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> Page { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IBrowserInformation</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> BrowserInformation { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IHtmlDocment</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> Document { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IHtmlWindow</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> Window { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> MockHtml()
    {
        Page </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IHtmlPage</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        BrowserInformation </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IBrowserInformation</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        Document </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IHtmlDocment</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();
        Window </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Mock</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">IHtmlWindow</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">();

        Page.SetupGet(page </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> page.BrowserInformation).Returns(BrowserInformation.Object);
        Page.SetupGet(page </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> page.Document).Returns(Document.Object);
        Page.SetupGet(page </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> page.Window).Returns(Window.Object);

        Html.SetHtmlPageForTesting(Page.Object);
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> TearDown()
    {
        Html.SetHtmlPageForTesting(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>How do I get it?</h3>

<p>Version 0.1 has been released on <a href="http://htmlpageutil.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=26667">CodePlex</a>.&#160; The source code is available on this site, along with the release DLL.&#160; The Source project is broken into 4 projects: The HtmlUtilities project, a Silverlight test, a Web Site to host the Silverlight test, and a set of unit tests, showing how to mock out everything you would want to do with the library.</p>

<h3>Future plans</h3>

<p>I have some thoughts for where this library should go.&#160; I want to aim towards a very easy to use API for manipulating the DOM through Silverlight.&#160; My original thought was that the roadmap might look something like:</p>

<p>0.1 -- Wrappers around existing objects 
  <br />0.2 -- Extensions to existing objects (HtmlLink, HtmlImage, HtmlDiv, etc) 

  <br />0.3 -- Helper utilities for doing more complex actions on the HTML 

  <br />0.4 -- Cross-browser issues abstracted away? 

  <br />0.5 -- Anything else?? 

  <br />1.0 -- World domination???</p>

<p>At least, in the next few versions, it would be nice to be able to do something like create a table using code that is much more clear than what it takes now.&#160; Possibly something that looks more like:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:c11076f5-8794-47d1-b174-e1907a12a9c6" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Table</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #800000;">"</span><span style="color: #800000;">Border=1</span><span style="color: #800000;">"</span><span style="color: #000000;">,
    Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">THead</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(
        Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TR</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TH</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #800000;">"</span><span style="color: #800000;">Header 1</span><span style="color: #800000;">"</span><span style="color: #000000;">), Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TH</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #800000;">"</span><span style="color: #800000;">Header 2</span><span style="color: #800000;">"</span><span style="color: #000000;">)),
    Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TBody</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(
        Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TR</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TD</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data 1.1</span><span style="color: #800000;">"</span><span style="color: #000000;">), Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TD</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data 1.2</span><span style="color: #800000;">"</span><span style="color: #000000;">)),
        Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TR</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TD</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data 2.1</span><span style="color: #800000;">"</span><span style="color: #000000;">), Html.New</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">TD</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data 2.2</span><span style="color: #800000;">"</span><span style="color: #000000;">)))));</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>The Table type would have static properties on it instead of the more awkward way of doing it now. I dunno... I'm just playing at this poing. Would that be useful?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2009-04-26 17:54:00</wp:post_date>
		<wp:post_date_gmt>2009-04-26 17:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-html-utilities-for-silverlight</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>What to do About Those Pesky Singletons?</title>
		<link>http://houseofbilz.com/archives/2009/05/02/what-to-do-about-those-pesky-singletons/</link>
		<pubDate>Sat, 02 May 2009 17:56:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/05/02/what-to-do-about-those-pesky-singletons/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/What-to-do-About-Those-Pesky-Singletons" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.com%2Farchive%2F2009%2F05%2F02%2Fwhat-to-do-about-those-pesky-singletons.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f05%2f02%2fwhat-to-do-about-those-pesky-singletons.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f05%2f02%2fwhat-to-do-about-those-pesky-singletons.aspx" /></a>   <p>No matter what your opinion is about singletons (I favor against them in most cases), it is important to understand what you can do when you encounter code that is dependent upon them.&#160; Unfortunately, I have come across a lot of code that has abused singletons in a way that makes other code less testable.&#160; My examples here are in C#, but this technique can work in any language.&#160; In some languages, these techniques are easier due to their dynamic capabilities.</p>  <p>I am going to choose a singleton example I have seen in books when the “Singleton Pattern is described – a logger.&#160; Have you seen code like this before?</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:34c33bf7-f0b0-498c-aaf2-8f47830ca230" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Log
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> Log()
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Set up a way to write to a logging service somewhere</span><span style="color: #008000;">
</span><span style="color: #000000;">    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> Log theOnlyOne </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Log();
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> Log Instance
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> theOnlyOne; }
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> WriteToLog(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> errorLevel, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Write to the logging service</span><span style="color: #008000;">
</span><span style="color: #000000;">    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Error(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message)
    {
        WriteToLog(</span><span style="color: #800000;">"</span><span style="color: #800000;">ERROR</span><span style="color: #800000;">"</span><span style="color: #000000;">, category, message);
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Warning(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message)
    {
        WriteToLog(</span><span style="color: #800000;">"</span><span style="color: #800000;">WARNING</span><span style="color: #800000;">"</span><span style="color: #000000;">, category, message);
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Information(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message)
    {
        WriteToLog(</span><span style="color: #800000;">"</span><span style="color: #800000;">INFORMATION</span><span style="color: #800000;">"</span><span style="color: #000000;">, category, message);
    }
}</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> SomeClass
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Calculate()
    {
        Log.Instance.Information(</span><span style="color: #800000;">"</span><span style="color: #800000;">client</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Doing something...</span><span style="color: #800000;">"</span><span style="color: #000000;">);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> do calculations</span><span style="color: #008000;">
</span><span style="color: #000000;">        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> </span><span style="color: #800080;">0</span><span style="color: #000000;">;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p><strong>Disclaimer: </strong>I am not addressing concurrency issues at all in this post.&#160; These techniques work with or without concurrency code.&#160; For the sake of brevity, I left it out.</p>

<p>Of course, if I want to unit-test Calculate(), I have a problem.&#160; Every time I run my test(s), the event log will get written to.&#160; This could be a file, a database, or even a web service.&#160; This type of side-effect behavior is a pretty bad way to be writing my unit tests.&#160; To make matters worse, what happens if I want to validate that Calculate() logged a message appropriately?&#160; Do I read the file, database or web service to validate?&#160; </p>

<p>What I really want here is a test double… but how do I get it in there?&#160; I can:</p>

<ol>
  <li>Re-factor out the singleton </li>

  <li>Re-factor the consumer </li>

  <li>Put a shim in it </li>

  <li>Wrap it </li>
</ol>

<p>In C#, the first three methods require that the Log be modified.&#160; It either needs to implement an interface, or the methods need to be made virtual.&#160; I prefer to use an interface so that none of the base implementation makes it into the test.&#160; The fourth method can be used in a case where the ability to modify the singleton is prohibited for one reason or another. </p>

<p>The interface for all four strategies is:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:2cbca8b4-f7c0-4990-9ce2-afd17a895758" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> ILog
{
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Error(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message);
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Warning(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message);
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Information(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message);
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>Re-Factor Out the Singleton</h3>

<p>It is often the case that a singleton does not need to be a singleton. It was just a lazy design decision made a long time ago, but it doesn’t need to be this way.&#160; In fact, when it makes sense to do so, this is my preferred way to deal with singletons.&#160; In this case, I have to ask: why does it need to be a singleton?&#160; There might be a reason, but in most cases, I can just modify the class to not be a singleton anymore and modify the consumer to accept the ILog object via dependency injection:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:34188552-ad7a-4f91-b4bc-49804c54329a" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Log : ILog
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Log()
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Set up a way to write to a logging service somewhere</span><span style="color: #008000;">
</span><span style="color: #000000;">    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Remove the static instance
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Remove the Instance getter

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Everything else the same</span><span style="color: #008000;">
</span><span style="color: #000000;">}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:12883bea-208e-4edf-99d3-2160a049986b" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> SomeClass
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> ILog log;
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> SomeClass(ILog log)
    {
        </span><span style="color: #0000FF;">this</span><span style="color: #000000;">.log </span><span style="color: #000000;">=</span><span style="color: #000000;"> log;
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> SomeClass() : </span><span style="color: #0000FF;">this</span><span style="color: #000000;">(</span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Log())
    {}

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Calculate()
    {
        log.Information(</span><span style="color: #800000;">"</span><span style="color: #800000;">client</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Doing something...</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> do calculations</span><span style="color: #008000;">
</span><span style="color: #000000;">        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> </span><span style="color: #800080;">0</span><span style="color: #000000;">;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Now the test is easy to write.&#160; I can create a test double of any type I want here, just as long as it implements ILog.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:17d72c01-afef-4625-8ab7-3f1fe613b41b" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">[TestFixture]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> SomeClassTests
{
    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_That_Calculate_Returns_Zero()
    {
        var test </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> SomeClass(GetLoggerStub());

        Assert.That(test.Calculate(), Is.EqualTo(</span><span style="color: #800080;">0</span><span style="color: #000000;">));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>That is the best way to work with a singleton, in my opinion.&#160; Unfortunately, it is not always that easy.&#160; Maybe it is too much of a refactoring to take the “single” out of the singleton.&#160; Whatever the reason, I need the singleton to stay as a singleton.&#160; The next question:&#160; Do I need my consumer to treat it like a singleton?</p>

<h3></h3>

<h3>Re-factor the Consumer</h3>

<p>In this case, the Log class will stay as a singleton, but it is modified slightly to implement ILog:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:708132fc-c4cd-42a1-90de-05fe08260175" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Log : ILog
{
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Everything else the same</span><span style="color: #008000;">
</span><span style="color: #000000;">}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Next, the consumer is modified in a similar way to pass the ILog object in via dependency injection:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:91a73132-a87c-4e96-9d26-99f8990392b2" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> SomeClass
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> Func</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">ILog</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> log;
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> SomeClass(Func</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">ILog</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> log)
    {
        </span><span style="color: #0000FF;">this</span><span style="color: #000000;">.log </span><span style="color: #000000;">=</span><span style="color: #000000;"> log;   
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> SomeClass() : </span><span style="color: #0000FF;">this</span><span style="color: #000000;">(() </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> Log.Instance)
    { }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Calculate()
    {
        log().Information(</span><span style="color: #800000;">"</span><span style="color: #800000;">client</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">Doing something...</span><span style="color: #800000;">"</span><span style="color: #000000;">);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> do calculations</span><span style="color: #008000;">
</span><span style="color: #000000;">        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> </span><span style="color: #800080;">0</span><span style="color: #000000;">;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Notice the difference in the way that SomeClass is instantiated now.&#160; Instead of passing a log instance, I pass a function that gets the log instance.&#160; That is because caching a reference to a singleton is a bad idea – the singleton instance has the right to change out from under me.&#160; Instead, the default behavior of SomeClass will ask for the singleton instance every time, but it is no longer <strong>required</strong> to use the singleton implementation of ILog.&#160; Instead, I can test this in a very similar way (the difference here is subtle, but important… notice that I pass GetLoggerStub as a function, not the result of GetLoggerStub()):</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:880d88e4-3e70-40cd-856f-adc8c0bfa085" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">[TestFixture]
</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> SomeClassTests
{
    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_That_Calculate_Returns_Zero()
    {
        var test </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> SomeClass(GetLoggerStub);

        Assert.That(test.Calculate(), Is.EqualTo(</span><span style="color: #800080;">0</span><span style="color: #000000;">));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Unfortunately, this is not always easy either.&#160; The class I am refactoring may already have a complicated set of constructors.&#160; It may be the case that these are public objects that I don’t want to change right now.&#160; There are several reasons why this might not work for me.&#160; The next option: Leave the Log class as a singleton, but don’t modify the consumer in any way.&#160; Instead, put a shim in the singleton.</p>

<h3>Put a Shim in it</h3>

<p>This tends to be the technique I use most often, because it creates the least amount of friction when it comes to refactoring the classes for testability.&#160; After all, if there are no tests to validate that I don’t break anything in my re-factoring, I don’t want to make drastic changes.&#160; The consumer doesn’t need to change or know about the changes to the Log class.&#160; It kind of breaks up the singleton pattern a bit (there can be TWO instances!), but all is fair in love and testing, right?&#160; The modified:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:2ed5053d-2214-4122-be61-761ce69eaa1c" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Log : ILog
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> Log()
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Set up a way to write to a logging service somewhere</span><span style="color: #008000;">
</span><span style="color: #000000;">    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> ILog theOnlyOne;
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> ILog testOverride;

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> ILog Instance
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;">
        {
            </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (testOverride </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
                </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> testOverride;

            </span><span style="color: #0000FF;">if</span><span style="color: #000000;">(theOnlyOne </span><span style="color: #000000;">==</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
                theOnlyOne </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> Log();

            </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> theOnlyOne;
        }
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OverrideInstanceForTesting(ILog log)
    {
        testOverride </span><span style="color: #000000;">=</span><span style="color: #000000;"> log;
    }
  
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Everything else the same</span><span style="color: #008000;">
</span><span style="color: #000000;">}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Again, I don’t have to modify my consumer class, but my test fixture has to do a bit more work:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:5d13498c-a681-4e80-93d0-0354eefb4f8f" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> SomeClassTests
{
    [SetUp]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">virtual</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SetUp()
    {
        Log.OverrideInstanceForTesting(GetLoggerStub());
    }

    [TearDown]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">virtual</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> TearDown()
    {
        Log.OverrideInstanceForTesting(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
    }

    [Test]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Test_That_Calculate_Returns_Zero()
    {
        var test </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> SomeClass();

        Assert.That(test.Calculate(), Is.EqualTo(</span><span style="color: #800080;">0</span><span style="color: #000000;">));
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This option might not be the available either.&#160; If the singleton is a publically consumed service and I can’t modify it for some reason (I don’t own it, for instance), then I can wrap it.</p>

<h3>Wrap it</h3>

<p>This is a technique I use when Microsoft has given me a static class or singleton that I don’t want a direct dependency to, but they also didn’t give me an interface to substitute in either.&#160; I just create my own interface that looks a lot like the singleton and wrap it!</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:304d40ac-6f93-4749-803e-2a27ee49cb35" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> LogWrapper : ILog
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Error(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message)
    {
        Log.Instance.Error(category, message);
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Warning(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message)
    {
        Log.Instance.Warning(category, message);
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Information(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> category, </span><span style="color: #0000FF;">string</span><span style="color: #000000;"> message)
    {
        Log.Instance.Information(category, message);
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>With that, I can use the same modification to the consumer as in “Re-Factor Out the Singleton”.&#160; The test also looks the same as “Re-Factor Out the Singleton”.</p>

<h3>In Summary</h3>

<p>There are other ways to deal with this problem.&#160; I could use <a href="http://www.typemock.com/index.php">TypeMock Islolator</a> to replace the singleton implementation with a new one.&#160; I have even seen some suggestions that you can use a <a href="http://www.codethinked.com/post/2009/04/26/Static-Method-Interception-in-NET-with-C-and-MonoCecil.aspx">post-compiler code injection library</a> to replace the singleton implementation.&#160; These, to me, are cheating.&#160; They get around a problem that you have in your system: tight coupling.&#160; I much prefer the strategies mentioned in this post for dealing with singletons because they allow you to make baby steps towards loose coupling.&#160; Over time, these re-factorings add up and push you in the direction of having testable code.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2009-05-02 17:56:00</wp:post_date>
		<wp:post_date_gmt>2009-05-02 17:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-to-do-about-those-pesky-singletons</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>42139</wp:comment_id>
			<wp:comment_author><![CDATA[bester blog plastischer chirurgie]]></wp:comment_author>
			<wp:comment_author_email>will.coggins@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://temiruvi.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>23.94.52.89</wp:comment_author_IP>
			<wp:comment_date>2015-05-03 06:01:57</wp:comment_date>
			<wp:comment_date_gmt>2015-05-03 06:01:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[org, scalp reduction can cost between $1,500 and $4,000 per procedure.
Before a surgery is planned, the individual will be required to go through a 
comprehensive appointment using the plastic surgeon. Between the two incisions, 
the tissue of the lower back is then mobilized as flaps for 
enhancement of the upper buttock region.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39576</wp:comment_id>
			<wp:comment_author><![CDATA[En este corta presentación, te voy a mostrar una estrategia de perdida de peso algo inusual que te va a ayudar a obtener un vientre plano en menos de 7]]></wp:comment_author>
			<wp:comment_author_email>FiguraEhmer487@yahoomail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cbtobuy.blogspot.com/2015/04/como-bajar-de-peso-factor-quema-grasa.html</wp:comment_author_url>
			<wp:comment_author_IP>190.92.11.101</wp:comment_author_IP>
			<wp:comment_date>2015-04-17 05:01:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-17 05:01:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Helpful information. Lucky me I discovered your website by chance, and I'm stunned why this twist of fate didn't came about in advance! I bookmarked it.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16730</wp:comment_id>
			<wp:comment_author><![CDATA[thinhduong]]></wp:comment_author>
			<wp:comment_author_email>thinhj_007@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.30.66.158</wp:comment_author_IP>
			<wp:comment_date>2012-08-01 07:39:51</wp:comment_date>
			<wp:comment_date_gmt>2012-08-01 07:39:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You could achieve the Log singleton and test double. By using IoC, you register Log implemeted ILog and tell Ioc register it as single, so you can achieve two goals]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79443</wp:comment_id>
			<wp:comment_author><![CDATA[lebenshilfe]]></wp:comment_author>
			<wp:comment_author_email>rhoda_wroe@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://tarsi.us/lebenshilfe77169</wp:comment_author_url>
			<wp:comment_author_IP>192.119.152.211</wp:comment_author_IP>
			<wp:comment_date>2015-11-14 11:50:23</wp:comment_date>
			<wp:comment_date_gmt>2015-11-14 11:50:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mutter feels particularly close to the female 
Virtuosi, the youngest of whom is a 14-year-old Dutch violinist.
'Age, thanks to God, at least in the arts has nothing 
to say. they were given a private tour in the Library of Congress, where they viewed manuscripts of Mozart, Mendelssohn and Brahms.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>My Summer Speaking Gigs</title>
		<link>http://houseofbilz.com/archives/2009/05/19/my-summer-speaking-gigs/</link>
		<pubDate>Tue, 19 May 2009 17:59:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/05/19/my-summer-speaking-gigs/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been busy lining up opportunities to talk about Model-View-ViewModel (MVVM) in the context of WPF and SIlverlight.&#160; The good news is that I have some great gigs lined up this summer:</p>  <ul>   <li>June 11th, 2009 – <a href="http://www.glugnet.org/">Greater Lansing .Net Users Group</a> – Flint, MI </li>    <li>June 17th, 2009 – <a href="http://www.migang.org/home.aspx">Great Lakes Area .Net Users Group</a> – Southfield, MI </li>    <li>June 26/27, 2009 – <a href="http://codestock.org/">CodeStock</a> – Knoxville, TN </li>    <li>August 11th, 2009 – <a href="http://www.wmdotnet.org/">West Michigan .Net Users Group</a> – Grand Rapids, MI (MVVM or Prism 2 TBD) </li> </ul>  <p>In addition to that, I will be attending the <a href="http://michigangivecamp.org/cms/annarbor/">Ann Arbor Give Camp</a> July 17-19.</p>  <p>In preparation for my MVVM talks, I will be honing my knowledge of the pattern by blogging here, so check back often if you are interested in MVVM!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2009-05-19 17:59:00</wp:post_date>
		<wp:post_date_gmt>2009-05-19 17:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-summer-speaking-gigs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>27632</wp:comment_id>
			<wp:comment_author><![CDATA[windows 8 crack]]></wp:comment_author>
			<wp:comment_author_email>latashiahulsey@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://wins-8-freeactivator.blogspot.com/2014/06/hello-friends-those-who-are-having.html</wp:comment_author_url>
			<wp:comment_author_IP>117.174.236.208</wp:comment_author_IP>
			<wp:comment_date>2014-07-12 02:03:53</wp:comment_date>
			<wp:comment_date_gmt>2014-07-12 02:03:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi! Do you know if they make any plugins to safeguard against hackers?

I'm kinda paranoid about losing everything I've worked hard on. 
Any suggestions?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; Model-View-ViewModel</title>
		<link>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</link>
		<pubDate>Fri, 22 May 2009 18:00:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This post is intended to be a high-level post intended to index all of my “Adventures in MVVM” posts.&#160; I will be traveling the region this summer giving talks on the MVVM pattern and these posts are part of me working through the details of the MVVM pattern.&#160; These posts will not include the “What”.&#160; There are <a href="http://msdn.microsoft.com/en-us/magazine/dd458800.aspx">several</a> <a href="http://msdn.microsoft.com/en-us/magazine/dd419663.aspx">good</a> <a href="http://channel9.msdn.com/shows/Continuum/MVVM/">articles</a> on the <a href="http://karlshifflett.wordpress.com/2008/11/08/learning-wpf-m-v-vm/">web</a> that do that already.&#160; Instead, I will be taking a deeper dive into MVVM and writing on the “How” and “Why” of the MVVM pattern.</p>  <ul>   <li><a href="http://houseofbilz.com/archive/2009/05/22/adventures-in-mvvm-ndash-commands-in-silverlight.aspx">Commands in Silverlight</a> </li>    <li><a href="http://houseofbilz.com/archive/2009/05/27/adventures-in-mvvm-ndash-a-testing-story.aspx">A Testing Story</a> </li>    <li><a href="http://houseofbilz.com/archives/2009/05/29/adventures-in-mvvm-commanding-with-list-boxes/">Commanding with List Boxes</a> </li>    <li><a href="http://houseofbilz.com/archives/2009/06/12/adventures-in-mvvm-slides-and-demo-app/">Demo Application and Slides</a> </li>    <li><a href="http://houseofbilz.com/HouseOfBilz/archive/2009/06/19/adventures-in-mvvm----ball-of-mud-vs-mvvm.aspx">“Ball of Mud” vs MVVM</a> </li>    <li><a href="http://houseofbilz.com/archives/2009/08/07/adventures-in-mvvm-mvvm-interview/">My MVVM Interview with David Giard</a> </li>    <li><a href="http://houseofbilz.com/archives/2009/08/22/adventures-in-mvvm-generalized-command-behavior-attachments/">Generalized Command Behavior Attachments</a> </li>    <li><a href="http://houseofbilz.com/archives/2009/08/27/adventures-in-mvvm-binding-commands-to-any-event/">Binding Commands to ANY Event</a> </li>    <li><a href="http://houseofbilz.com/archives/2009/10/20/adventures-in-mvvm-a-rails-inspired-viewmodel/">A Rails-Inspired ViewModel</a> </li>    <li><a href="http://houseofbilz.com/archive/2009/11/14/adventures-in-mvvm----dependant-properties-with-inotifypropertychanged.aspx">Dependant Properties with INotifyPropertyChanged</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/01/11/adventures-in-mvvm-codemash-schedule-application/">CodeMash MVVM Demo App</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/05/08/adventures-in-mvvm-my-viewmodel-base/">My ViewModel Base</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/05/14/adventures-in-mvvm-my-viewmodel-base-silverlight-support/">My ViewModel Base – Silverlight Support</a> </li>    <li><a href="http://www.houseofbilz.com/archives/2010/06/04/adventures-in-mvvm-viewmodel-location-and-creation/">ViewModel Location and Creation</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/06/14/adventures-in-ruby-mvvm-firing-events-from-ruby/">Firing Events from Ruby</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/06/19/adventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby/">A ViewModel Base Class in Ruby</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/07/07/adventures-in-ruby-mvvm-bootstrapping-ruby/">Bootstrapping Ruby</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/09/26/adventures-in-ruby-mvvm-wrapping-it-up/">Ruby MVVM -- Wrapping it up</a></li> </ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2009-05-22 18:00:00</wp:post_date>
		<wp:post_date_gmt>2009-05-22 18:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-model-view-viewmodel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>250</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in MVVM &ndash; My ViewModel Base &ndash; Silverlight Support! &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/05/14/adventures-in-mvvm-my-viewmodel-base-silverlight-support/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-17 11:58:41</wp:comment_date>
			<wp:comment_date_gmt>2010-06-17 11:58:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Adventures in MVVM [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24691</wp:comment_id>
			<wp:comment_author><![CDATA[recover memory card]]></wp:comment_author>
			<wp:comment_author_email>jacquesfelder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=t0u7jdrSqt0</wp:comment_author_url>
			<wp:comment_author_IP>179.43.135.7</wp:comment_author_IP>
			<wp:comment_date>2014-04-09 17:46:36</wp:comment_date>
			<wp:comment_date_gmt>2014-04-09 17:46:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing your thoughts about sd card recovery.
Regards]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>265</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in Ruby MVVM &ndash; A ViewModel Base Class in Ruby &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/06/19/adventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 02:53:45</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 02:53:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Adventures in MVVM [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>268</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in Ruby MVVM &ndash; Firing Events from Ruby &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/06/14/adventures-in-ruby-mvvm-firing-events-from-ruby/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 02:56:07</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 02:56:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Adventures in MVVM [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56095</wp:comment_id>
			<wp:comment_author><![CDATA[Extreme Profits System Review]]></wp:comment_author>
			<wp:comment_author_email>mathewblackmon@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yourhoustonnews.com/calendar/extreme-profits-system-review---extreme-profits-system-exposed/event_59c9d8c2-17ac-11e5-a14a-13ba83b4b2a8.html</wp:comment_author_url>
			<wp:comment_author_IP>41.142.44.28</wp:comment_author_IP>
			<wp:comment_date>2015-06-23 10:36:20</wp:comment_date>
			<wp:comment_date_gmt>2015-06-23 10:36:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[whoah this weblog is wonderful i love reading your articles.
Stay up the ood work! You already know, lots of people are hunting 
around for this info, you can help them greatly.

Feel free too visit my blog - <a href="http://www.yourhoustonnews.com/calendar/extreme-profits-system-review---extreme-profits-system-exposed/event_59c9d8c2-17ac-11e5-a14a-13ba83b4b2a8.html" rel="nofollow">Extreme Profits System Review</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27662</wp:comment_id>
			<wp:comment_author><![CDATA[movers &amp; packers delhi]]></wp:comment_author>
			<wp:comment_author_email>garyneel@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://rb-tool.com/need-guidance-regarding-how-to-promote-your-home-try-out-these-pointers/</wp:comment_author_url>
			<wp:comment_author_IP>192.3.176.187</wp:comment_author_IP>
			<wp:comment_date>2014-07-14 04:49:24</wp:comment_date>
			<wp:comment_date_gmt>2014-07-14 04:49:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Greate article. Keep writing such kind of info on your page.

Im really impressed by it.
Hi there,  You have done an incredible job. I'll certainly digg it and for my part suggest to my friends.
I'm sure they'll be benefited from this site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34368</wp:comment_id>
			<wp:comment_author><![CDATA[samsung computer]]></wp:comment_author>
			<wp:comment_author_email>donnierome@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kijiji.it/annunci/computer-e-software/monza-brianza-annunci-caponago/samsung-slate-7/72831003?utm_source=systememail&amp;utm_medium=core&amp;utm_campaign=adlive</wp:comment_author_url>
			<wp:comment_author_IP>192.161.162.8</wp:comment_author_IP>
			<wp:comment_date>2015-01-06 13:58:02</wp:comment_date>
			<wp:comment_date_gmt>2015-01-06 13:58:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My partner and I absolutely love your blog and find a lot of your post's to be exactly I'm looking for.
Does one offer guest writers to write content for you?
I wouldn't mind producing a post or elaborating on many of the subjects you write with regards to here.

Again, awesome site!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26788</wp:comment_id>
			<wp:comment_author><![CDATA[Roderick]]></wp:comment_author>
			<wp:comment_author_email>roderickbolden@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/114607988949681371187/posts</wp:comment_author_url>
			<wp:comment_author_IP>41.79.65.95</wp:comment_author_IP>
			<wp:comment_date>2014-06-07 09:14:05</wp:comment_date>
			<wp:comment_date_gmt>2014-06-07 09:14:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very soon this site will be famous amid all blog users, due to it's 
good articles or reviews

My weblog - plus.google.com (<a href="https://plus.google.com/114607988949681371187/posts" rel="nofollow">Roderick</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30654</wp:comment_id>
			<wp:comment_author><![CDATA[fotomecanica]]></wp:comment_author>
			<wp:comment_author_email>ronniehaddad@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ow.ly/ClLGN</wp:comment_author_url>
			<wp:comment_author_IP>219.68.157.123</wp:comment_author_IP>
			<wp:comment_date>2014-10-21 08:07:40</wp:comment_date>
			<wp:comment_date_gmt>2014-10-21 08:07:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post. I was checking constantly this blog and I am inspired!
Very useful information particularly the closing section :) I 
maintain such info a lot. I used to be looking for this particular info for a very 
long time. Thanks and good luck.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26568</wp:comment_id>
			<wp:comment_author><![CDATA[styles checks]]></wp:comment_author>
			<wp:comment_author_email>deannemahomet@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.agsv.com.ve/site/userinfo.php?uid=29970</wp:comment_author_url>
			<wp:comment_author_IP>178.32.176.33</wp:comment_author_IP>
			<wp:comment_date>2014-05-27 19:25:43</wp:comment_date>
			<wp:comment_date_gmt>2014-05-27 19:25:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Currently іt loοks liƙe Drupal is the preferred blogging platform аvailable гight 
now. (from what I've read) Is tҺаt աhat you're սsing 
on уօur blog?

My blog: <a href="http://www.agsv.com.ve/site/userinfo.php?uid=29970" rel="nofollow">styles checks</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29895</wp:comment_id>
			<wp:comment_author><![CDATA[kontakt 5 crack]]></wp:comment_author>
			<wp:comment_author_email>colleen.graziani@hotmail.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=3oRq7I_mP9k</wp:comment_author_url>
			<wp:comment_author_IP>41.77.1.32</wp:comment_author_IP>
			<wp:comment_date>2014-10-05 14:46:09</wp:comment_date>
			<wp:comment_date_gmt>2014-10-05 14:46:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Howdy! Quick question that's totally off topic. Do you know how to make your site mobile friendly?
My web site looks weird when browsing from my iphone 4.
I'm trying to find a theme or plugin that might be able 
to fix this problem. If you have any recommendations, please share.
Cheers!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28499</wp:comment_id>
			<wp:comment_author><![CDATA[acoustic guitar tonewoods]]></wp:comment_author>
			<wp:comment_author_email>chiquitarancourt@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.onrpg.com/boards/members/1479937-mariapisz</wp:comment_author_url>
			<wp:comment_author_IP>181.143.140.148</wp:comment_author_IP>
			<wp:comment_date>2014-08-16 17:19:12</wp:comment_date>
			<wp:comment_date_gmt>2014-08-16 17:19:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Generally I do not read article on blogs, however I wish to say that this write-up very compelled me to check out and do so!

Your writing taste has been surprised me. Thanks,
quite nice article.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29154</wp:comment_id>
			<wp:comment_author><![CDATA[antler IGF-1]]></wp:comment_author>
			<wp:comment_author_email>mack.miltenberger@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://prolexinigf1supplement7.onsugar.com/</wp:comment_author_url>
			<wp:comment_author_IP>104.143.21.177</wp:comment_author_IP>
			<wp:comment_date>2014-09-17 11:30:47</wp:comment_date>
			<wp:comment_date_gmt>2014-09-17 11:30:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My spouse and I absolutely love your blog and find most of 
your post's to be precisely what I'm looking for.
can you offer guest writers to write content for you personally?

I wouldn't mind creating a post or elaborating onn most of thee subjects you write 
about here. Again, awesome site!

Alsoo visit my web-site; <a href="http://prolexinigf1supplement7.onsugar.com/" rel="nofollow">antler IGF-1</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in Ruby MVVM &ndash; Bootstrapping Ruby &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/07/07/adventures-in-ruby-mvvm-bootstrapping-ruby/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-07-08 01:13:20</wp:comment_date>
			<wp:comment_date_gmt>2010-07-08 01:13:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Adventures in MVVM [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28679</wp:comment_id>
			<wp:comment_author><![CDATA[Koby]]></wp:comment_author>
			<wp:comment_author_email>koby_horst@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://roseljrw.bravejournal.com</wp:comment_author_url>
			<wp:comment_author_IP>162.248.102.207</wp:comment_author_IP>
			<wp:comment_date>2014-08-25 05:59:50</wp:comment_date>
			<wp:comment_date_gmt>2014-08-25 05:59:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here is my website :: web page (<a href="http://roseljrw.bravejournal.com" rel="nofollow">Koby</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23094</wp:comment_id>
			<wp:comment_author><![CDATA[seo tools]]></wp:comment_author>
			<wp:comment_author_email>lawrencemonash@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://seotoolsandtutorials.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>172.245.32.135</wp:comment_author_IP>
			<wp:comment_date>2014-01-20 06:28:08</wp:comment_date>
			<wp:comment_date_gmt>2014-01-20 06:28:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello it's me, I am also visiting this web page daily, this site is actually nice and the people are really sharing good thoughts.


Feel free to surf to my web site :: <a href="http://seotoolsandtutorials.blogspot.com/" rel="nofollow">seo tools</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26645</wp:comment_id>
			<wp:comment_author><![CDATA[Fannie]]></wp:comment_author>
			<wp:comment_author_email>fannielewandowski@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://bali-kopi.com</wp:comment_author_url>
			<wp:comment_author_IP>218.78.209.26</wp:comment_author_IP>
			<wp:comment_date>2014-05-31 22:46:14</wp:comment_date>
			<wp:comment_date_gmt>2014-05-31 22:46:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Write more, thats all I have to say. Literally, it seems as though 
you relied on the video to make your point. You 
definitely know what youre talking about, 
why throw away your intelligence on just posting videos to your blog when you could 
be giving us something informative to read?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66119</wp:comment_id>
			<wp:comment_author><![CDATA[emergency rentals]]></wp:comment_author>
			<wp:comment_author_email>etta.nolan@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.wattpad.com/user/NicholeBellk</wp:comment_author_url>
			<wp:comment_author_IP>119.211.110.112</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 10:30:18</wp:comment_date>
			<wp:comment_date_gmt>2015-08-16 10:30:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello my friend! I want to say that this post is awesome, great written and include almost all significant infos.
I would like to look extra posts like this .]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30117</wp:comment_id>
			<wp:comment_author><![CDATA[dietgameplan.com]]></wp:comment_author>
			<wp:comment_author_email>dominicklasseter@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://dietgameplan.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.207.51.92</wp:comment_author_IP>
			<wp:comment_date>2014-10-10 07:10:45</wp:comment_date>
			<wp:comment_date_gmt>2014-10-10 07:10:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you are having skin problems, before you start 
using medications and chemical, look at what you eat. So making time to do a double day at the gym the day before any major parties takes a lot of discipline.
The caveman and our early ancestors were hunters and gatherers and always ate the freshest 
of fruits and vegetables supplemented ideally by a variety of lean meats.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32945</wp:comment_id>
			<wp:comment_author><![CDATA[ways to get a girl]]></wp:comment_author>
			<wp:comment_author_email>melainetucker@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.sanwajyuken.co.jp/item/10020</wp:comment_author_url>
			<wp:comment_author_IP>50.115.172.35</wp:comment_author_IP>
			<wp:comment_date>2014-12-03 23:14:27</wp:comment_date>
			<wp:comment_date_gmt>2014-12-03 23:14:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read several excellent stuff here. Definitely price bookmarking for 
revisiting. I wonder how so much effort you place to make the sort of excellent informative site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30780</wp:comment_id>
			<wp:comment_author><![CDATA[la fitness atlanta peachtree]]></wp:comment_author>
			<wp:comment_author_email>roxieraines@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://wurunoo1heq.blog.com</wp:comment_author_url>
			<wp:comment_author_IP>108.177.194.196</wp:comment_author_IP>
			<wp:comment_date>2014-10-23 06:45:44</wp:comment_date>
			<wp:comment_date_gmt>2014-10-23 06:45:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[By using an interval program tо train, injury 
tо kknees aand hips ϲan Ƅe avoided. Exercise iis аn essential 
component in maintaining gߋod health. Muscle grows insanely ɗuring rest аfter Һigh 
intensity exercise. Ҭake a lօok at resistance level tߋ ensure you can pοtentially integrate ѕome variation in yߋur own workout sessions.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28569</wp:comment_id>
			<wp:comment_author><![CDATA[www.youtube.com]]></wp:comment_author>
			<wp:comment_author_email>leopoldocortina@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=ud8DHqPV3W4</wp:comment_author_url>
			<wp:comment_author_IP>190.73.157.208</wp:comment_author_IP>
			<wp:comment_date>2014-08-20 19:57:59</wp:comment_date>
			<wp:comment_date_gmt>2014-08-20 19:57:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you ever thought about adding a little bit more than just your articles?
I mean, what you say is valuable and all. But just imagine if you added some great graphics or video clips to give your posts more, "pop"!
Your content is excellent but with images and video clips, this website could undeniably be one of 
the most beneficial in its niche. Awesome blog!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23298</wp:comment_id>
			<wp:comment_author><![CDATA[hammer]]></wp:comment_author>
			<wp:comment_author_email>hwa_lesage@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://house.com</wp:comment_author_url>
			<wp:comment_author_IP>23.27.17.245</wp:comment_author_IP>
			<wp:comment_date>2014-02-07 01:17:29</wp:comment_date>
			<wp:comment_date_gmt>2014-02-07 01:17:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[These are actually wonderful ideas in about blogging.
You have touched some nice factors here. Any way keep up wrinting.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67129</wp:comment_id>
			<wp:comment_author><![CDATA[handicap tub San Diego]]></wp:comment_author>
			<wp:comment_author_email>cory.neild@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://youtube.com/embed/6ajzWy4QmG4</wp:comment_author_url>
			<wp:comment_author_IP>89.44.27.91</wp:comment_author_IP>
			<wp:comment_date>2015-08-20 22:31:51</wp:comment_date>
			<wp:comment_date_gmt>2015-08-20 22:31:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Everything is very open with a really clear description of the issues.
It was really informative. Your site is very helpful. Many thanks for sharing!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23896</wp:comment_id>
			<wp:comment_author><![CDATA[Yolanda]]></wp:comment_author>
			<wp:comment_author_email>yolandameyers@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gamezebo.com/</wp:comment_author_url>
			<wp:comment_author_IP>109.120.165.74</wp:comment_author_IP>
			<wp:comment_date>2014-03-21 16:07:13</wp:comment_date>
			<wp:comment_date_gmt>2014-03-21 16:07:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, after reading this awesome piece of writing i am as well happy to share my knowledge here with mates.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26822</wp:comment_id>
			<wp:comment_author><![CDATA[music online visualizer]]></wp:comment_author>
			<wp:comment_author_email>anyasloman@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://voices.Yahoo.com/2013-country-music-wedding-dance-songs-11959832.html</wp:comment_author_url>
			<wp:comment_author_IP>107.155.80.193</wp:comment_author_IP>
			<wp:comment_date>2014-06-09 02:11:03</wp:comment_date>
			<wp:comment_date_gmt>2014-06-09 02:11:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello there, I found your web site by means of Google whilst searching for 
a related subject, your site got here up, it appears 
great. I have bookmarked it in my gookgle bookmarks.

Hi there, juust turned into alert tto your blog through Google, 
and found that it is realky informative. I am gonna be carefu forr brussels.

I'll be grateful if you happen to proceed this in future.

Many other folks will likely bee benefited out of your 
writing. Cheers!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29706</wp:comment_id>
			<wp:comment_author><![CDATA[dinero con anuncios]]></wp:comment_author>
			<wp:comment_author_email>kerrielayden@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dailymotion.com/video/x26055f_anuntiomatic-gana-dinero-haciendo-clicks-en-anuncios-ganar-dinero-online_tech</wp:comment_author_url>
			<wp:comment_author_IP>111.10.96.25</wp:comment_author_IP>
			<wp:comment_date>2014-10-01 05:51:14</wp:comment_date>
			<wp:comment_date_gmt>2014-10-01 05:51:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This article will help the internet viewers for setting up new 
web site or even a weblog from start to end.

My page: <a href="http://www.dailymotion.com/video/x26055f_anuntiomatic-gana-dinero-haciendo-clicks-en-anuncios-ganar-dinero-online_tech" rel="nofollow">dinero con anuncios</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28440</wp:comment_id>
			<wp:comment_author><![CDATA[Doktorat]]></wp:comment_author>
			<wp:comment_author_email>eulaculbertson@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://ask.fm/lotis81</wp:comment_author_url>
			<wp:comment_author_IP>216.231.128.205</wp:comment_author_IP>
			<wp:comment_date>2014-08-13 17:47:16</wp:comment_date>
			<wp:comment_date_gmt>2014-08-13 17:47:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What i do not realize is if truth be told how you are no longer actually 
much more smartly-liked than you may be now.

You are very intelligent. You know therefore considerably when it comes to this topic, produced me for 
my part believe it from a lot of varied angles.
Its like women and men aren't involved until it is something to accomplish with Girl gaga!
Your personal stuffs nice. Always maintain it up!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29748</wp:comment_id>
			<wp:comment_author><![CDATA[a/c repair]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ivoff55efe.tumblr.com/post/98210290376</wp:comment_author_url>
			<wp:comment_author_IP>89.47.21.76</wp:comment_author_IP>
			<wp:comment_date>2014-10-02 04:21:03</wp:comment_date>
			<wp:comment_date_gmt>2014-10-02 04:21:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>a/c repair...</strong>

Adventures in MVVM - Model-View-ViewModel « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31102</wp:comment_id>
			<wp:comment_author><![CDATA[monavie review]]></wp:comment_author>
			<wp:comment_author_email>rigobertoouttrim@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.Youtube.com/watch?v=9Qry_v6qLIg</wp:comment_author_url>
			<wp:comment_author_IP>155.254.112.231</wp:comment_author_IP>
			<wp:comment_date>2014-10-28 06:19:07</wp:comment_date>
			<wp:comment_date_gmt>2014-10-28 06:19:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you are going for most excellent contents like I do, only visit this web site every 
day as it provides feature contents, thanks]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25817</wp:comment_id>
			<wp:comment_author><![CDATA[throne rush hack tool]]></wp:comment_author>
			<wp:comment_author_email>donaldstradbroke@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://thronerushhackcheat.tumblr.com/</wp:comment_author_url>
			<wp:comment_author_IP>87.117.252.188</wp:comment_author_IP>
			<wp:comment_date>2014-05-07 01:42:46</wp:comment_date>
			<wp:comment_date_gmt>2014-05-07 01:42:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As anyone who's had experience would've been able to tell 
me, it's not going to be the same for everybody. Some--in fact most--of these 
exaggerations qualify as outright lies about the nature and context of what 
has been said. Inspired by the true, heart-wrenching story of King George 
VI (Colin Firth) and his uncharacteristic rise to the 
English throne, The King's Speech applicably begins with the lead role, Prince Albert, 
giving a speech, or, more appropriately, attempting to.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4897</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex&ndash;MVVM vs Presentation Model &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/12/29/cross-training-in-silverlight-flexmvvm-vs-presentation-model/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2011-01-03 11:43:34</wp:comment_date>
			<wp:comment_date_gmt>2011-01-03 11:43:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] probably my favorite topic in this Silverlight/Flex series.&#160; In the Silverlight world, I have written extensively about the MVVM (Model-View-ViewModel) – a separated presentation pattern for stateful clients (like Rich [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27201</wp:comment_id>
			<wp:comment_author><![CDATA[google adwords tool]]></wp:comment_author>
			<wp:comment_author_email>demetrius.allnutt@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.test.com</wp:comment_author_url>
			<wp:comment_author_IP>167.160.112.44</wp:comment_author_IP>
			<wp:comment_date>2014-06-27 00:11:29</wp:comment_date>
			<wp:comment_date_gmt>2014-06-27 00:11:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I absolutely love your website.. Pleasant colors &amp; theme.
Did you create this amazing site yourself? Please reply back 
as I'm hoping to create my very own site and want to find out where you got this from or exactly 
what the theme is named. Appreciate it!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28713</wp:comment_id>
			<wp:comment_author><![CDATA[mortgage payment assistance program]]></wp:comment_author>
			<wp:comment_author_email>tiapelzer@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.lush-fab-glam.com/2012/06/actress-kristen-stewart-gets-glam.html</wp:comment_author_url>
			<wp:comment_author_IP>91.238.231.226</wp:comment_author_IP>
			<wp:comment_date>2014-08-26 17:13:07</wp:comment_date>
			<wp:comment_date_gmt>2014-08-26 17:13:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Someone necessarily lnd a hand to make significantly posts 
I would state. This is the first time I frequented your web page and upp to now?

I surprised with the analysis you made to make this particular submit extraordinary.
Great task!

Stop by my homepage: <a href="http://www.lush-fab-glam.com/2012/06/actress-kristen-stewart-gets-glam.html" rel="nofollow">mortgage payment assistance program</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44599</wp:comment_id>
			<wp:comment_author><![CDATA[Ilse]]></wp:comment_author>
			<wp:comment_author_email>chanahaenke@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vuohimaki.com/index.php/component/k2/item/79-princess-sparkle</wp:comment_author_url>
			<wp:comment_author_IP>190.109.164.81</wp:comment_author_IP>
			<wp:comment_date>2015-05-16 23:18:24</wp:comment_date>
			<wp:comment_date_gmt>2015-05-16 23:18:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And these are the "best MMA fighters in the World".

This strong move is an epic initiating talent that will take a great deal 
of apply to master, but can be brutally successful in the right fingers.

This ability can be very mana hungry, so be 
sure to keep your eye on your mana bar.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24960</wp:comment_id>
			<wp:comment_author><![CDATA[Gabriele]]></wp:comment_author>
			<wp:comment_author_email>gabrieleakin@hotmail.de</wp:comment_author_email>
			<wp:comment_author_url>http://knowyourcoins.com</wp:comment_author_url>
			<wp:comment_author_IP>183.219.43.225</wp:comment_author_IP>
			<wp:comment_date>2014-04-15 07:02:29</wp:comment_date>
			<wp:comment_date_gmt>2014-04-15 07:02:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up to every , as I am actually keen of reading this web site's post to be updated daily.
It consists of fastidious information.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24938</wp:comment_id>
			<wp:comment_author><![CDATA[wat kost Dubbel glas]]></wp:comment_author>
			<wp:comment_author_email>migueltowns@mailup.net</wp:comment_author_email>
			<wp:comment_author_url>http://glaszetterofferte.com/offerte/putten/snel-offerte/sitemap.html</wp:comment_author_url>
			<wp:comment_author_IP>91.108.182.167</wp:comment_author_IP>
			<wp:comment_date>2014-04-14 18:33:31</wp:comment_date>
			<wp:comment_date_gmt>2014-04-14 18:33:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been exploring for a bit for any high-quality articles or weblog posts in this sort of space .
Exploring in Yahoo I eventually stumbled upon this site. Reading this information So i'm glad to show that 
I have a very excellent uncanny feeling I found out just what 
I needed. I so much indisputably will make certain to don?t fail to remember this website and provides it a look regularly.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24418</wp:comment_id>
			<wp:comment_author><![CDATA[finch market]]></wp:comment_author>
			<wp:comment_author_email>betsey_farnell@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://finchmarkets.mywapblog.com/tradez-comme-un-pro-avec-finchmarkets.xhtml</wp:comment_author_url>
			<wp:comment_author_IP>69.12.70.25</wp:comment_author_IP>
			<wp:comment_date>2014-04-01 16:42:35</wp:comment_date>
			<wp:comment_date_gmt>2014-04-01 16:42:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[La compétence de précisé côté s’inscrive dans une de trading sur une de la gestion 
des is suitable according to comptabilité couvre l'ensemble des d'argent le financement de portrait 
de l'économiste superstar rien n'est fait sans it all the 
more is granted to institutions les enquêteurs découvrent 
une de prévoyance.

My blog :: <a href="http://finchmarkets.mywapblog.com/tradez-comme-un-pro-avec-finchmarkets.xhtml" rel="nofollow">finch market</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36795</wp:comment_id>
			<wp:comment_author><![CDATA[Linette]]></wp:comment_author>
			<wp:comment_author_email>shari_alanson@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/pages/Crossy-Road-Hack-and-Cheat/321640691370061</wp:comment_author_url>
			<wp:comment_author_IP>107.167.22.11</wp:comment_author_IP>
			<wp:comment_date>2015-02-05 22:30:17</wp:comment_date>
			<wp:comment_date_gmt>2015-02-05 22:30:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I visit everyday a few web pages and websites to read content, 
except this website gives feature based posts.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51170</wp:comment_id>
			<wp:comment_author><![CDATA[Doris]]></wp:comment_author>
			<wp:comment_author_email>mablefulkerson@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nq.st/attorneyemaillist763694</wp:comment_author_url>
			<wp:comment_author_IP>198.100.144.75</wp:comment_author_IP>
			<wp:comment_date>2015-06-11 14:52:15</wp:comment_date>
			<wp:comment_date_gmt>2015-06-11 14:52:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice replies in return of this question with real arguments 
and describing all regarding that.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80464</wp:comment_id>
			<wp:comment_author><![CDATA[The Elite Millionaire Society]]></wp:comment_author>
			<wp:comment_author_email>chethardiman@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=elX5u5QWrIw</wp:comment_author_url>
			<wp:comment_author_IP>105.157.143.80</wp:comment_author_IP>
			<wp:comment_date>2016-03-05 12:59:28</wp:comment_date>
			<wp:comment_date_gmt>2016-03-05 12:59:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Everything is very open with a clear clarification of <a href="https://www.youtube.com/watch?v=elX5u5QWrIw" rel="nofollow">The Elite Millionaire Society</a> challenges.
It was really informative. Your site is useful.
Thank you for sharing! https://youtu.be/elX5u5QWrIw]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37034</wp:comment_id>
			<wp:comment_author><![CDATA[safe pain pills for dogs]]></wp:comment_author>
			<wp:comment_author_email>mikelleon@ownmail.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.pendisntt.com/media.php?module=detailberita&amp;id=149-regulasi-pendirian-ramadrasah-tahun&amp;halkomentar=2</wp:comment_author_url>
			<wp:comment_author_IP>188.240.138.209</wp:comment_author_IP>
			<wp:comment_date>2015-02-14 02:15:10</wp:comment_date>
			<wp:comment_date_gmt>2015-02-14 02:15:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you ever thought about publishing an ebook or guest authoring 
on other sites? I have a blog based upon on the same information you discuss and would love to have you 
share some stories/information. I know my readers would 
appreciate your work. If you are even remotely interested,
feel free to shoot me an e-mail.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41754</wp:comment_id>
			<wp:comment_author><![CDATA[the sims]]></wp:comment_author>
			<wp:comment_author_email>tomas.griffie@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=kiTuFvWYDLk</wp:comment_author_url>
			<wp:comment_author_IP>104.247.218.225</wp:comment_author_IP>
			<wp:comment_date>2015-05-01 08:56:05</wp:comment_date>
			<wp:comment_date_gmt>2015-05-01 08:56:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Custom content and downloads for The Sims 3 are highly popular 
amongst players of the series. Check out the new images to the left and let us know what you think 
in the comments. The Sims Medieval baby grows into a child after only three days.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33224</wp:comment_id>
			<wp:comment_author><![CDATA[Jerold]]></wp:comment_author>
			<wp:comment_author_email>ginahort@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://support.xbox.com/en-US/browse/xbox-one/</wp:comment_author_url>
			<wp:comment_author_IP>23.95.97.248</wp:comment_author_IP>
			<wp:comment_date>2014-12-10 10:53:49</wp:comment_date>
			<wp:comment_date_gmt>2014-12-10 10:53:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's an awesome post in support of all the web visitors; they will get 
benefit from it I am sure.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27057</wp:comment_id>
			<wp:comment_author><![CDATA[Hellen]]></wp:comment_author>
			<wp:comment_author_email>hellenwesch@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://amysclothingshop.com/web%20design%20.html</wp:comment_author_url>
			<wp:comment_author_IP>218.203.54.5</wp:comment_author_IP>
			<wp:comment_date>2014-06-18 00:08:25</wp:comment_date>
			<wp:comment_date_gmt>2014-06-18 00:08:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good information. Lucky me I came across your blog by chance (stumbleupon).
I have bookmarked it for later!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61390</wp:comment_id>
			<wp:comment_author><![CDATA[conoce las ofertas de ordenadores aqui]]></wp:comment_author>
			<wp:comment_author_email>josejudy@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.amazon.es/s/?_encoding=UTF8&amp;camp=3626&amp;creative=24790&amp;linkCode=ur2&amp;lo=computers&amp;qid=1419609472&amp;rh=n:667049031,n:!675880031,n:!675882031,n:2563371031&amp;tag=myamazom-</wp:comment_author_url>
			<wp:comment_author_IP>95.141.20.206</wp:comment_author_IP>
			<wp:comment_date>2015-07-22 08:01:12</wp:comment_date>
			<wp:comment_date_gmt>2015-07-22 08:01:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Es bastante dificil elegir un ordenador con todos los 
que hay podrian alludar cual me aconsejan]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68133</wp:comment_id>
			<wp:comment_author><![CDATA[&#26368;&#39640;&#21697;&#36074;&#12434;&#24453;&#12388; 2015&#26149;&#22799;&#26032;&#33394;&#36861;&#21152;]]></wp:comment_author>
			<wp:comment_author_email>hxkrejft@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://thecreativetee.com/gain-24971-178.html</wp:comment_author_url>
			<wp:comment_author_IP>192.151.154.210</wp:comment_author_IP>
			<wp:comment_date>2015-08-25 07:15:30</wp:comment_date>
			<wp:comment_date_gmt>2015-08-25 07:15:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#12454;&#12455;&#12502;&#12469;&#12452;&#12488;&#12371;&#12398;  &#12392;&#20849;&#26377;&#31169;&#12398;&#29238;&#12395;&#24863;&#35613;&#12398;&#12362;&#12363;&#12370;&#12391;&#12289;&#12371;&#12398;&#12502;&#12525;&#12464; &#27880;&#30446;&#12377;&#12409;&#12365;&#32032;&#26228;&#12425;&#12375;&#12356; &#23455;&#38555;&#12395;&#12399;&#12391;&#12377;&#12290;
&#26368;&#39640;&#21697;&#36074;&#12434;&#24453;&#12388; 2015&#26149;&#22799;&#26032;&#33394;&#36861;&#21152; http://thecreativetee.com/gain-24971-178.html]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80691</wp:comment_id>
			<wp:comment_author><![CDATA[funny dog and cat video]]></wp:comment_author>
			<wp:comment_author_email>marcy_dowling@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>https://dogandcattv.jimdo.com</wp:comment_author_url>
			<wp:comment_author_IP>124.193.20.249</wp:comment_author_IP>
			<wp:comment_date>2016-03-30 02:59:30</wp:comment_date>
			<wp:comment_date_gmt>2016-03-30 02:59:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Playtime is a fantastic way to bond with  your dog, but it 
should be done on your terms, not his. Besides her animal instincts, Molly is a good companion dog to Mr.
Some commercial foods are of low quality and causes disastrous health condition.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80406</wp:comment_id>
			<wp:comment_author><![CDATA[strider balance bike review]]></wp:comment_author>
			<wp:comment_author_email>dedraharriman@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://Tinybiker.com/strider-balance-bike-review/</wp:comment_author_url>
			<wp:comment_author_IP>201.173.8.8</wp:comment_author_IP>
			<wp:comment_date>2016-02-16 13:22:36</wp:comment_date>
			<wp:comment_date_gmt>2016-02-16 13:22:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you've a automobile you could potentially be a 
pizza delivery guy (or gal) and they make very good  money on suggestions.
Not solely are you able to improve your general well being but you'll be able to moreover build leg muscles and enhance 
your respiratory with an awesome cardiovascular workout.
A Professional Cycling Coach can provide various kinds 
of tailored Cycle Coaching Programmes for improving different cycling aspects like, Anaerobic Threshold, Nutrition, rate and time trial.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66932</wp:comment_id>
			<wp:comment_author><![CDATA[&#20302;&#20385;&#26684;&#12399;&#24403;&#24215;&#12398;&#26041;&#37341; &#24215;&#20869;&#20840;&#21697;&#12509;&#12452;&#12531;&#12488;10&#20493;]]></wp:comment_author>
			<wp:comment_author_email>bjlmyliaxm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.campinggiethoorn.nl/?list214=25224</wp:comment_author_url>
			<wp:comment_author_IP>192.187.97.195</wp:comment_author_IP>
			<wp:comment_date>2015-08-20 01:41:52</wp:comment_date>
			<wp:comment_date_gmt>2015-08-20 01:41:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#12362;&#12363;&#12370;&#26377;&#30410;&#12454;&#12455;&#12502;&#12469;&#12452;&#12488; &#20182;&#12398;&#12356;&#12367;&#12388;&#12363;&#12398;&#20182;&#12398;&#12377;&#12409;&#12390;&#12398;&#20182;&#12398;&#12398;&#12383;&#12417;&#12395;&#12290; &#22580;&#25152;&#20182;&#12384;&#12369;&#12364;&#12391;&#12365;&#12427; |&#12381;&#12398;&#31169;&#12364;&#25163;&#12395;&#31169;&#12364;&#21462;&#24471;&#12375;&#12390;&#12356;&#12414;&#12377;&#12371;&#12398;&#12424;&#12358;&#12395;&#35352;&#36848;&#12373;&#12428;&#12383;&#12398;&#12479;&#12452;&#12503;&#12434; &#24773;&#22577;&#24773;&#22577; &#23436;&#29863; &#12450;&#12503;&#12525;&#12540;&#12481;&#65311; | &#31169;&#12399;&#31169;&#12364;&#12375;&#12383; &#12399;&#31169;&#12399; &#12384;&#12369;&#20170;&#12527;&#12540;&#12461;&#12531;&#12464;&#12391;&#12354;&#12426;&#12289;&#31169;&#12364;&#25345;&#12387;&#12390;&#12356;&#12427;&#24773;&#22577;|} {&#19968;&#30446;&#12391;| |&#12381;&#12398;&#12424;&#12358;&#12394;&#24773;&#22577;&#12434;&#25506;&#12375;&#12390;&#12367;&#12384;&#12373;&#12356; '&#12391;&#12392;&#12394;&#12387;&#12390;&#12414;&#12375;&#12290;
&#20302;&#20385;&#26684;&#12399;&#24403;&#24215;&#12398;&#26041;&#37341; &#24215;&#20869;&#20840;&#21697;&#12509;&#12452;&#12531;&#12488;10&#20493; http://www.campinggiethoorn.nl/?list214=25224]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66951</wp:comment_id>
			<wp:comment_author><![CDATA[2015&#26149;&#22799;&#26032;&#33394;&#36861;&#21152; &#23433;&#24515;&#12398;&#38306;&#31246;&#36796;]]></wp:comment_author>
			<wp:comment_author_email>nsefoec@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.plasticsaolot.com/hot-24748-164.html</wp:comment_author_url>
			<wp:comment_author_IP>107.150.36.75</wp:comment_author_IP>
			<wp:comment_date>2015-08-20 04:14:29</wp:comment_date>
			<wp:comment_date_gmt>2015-08-20 04:14:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#24863;&#35613;&#12289;&#12454;&#12455;&#12502;&#12469;&#12452;&#12488;&#12399; &#23455;&#38555;&#12395;&#12399;&#38750;&#24120;&#12395;&#12399;&#23455;&#29992;&#30340;&#12290;
2015&#26149;&#22799;&#26032;&#33394;&#36861;&#21152; &#23433;&#24515;&#12398;&#38306;&#31246;&#36796; http://www.plasticsaolot.com/hot-24748-164.html]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63907</wp:comment_id>
			<wp:comment_author><![CDATA[thank you Interview Email]]></wp:comment_author>
			<wp:comment_author_email>nidarussel@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.7waystolive.com/beauty/7-ways-to-look-younger/</wp:comment_author_url>
			<wp:comment_author_IP>104.222.195.47</wp:comment_author_IP>
			<wp:comment_date>2015-08-06 08:11:35</wp:comment_date>
			<wp:comment_date_gmt>2015-08-06 08:11:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to every body, it's my first pay a visit of this blog; this webpage contains amazing and actually goid material in favor of 
visitors.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70757</wp:comment_id>
			<wp:comment_author><![CDATA[esta web es buena para adquirirlas Tablet]]></wp:comment_author>
			<wp:comment_author_email>nereaburnette@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://joat.co/index.php?url=http%3A%2F%2Fwww.amazon.es%2Fs%2F%3F_encoding%3DUTF8%26camp%3D3626%26creative%3D24790%26keywords%3Dtablet%26linkCode%3Dur2%26lo%3Delectronics%26qid%3D1420226726%26rh%3Dn%2</wp:comment_author_url>
			<wp:comment_author_IP>167.114.42.92</wp:comment_author_IP>
			<wp:comment_date>2015-09-06 17:30:48</wp:comment_date>
			<wp:comment_date_gmt>2015-09-06 17:30:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Buena recopilacion
Desde esta website podreis haceros con cualquiera de los nuevos 
modelos Tablet]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77379</wp:comment_id>
			<wp:comment_author><![CDATA[walk in tub shower Los Angeles]]></wp:comment_author>
			<wp:comment_author_email>brook.cleveland@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?feature=youtube_gdata&amp;v=9RrlHf6PWKM</wp:comment_author_url>
			<wp:comment_author_IP>177.107.97.244</wp:comment_author_IP>
			<wp:comment_date>2015-10-24 04:16:37</wp:comment_date>
			<wp:comment_date_gmt>2015-10-24 04:16:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Admiring the time and effort you put into your site and in depth information you present.

It's great to come across a blog every once in a while that isn't the same old rehashed information. Great read!
I've saved your site and I'm adding your RSS feeds to my Google account.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80383</wp:comment_id>
			<wp:comment_author><![CDATA[finance and business]]></wp:comment_author>
			<wp:comment_author_email>utaberkman@wildmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.financeandbusiness.info/</wp:comment_author_url>
			<wp:comment_author_IP>46.70.217.79</wp:comment_author_IP>
			<wp:comment_date>2016-02-12 19:53:26</wp:comment_date>
			<wp:comment_date_gmt>2016-02-12 19:53:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I got this website from my friend who told me on the topic of this website and now 
this time I am visiting this website and reading 
very informative articles at this place.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80702</wp:comment_id>
			<wp:comment_author><![CDATA[Aliza]]></wp:comment_author>
			<wp:comment_author_email>rosaliehupp@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://madiashekers.com/2015/06/22/crack-wifi-password/</wp:comment_author_url>
			<wp:comment_author_IP>104.168.105.211</wp:comment_author_IP>
			<wp:comment_date>2016-03-31 09:01:56</wp:comment_date>
			<wp:comment_date_gmt>2016-03-31 09:01:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If some one wishes expert view about running a blog then i advise him/her 
to pay a quick visit this blog, Keep up the fastidious job.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72162</wp:comment_id>
			<wp:comment_author><![CDATA[walk in tub shower Nevada]]></wp:comment_author>
			<wp:comment_author_email>salvatoreglennie@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Youtu.be/uZ2VU4jUpNs</wp:comment_author_url>
			<wp:comment_author_IP>89.47.24.152</wp:comment_author_IP>
			<wp:comment_date>2015-09-16 03:03:50</wp:comment_date>
			<wp:comment_date_gmt>2015-09-16 03:03:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For latest information you have to go to see world wide web 
and on internet I found this site as a best web site for hottest updates.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79866</wp:comment_id>
			<wp:comment_author><![CDATA[cavaquinho rozini branco]]></wp:comment_author>
			<wp:comment_author_email>brigette.kopp@fastmail.net</wp:comment_author_email>
			<wp:comment_author_url>http://Issuu.com/capabletag3798/docs/1443516589560a50ad9522d</wp:comment_author_url>
			<wp:comment_author_IP>23.95.6.66</wp:comment_author_IP>
			<wp:comment_date>2015-12-22 12:14:22</wp:comment_date>
			<wp:comment_date_gmt>2015-12-22 12:14:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Para você que já toca ou para quem quer aprender a tocar cavaquinho, aproveite essas aulas e todas as 
dicas.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80251</wp:comment_id>
			<wp:comment_author><![CDATA[thủ thuật seo]]></wp:comment_author>
			<wp:comment_author_email>taj_ngabidj@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>https://vietak.net/</wp:comment_author_url>
			<wp:comment_author_IP>103.27.239.39</wp:comment_author_IP>
			<wp:comment_date>2016-01-28 05:36:55</wp:comment_date>
			<wp:comment_date_gmt>2016-01-28 05:36:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Now you have to crank things up a bit and make him do all of the 
running. This will make him think that you have better things to do than sit around waiting for 
him. Our best way to stay gassed up and ready to go is through Reward - Ville.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77680</wp:comment_id>
			<wp:comment_author><![CDATA[&#19968;&#37096;&#20104;&#32004;&#36009;&#22770; &#26032;&#20316; 2015 &#26149;&#22799;]]></wp:comment_author>
			<wp:comment_author_email>dthezfjeio@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dinahshoreweekends.com</wp:comment_author_url>
			<wp:comment_author_IP>112.111.163.157</wp:comment_author_IP>
			<wp:comment_date>2015-10-26 03:02:32</wp:comment_date>
			<wp:comment_date_gmt>2015-10-26 03:02:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#12527;&#12531;&#12480;&#12501;&#12523;&#12502;&#12525;&#12464;&#65281;&#12516;&#12501;&#12540;&#12491;&#12517;&#12540;&#12473;&#12395; &#38291;&#12289;&#31169;&#12399;&#12381;&#12428;&#12434;&#30330;&#35211;&#12375;&#12414;&#12375;&#12383;&#12290;&#12516;&#12501;&#12540;&#12491;&#12517;&#12540;&#12473;&#12395;&#35352;&#36617;&#12373;&#12428;&#12390;&#12356;&#12427;&#21462;&#24471;&#12377;&#12427;&#26041;&#27861;&#12395;&#12388;&#12356;&#12390;| &#25552;&#26696;&#12398;&#12498;&#12531;&#12488;&#12354;&#12394;&#12383;&#12364;&#12356;&#12378;&#12428;&#12363;&#12434;&#25345;&#12387;&#12390;&#12356;&#12414;&#12377;&#12363;&#65311;&#31169;&#12399;&#12375;&#12400;&#12425;&#12367;&#12398;&#38291;&#12375;&#12424;&#12358;&#12392;&#12375;&#12390;&#12365;&#12383;&#12364;&#12289;&#31169;&#12399;&#12381;&#12371;&#12395;&#30528;&#12367;&#12424;&#12358;&#12395;&#35211;&#12360;&#12427;&#12371;&#12392;&#12399;&#12354;&#12426;&#12414;&#12379;&#12435;&#65281; &#20094;&#26479;
&#19968;&#37096;&#20104;&#32004;&#36009;&#22770; &#26032;&#20316; 2015 &#26149;&#22799; http://www.dinahshoreweekends.com]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79730</wp:comment_id>
			<wp:comment_author><![CDATA[aqui vi Sniper Elite 3 muy barato por si lo quereis JA que las vacaciones estan a la vuelta de la esquina,]]></wp:comment_author>
			<wp:comment_author_email>albertokastner@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.amazon.es/b/ref=as_sl_pc_tf_lc?node=599382031&amp;tag=myamazom-21&amp;camp=3670&amp;creative=24914&amp;linkCode=ur1&amp;adid=1NC4M1W0Q40XJBF7HNWE&amp;&amp;ref-refURL=http%3A%2F%2Fwww.todoal</wp:comment_author_url>
			<wp:comment_author_IP>95.141.20.203</wp:comment_author_IP>
			<wp:comment_date>2015-12-02 11:02:06</wp:comment_date>
			<wp:comment_date_gmt>2015-12-02 11:02:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[as mola the game Playstation 4 me I bought Cheap 
this site]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76118</wp:comment_id>
			<wp:comment_author><![CDATA[zbiorniki z betonu]]></wp:comment_author>
			<wp:comment_author_email>terripack@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/b/111395003532483207157/+SzambaplPlbetonowe/</wp:comment_author_url>
			<wp:comment_author_IP>218.75.53.22</wp:comment_author_IP>
			<wp:comment_date>2015-10-15 10:06:21</wp:comment_date>
			<wp:comment_date_gmt>2015-10-15 10:06:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not sure exactly why but this website is loading incredibly slow 
for me. Is anyone else having this issue or is it a issue 
on my end? I'll check back later and see if the problem still exists.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; Commands in Silverlight</title>
		<link>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-commands-in-silverlight/</link>
		<pubDate>Fri, 22 May 2009 18:01:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/05/22/adventures-in-mvvm-commands-in-silverlight/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archive/2009/05/22/adventures-in-mvvm-ndash-model-view-viewmodel.aspx"><strong>Adventures in MVVM</strong></a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-Commands-in-Silverlight" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F05%2F22%2Fadventures-in-mvvm-ndash-commands-in-silverlight.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f05%2f22%2fadventures-in-mvvm-ndash-commands-in-silverlight.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f05%2f22%2fadventures-in-mvvm-ndash-commands-in-silverlight.aspx" /></a> </p>  <div style="background-color: #cccccc">   <p><strong><font color="#ff0000">EDIT:</font></strong></p>    <p>One of the things that I enjoy most about working with MVVM in Silverlight is how new it is.&#160; When I say “new”, I mean that Silverlight doesn’t support the pattern very well out of the box, so the development community needs to step up and solve these problems.&#160; Some solutions are better than others.&#160; In this article, I solved a problem the best way I knew how.&#160; I urge you to read <a href="http://neverindoubtnet.blogspot.com/">Ward Bell’s</a> comments to this article, and my responses.&#160; After reflecting on it more, I concede that this is not the best way to implement a lightweight bindable command in SIlverlight.</p>    <p>Instead, I should have just read the Prism 2 source code to see how they implemented commands via attached behaviors.&#160; I would have learned that that I learned attached behaviors wrong in the first place.&#160; In <a href="http://blogs.southworks.net/jdominguez/2008/08/icommand-for-silverlight-with-attached-behaviors/">Julian Dominguez’s blog post on the topic</a>, he walks you through the thought process for attaching commands via behaviors.&#160; Although this is not the final code that made it into Prism, it is very close.&#160; I recommend reading it.</p>    <p>That being said, I will keep my original text in place.&#160; I think that the thought process for how I got there is very useful for learning… at least I find it useful.&#160; Then, be sure to read the comments, visit Julian’s blog and browse the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=fa07e1ce-ca3f-4b9b-a21b-e3fa10d013dd&amp;DisplayLang=en">Prism (CAL)</a> source code.</p> </div>  <p>One of the most important aspects of implementing the MVVM pattern in WPF and SIlverlight is the ability for the UI layer to bind directly to commands in the ViewModel.&#160; The only problem with this:&#160; commands were never implemented in Silverlight.&#160; Even though I (and many others) have ranted about this, our voice has not been heard.&#160; Even with the release of the Silverlight 3 beta, it seems as if we are still pining for commanding in Silverlight.</p>  <p>Many libraries have implemented commands in Silverlight, usually with some sort of static lookup table, mapping buttons to commands.&#160; They include <a href="http://compositewpf.codeplex.com/">Prism</a>, <a href="http://www.codeplex.com/caliburn">Caliburn</a>, <a href="http://projects.nikhilk.net/SilverlightFX/">SilverlightFX</a> and the <a href="http://msdnrss.thecoderblogs.com/2009/05/03/wpf-mvvm-toolkit-01-released/">MVVM toolkit</a>.&#160; It can feel like overkill to bring in these libraries just to get commanding.&#160; There are plenty of good reasons to use these libraries – don’t get me wrong – but if you are just looking for bindable commands, there is an easier way.</p>  <p>This article will walk you through the process of creating a button with command properties.&#160; This technique can be translated easily to any other control in order to achieve bindable commanding in Silverlight.</p>  <h3>ICommand</h3>  <p>The ICommand interface was the only thing that was included from the WPF commanding infrastructure within Silverlight.&#160; The interface is extremely simple:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1538e2b8-4d98-431a-8cb8-94e4c0fe7f4f" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">interface</span><span style="color: #000000;"> ICommand
{
    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> Execute(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> parameter);
    </span><span style="color: #0000FF;">bool</span><span style="color: #000000;"> CanExecute(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> parameter);
    </span><span style="color: #0000FF;">event</span><span style="color: #000000;"> EventHandler CanExecuteChanged;
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>The requirements of any control that deals with ICommand are:</p>

<ol>
  <li>Call Execute() when a trigger is hit </li>

  <li>Only call Execute() if CanExecute() returns true </li>

  <li>Allow a bindable parameter to be passed into Execute() and CanExecute() </li>

  <li>Disable the control when CanExecute() is false </li>

  <li>Refresh the enable/disable state of the control when the CanExecuteChanged event is raised </li>
</ol>

<h3></h3>

<h3>Implementing CommandButton</h3>

<p>Lets start with requirements 1 and 2:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:0f2dbc20-6d51-4802-a63f-1b9fc225713f" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> CommandButton : Button
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> CommandButton()
    {
        Click </span><span style="color: #000000;">+=</span><span style="color: #000000;"> (sender, e) </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;">
        {
            </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (Command </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;"> </span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;"> Command.CanExecute(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">))
                Command.Execute(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">);
        };
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> DependencyProperty CommandProperty </span><span style="color: #000000;">=</span><span style="color: #000000;">
        DependencyProperty.Register(</span><span style="color: #800000;">"</span><span style="color: #800000;">Command</span><span style="color: #800000;">"</span><span style="color: #000000;">,
                                    </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ICommand), </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(CommandButton),
                                    </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> PropertyMetadata(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">));

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ICommand Command
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> GetValue(CommandProperty) </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ICommand; }
        </span><span style="color: #0000FF;">set</span><span style="color: #000000;"> { SetValue(CommandProperty, value); }
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>With this, you can bind a command in the ViewModel to the view:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b672d696-ee9e-4357-a2f0-78e492dacb92" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ViewModel : INotifyPropertyChanged
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ViewModel()
    {
        MyCommand </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> DelegateCommand</span><span style="color: #000000;">&lt;</span><span style="color: #0000FF;">object</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(DoSomething);
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DoSomething(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> obj)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Do what you want</span><span style="color: #008000;">
</span><span style="color: #000000;">    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ICommand MyCommand { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }

   </span><span style="color: #008000;">//</span><span style="color: #008000;"> The rest of your ViewModel</span><span style="color: #008000;">
</span><span style="color: #000000;">}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This XAML creates a CommandButton in place of a Button:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:5434a91a-0a34-44d3-8c13-2fec0744c14e" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">local:CommandButton </span><span style="color: #FF0000;">Content</span><span style="color: #0000FF;">="Click Me"</span><span style="color: #FF0000;"> Command</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding MyCommand}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>Adding Parameters</h3>

<p>Implementing feature 3 is trivial. Add the CommandParameter property and pass it in to Execute() and CanExecute()</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:866aa6d6-9ac5-4667-8984-6a5c243d4374" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> CommandButton : Button
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> CommandButton()
    {
        Click </span><span style="color: #000000;">+=</span><span style="color: #000000;"> (sender, e) </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;">
        {
            </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (Command </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;"> </span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;"> Command.CanExecute(CommandParameter))
                Command.Execute(CommandParameter);
        };
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Everything else from initial Implementation</span><span style="color: #008000;">
</span><span style="color: #000000;">    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> DependencyProperty CommandParameterProperty </span><span style="color: #000000;">=</span><span style="color: #000000;">
        DependencyProperty.Register(</span><span style="color: #800000;">"</span><span style="color: #800000;">CommandParameter</span><span style="color: #800000;">"</span><span style="color: #000000;">,
                                    </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(</span><span style="color: #0000FF;">object</span><span style="color: #000000;">), </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(CommandButton),
                                    </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> PropertyMetadata(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">));

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">object</span><span style="color: #000000;"> CommandParameter
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> GetValue(CommandParameterProperty); }
        </span><span style="color: #0000FF;">set</span><span style="color: #000000;"> { SetValue(CommandParameterProperty, value); }
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>With that, you can add parameters to the XAML:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:6b395408-f0cc-4d43-b35c-cd957419f3f2" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">local:CommandButton </span><span style="color: #FF0000;">Content</span><span style="color: #0000FF;">="Click Me"</span><span style="color: #FF0000;"> Command</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding MyCommand}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> CommandParameter</span><span style="color: #0000FF;">="MyParameter"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3><strong></strong></h3>

<h3>Hooking IsEnabled to CanExecute()</h3>

<p>Things get a bit more complicated when implementing requirements 4 and 5, but it is still pretty straight-forward.&#160; I start by registering an event handler for when the Command property changes (CommandChanged).&#160; This event handler hooks the CanExecuteChanged event and handles the event by setting the IsEnabled flag to the value of CanExecute().&#160; It then proceeds to initialize the value of IsEnabled since we know the answer at this time.</p>

<p><strong>The final class:</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:bf466efe-a043-40c1-af0b-a8421d23d354" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> CommandButton : Button
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> CommandButton()
    {
        Click </span><span style="color: #000000;">+=</span><span style="color: #000000;"> (sender, e) </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;">
        {
            </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (Command </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;"> </span><span style="color: #000000;">&amp;&amp;</span><span style="color: #000000;"> Command.CanExecute(CommandParameter))
                Command.Execute(CommandParameter);
        };
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> DependencyProperty CommandProperty </span><span style="color: #000000;">=</span><span style="color: #000000;">
        DependencyProperty.Register(</span><span style="color: #800000;">"</span><span style="color: #800000;">Command</span><span style="color: #800000;">"</span><span style="color: #000000;">,
                                    </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ICommand), </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(CommandButton),
                                    </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> PropertyMetadata(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">, CommandChanged));

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> CommandChanged(DependencyObject source, DependencyPropertyChangedEventArgs args)
    {
        var button </span><span style="color: #000000;">=</span><span style="color: #000000;"> source </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> CommandButton;
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (button </span><span style="color: #000000;">==</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">) </span><span style="color: #0000FF;">return</span><span style="color: #000000;">;

        button.RegisterCommand(args.OldValue </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ICommand, args.NewValue </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ICommand);            
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> RegisterCommand(ICommand oldCommand, ICommand newCommand)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (oldCommand </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            oldCommand.CanExecuteChanged </span><span style="color: #000000;">-=</span><span style="color: #000000;"> HandleCanExecuteChanged;

        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (newCommand </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            newCommand.CanExecuteChanged </span><span style="color: #000000;">+=</span><span style="color: #000000;"> HandleCanExecuteChanged;

        HandleCanExecuteChanged(newCommand, EventArgs.Empty);
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> HandleCanExecuteChanged(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> sender, EventArgs args)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (Command </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
            IsEnabled </span><span style="color: #000000;">=</span><span style="color: #000000;"> Command.CanExecute(CommandParameter);
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ICommand Command
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> GetValue(CommandProperty) </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ICommand; }
        </span><span style="color: #0000FF;">set</span><span style="color: #000000;"> { SetValue(CommandProperty, value); }
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> DependencyProperty CommandParameterProperty </span><span style="color: #000000;">=</span><span style="color: #000000;">
        DependencyProperty.Register(</span><span style="color: #800000;">"</span><span style="color: #800000;">CommandParameter</span><span style="color: #800000;">"</span><span style="color: #000000;">,
                                    </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(</span><span style="color: #0000FF;">object</span><span style="color: #000000;">), </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(CommandButton),
                                    </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> PropertyMetadata(</span><span style="color: #0000FF;">null</span><span style="color: #000000;">));

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">object</span><span style="color: #000000;"> CommandParameter
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> GetValue(CommandParameterProperty); }
        </span><span style="color: #0000FF;">set</span><span style="color: #000000;"> { SetValue(CommandParameterProperty, value); }
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<h3>Summary</h3>

<p>This method for hooking commands to buttons has one drawback in my opinion:&#160; It requires you to put a CommandButton in your XAML instead of a vanilla Button.&#160; This, of course, means that other controls that inherit from Button such as Checkbox and RadioButton do not get this behavior (you have to implement this pattern for them).&#160; Still, this approach makes it very easy to add commands to any control you wish; even in WPF.&#160; In a future post, I will discuss a similar approach for binding a command to a ComboBox (or ListBox) selection changed event.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2009-05-22 18:01:00</wp:post_date>
		<wp:post_date_gmt>2009-05-22 18:01:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-commands-in-silverlight</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>948</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.88.130</wp:comment_author_IP>
			<wp:comment_date>2010-08-16 01:46:51</wp:comment_date>
			<wp:comment_date_gmt>2010-08-16 01:46:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, by using the attached behavior property, you can do this.  I discuss it further in this post:
http://houseofbilz.com/archives/2009/08/27/adventures-in-mvvm-binding-commands-to-any-event/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>943</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>454</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>chrisrbooth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.chrisboothphoto.com</wp:comment_author_url>
			<wp:comment_author_IP>109.154.241.141</wp:comment_author_IP>
			<wp:comment_date>2010-07-06 06:29:38</wp:comment_date>
			<wp:comment_date_gmt>2010-07-06 06:29:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post, thanks, but where can I find the DelegateCommand class?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>467</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.157</wp:comment_author_IP>
			<wp:comment_date>2010-07-07 02:48:07</wp:comment_date>
			<wp:comment_date_gmt>2010-07-07 02:48:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The DelegateCommand is a very simple implementation of ICommand that wraps two delegates: Execute and CanExecute.  They can be found all over the internet, but one implementation can be found in my "ViewModelSupport" project:
http://viewmodelsupport.codeplex.com/SourceControl/changeset/view/48146#864924]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>454</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>943</wp:comment_id>
			<wp:comment_author><![CDATA[He]]></wp:comment_author>
			<wp:comment_author_email>dragos2406@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>91.206.82.9</wp:comment_author_IP>
			<wp:comment_date>2010-08-12 15:15:30</wp:comment_date>
			<wp:comment_date_gmt>2010-08-12 15:15:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is there possible to bind in MVVM an event to a command?
Let's say I want to have a view-model for a TabControl and I want a command for SelectionChanged event. So, is there possible to have &lt;TabControl SelectionChanged="{Binding TabSelectionCommand}"&gt;....&lt;/TabControl&gt; ? If it is so, how can it be implemented?

Thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17912</wp:comment_id>
			<wp:comment_author><![CDATA[Mohammed Safiq SA]]></wp:comment_author>
			<wp:comment_author_email>smartryshafiq@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-commands-in-silverlight/</wp:comment_author_url>
			<wp:comment_author_IP>117.239.96.242</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 06:09:47</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 06:09:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you explain me why commanding is not working for checkbox and radio button?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9111</wp:comment_id>
			<wp:comment_author><![CDATA[swapnil]]></wp:comment_author>
			<wp:comment_author_email>swapnilsrivastav70@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.152.142.89</wp:comment_author_IP>
			<wp:comment_date>2011-08-17 06:09:55</wp:comment_date>
			<wp:comment_date_gmt>2011-08-17 06:09:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
i have a tab control and some fieled in it.if user inputs some changes in the fields and then click on some other menu outside tabcontrol then it must show a message box regarding saving of data if he presses "yes" then data will be saved else the control will jump on the menu he has selected.
Can you help me finding the solution.
i have to implement it using MVVM in silverlight 4.0]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27607</wp:comment_id>
			<wp:comment_author><![CDATA[Darryl]]></wp:comment_author>
			<wp:comment_author_email>damarisrousseau@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Harlan.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>218.207.14.79</wp:comment_author_IP>
			<wp:comment_date>2014-07-10 07:06:08</wp:comment_date>
			<wp:comment_date_gmt>2014-07-10 07:06:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's hard to find your articles in google.
I found it on 13 spot, you should build quality backlinks , it will help you to get more 
visitors. I know how to help you, just search in google - k2 seo tips and 
tricks]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79840</wp:comment_id>
			<wp:comment_author><![CDATA[wien escort]]></wp:comment_author>
			<wp:comment_author_email>paige.mann@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.viennaescort.at/escorts-wien/</wp:comment_author_url>
			<wp:comment_author_IP>93.127.145.36</wp:comment_author_IP>
			<wp:comment_date>2015-12-17 12:59:54</wp:comment_date>
			<wp:comment_date_gmt>2015-12-17 12:59:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm gone to inform my little brother, that he should also pay 
a visit this blog on regular basis to obtain updated from newest news update.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; A Testing Story</title>
		<link>http://houseofbilz.com/archives/2009/05/27/adventures-in-mvvm-a-testing-story/</link>
		<pubDate>Wed, 27 May 2009 18:04:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/05/27/adventures-in-mvvm-a-testing-story/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archive/2009/05/22/adventures-in-mvvm-ndash-model-view-viewmodel.aspx">Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-A-Testing-Story" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.com%2Farchive%2F2009%2F05%2F27%2Fadventures-in-mvvm-ndash-a-testing-story.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f05%2f27%2fadventures-in-mvvm-ndash-a-testing-story.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fwww.houseofbilz.com%2farchive%2f2009%2f05%2f27%2fadventures-in-mvvm-ndash-a-testing-story.aspx" /></a> </p>  <p>I have been spending a lot of time lately thinking about client architecture with Silverlight and to a lesser extent, WPF.&#160; I tend to subscribe to the philosophy that when you make your code testable, you get a lot of other great qualities along with it.&#160; I believe this so strongly that I go out of my way to architect my inherently untestable code in a way that I can, indeed, test it.</p>  <p>Since I have been writing most my code for the Silverlight platform in the past several months, and I wanted very much to write my code test-driven.&#160; I used the Model-View-Presenter pattern (MVP) to implement my view as an interface.&#160; The presenter would hand model objects over to the view and I would bind visual items in my view to the model items.&#160; The presenter would then tell the IView what to do when any real logic came to play.&#160; Over time, however, more and more logic started creeping into the code behind.&#160; I had a lot of data converters to doing my dirty work, blending the code between the model and the view.&#160; The problem is that anything within the IView implementation (aka code-behind) is not easily unit-testable.</p>  <p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/MyExperiencewithMVVM_FFA6/organic_2.jpg"><img style="border-right-width: 0px; margin: 10px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="organic" border="0" alt="organic" align="right" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/MyExperiencewithMVVM_FFA6/organic_thumb.jpg" width="244" height="244" /></a> </p>  <p>As I started to really understand how binding worked in the context of XAML, I found myself wanting to use binding against view-agnostic objects for testability.&#160; Since the view didn’t know anything about the presenter, the only data to bind to was in the model.&#160; Sadly, view-specific data started to creep into model items.&#160; Where ThumbnailData (for instance) was only meta-information that came from my server, it began to gain properties such as Selected and Hidden.&#160; Moreover, what “Selected” means to one part of the UI is different to another part of the UI.</p>  <p>This was not the direction I wanted to go.&#160; In a fit of desperation, a colleague and I sat down and designed a pattern where we had a “ViewState” and a “ViewLogic” class.&#160; “ViewState” was just a set of properties (model data and view properties) that implements INotifyPropertyChanged for the view to bind against and “ViewLogic” manipulated the “ViewState” to add the UI smarts.</p>  <p>The benefits were immediate and obvious.&#160; We started seeing logic that was once in the code-behind move over to the “ViewLogic”.&#160; We immediately received testing benefits.&#160; We could write tests against the “ViewState” as if it were the actual UI.&#160; We even started writing our new features with TDD.&#160; Everything was great!</p>  <p>I was all ready to start blogging about it.&#160; My colleague and I had come up with this fantastic pattern for making testable Silverlight UIs and I wanted to tell the world.&#160; When doing some comparative reading I started seeing the “MVVM” term pop up here and there.&#160; It didn’t take long for me to realize that what we had invented in a bubble was just a subtle variant of the Model-View-ViewModel pattern.&#160; The ViewModel is really just our ViewLogic and ViewState combined into one single class.&#160; It only solidified my belief that this pattern had legs.</p>  <p>Although I sensed some initial skepticism from my team-mates about using the pattern throughout the product, it didn’t take long for them to recognize how important the MVVM pattern would be to our project.&#160; Since adoption our test coverage has skyrocketed with hundreds of useful tests.&#160; The proof is in the pudding.&#160; The vast majority of our bugs that come in have been one of two types of bugs: Missed features or improper binding – two things that the MVVM pattern can’t help prevent.</p>  <p>So, that is how I got so interested in the MVVM pattern.&#160; Because it is relatively new, the community is still working out the best practices.&#160; There is room for experimentation and that can be a lot of fun.&#160; Lets solve the new problems.&#160; Lets push the community in the right direction.&#160; We are already hearing the buzz for Silverlight 3 to contain native support for MVVM (via Prism).&#160; Lets keep this going… and lets have fun doing it!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2009-05-27 18:04:00</wp:post_date>
		<wp:post_date_gmt>2009-05-27 18:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-a-testing-story</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>32896</wp:comment_id>
			<wp:comment_author><![CDATA[Cathy]]></wp:comment_author>
			<wp:comment_author_email>janahatchett@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://electronicengineerblog.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>50.168.49.138</wp:comment_author_IP>
			<wp:comment_date>2014-12-02 05:28:35</wp:comment_date>
			<wp:comment_date_gmt>2014-12-02 05:28:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Extremely intriguing and beneficial information. Book-marked .
Many thanks for the amazing read.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; Commanding with List Boxes</title>
		<link>http://houseofbilz.com/archives/2009/05/29/adventures-in-mvvm-commanding-with-list-boxes/</link>
		<pubDate>Fri, 29 May 2009 13:41:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/05/27/adventures-in-mvvm-commanding-with-list-boxes/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://dotnetshoutout.com/Adventures-in-MVVM-Commanding-with-List-Boxes" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fgeekswithblogs.net%2FHouseOfBilz%2Farchive%2F2009%2F05%2F29%2Fadventures-in-mvvm-ndash-commanding-with-list-boxes.aspx"></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f05%2f29%2fadventures-in-mvvm-ndash-commanding-with-list-boxes.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f05%2f29%2fadventures-in-mvvm-ndash-commanding-with-list-boxes.aspx"></a> </p> <p>Continuing in my series of <a href="http://houseofbilz.com/archive/2009/05/22/adventures-in-mvvm-ndash-model-view-viewmodel.aspx">“Adventures in MVVM”</a>, I want to talk about a few different approaches to working with List Boxes with the MVVM pattern.&nbsp; What I am writing here is generally true of all controls that derive from Selector, including ListBox and ComboBox.&nbsp; This example was developed in Silverlight, but the same concepts also apply to WPF.</p> <h3>The Problem</h3> <p>You have a list box in your view, and you want your ViewModel to do something when an item in the ListBox is selected. You want to do this without any code-behind, using the MVVM pattern.&nbsp; There are three methods that I have come up with, and I will outline them here.&nbsp; In this post, I will be using a VERY simple data class in my ListBox called <strong>Person </strong>with a First and Last name.&nbsp; It is so simple, in fact, that I have chosen not to include the source for this class.</p> <h3>Method 1: Quick and Dirty SelectedItem binding</h3> <p>This method sets up a SelectedPerson property in the view model and does something when the property is changed.&nbsp; </p> <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:7a1ac801-440e-45ac-a937-0ce89313b546" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ViewModel : INotifyPropertyChanged
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ObservableCollection</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Person</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> People { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> Person _selectedPerson </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> Person SelectedPerson
    {
        </span><span style="color: #0000FF;">get</span><span style="color: #000000;"> { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> _selectedPerson; }
        </span><span style="color: #0000FF;">set</span><span style="color: #000000;">
        {
            _selectedPerson </span><span style="color: #000000;">=</span><span style="color: #000000;"> value;
            OnPropertyChanged(</span><span style="color: #800000;">"</span><span style="color: #800000;">SelectedPerson</span><span style="color: #800000;">"</span><span style="color: #000000;">);    
            DoSomething(value);
        }
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> ... rest of ViewModel</span><span style="color: #008000;">
</span><span style="color: #000000;">}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:e39d8690-156d-41d1-8c3d-d92da1d0d0a3" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ListBox </span><span style="color: #FF0000;">ItemsSource</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding People}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> SelectedItem</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding SelectedPerson, Mode=TwoWay}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p><strong>Pros: </strong>This method is quick and simple to get going <br><strong>Cons:</strong> You are introducing side effects in your property code.&nbsp; If you are OK with this, then read no further.&nbsp; If this bothers you the way it does for me, then lets look at our next option.</p>
<h3>Method 2: Button Command</h3>
<p>There are plenty of commanding libraries out there to choose from.&nbsp; I will take advantage of the <a href="http://compositewpf.codeplex.com/">Prism</a> commanding system (Microsoft.Practices.Composite.Presentation.Commands).&nbsp; They have implemented bindable commands for ButtonBase.&nbsp; The only problem: ListBox is not a ButtonBase.&nbsp; To get around this, replace the ItemTemplate with a Button that has a template of textblock.</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:821a3512-9c0c-4b74-b6bd-faf4e9fe37e1" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ViewModel : INotifyPropertyChanged
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ViewModel()
    {
        PersonSelected </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> DelegateCommand</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Person</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">(DoSomething);
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> ... rest of constructor</span><span style="color: #008000;">
</span><span style="color: #000000;">    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ObservableCollection</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Person</span><span style="color: #000000;">&gt;</span><span style="color: #000000;"> People { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ICommand PersonSelected { </span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">set</span><span style="color: #000000;">; }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> ... rest of ViewModel    </span><span style="color: #008000;">
</span><span style="color: #000000;">}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:df1c3267-d07b-4be4-962d-615aec33d116" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ListBox </span><span style="color: #FF0000;">ItemsSource</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding People}</span><span style="color: #0000FF;">"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ListBox.ItemTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
        </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">DataTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
            </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">Button </span><span style="color: #FF0000;">Commands:Click.Command</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding PersonSelected, Source={StaticResource ViewModel}}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Commands:Click.CommandParameter</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">Button.Template</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ControlTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                        </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">ControlTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">Button.Template</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
            </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">Button</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
        </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">DataTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">ListBox.ItemTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">ListBox</span><span style="color: #0000FF;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p><strong>Pros: </strong>The ViewModel is much more simple with no side effects.&nbsp; <br><strong>Cons:</strong> The XAML is ugly as sin.&nbsp; It also changes the behavior of the ListBox in a subtle way.&nbsp; Every time you select an item, the command fires, not just when it changes.&nbsp; This is my LEAST favorite approach.&nbsp; We can do better</p>
<h3>Method 3: Bind Commands to the ListBox</h3>
<p>The final mechanism is my favorite.&nbsp; Even though <a href="http://compositewpf.codeplex.com/">Prism</a> doesn’t give us the ability to bind commands to ListBoxes, we can extend their attached behavior infrastructure such that all ListBoxes and ComboBoxes (or anything that derives from Selector) can take advantage of it.&nbsp; The ViewModel doesn’t change from “Method 2”, but the XAML does:</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:4347b12c-780e-48d2-98c1-ff89501973fc" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ListBox </span><span style="color: #FF0000;">ItemsSource</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding People}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Commands:Selected.Command</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding PersonSelected}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p><strong>Pros: </strong>Best of both worlds.&nbsp; Simple ViewModel.&nbsp; Simple XAML <br><strong>Cons:</strong> You have to write some extensions to the Prism infrastructure.&nbsp; This code is boilerplate.&nbsp; I have written some generics that can reduce the boilerplate code somewhat, but not completely, due to the static properties. </p>
<h3>The Winner Is….</h3>
<p>I like “Method 3” the best.&nbsp; With a bit of some infrastructure code that you can tuck away, you get to bind the selected items to a command in any case.&nbsp; It plays well, and it is easy to follow.</p>
<p>But wait… you want the Prism extensions?&nbsp; Here they are:</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:4f97a3a2-4440-4df0-9d8e-f62a085e3266" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> SelectorSelectedCommandBehavior : CommandBehaviorBase</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">Selector</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> SelectorSelectedCommandBehavior(Selector selectableObject)
        : </span><span style="color: #0000FF;">base</span><span style="color: #000000;">(selectableObject)
    {
        selectableObject.SelectionChanged </span><span style="color: #000000;">+=</span><span style="color: #000000;"> OnSelectionChanged;
    }

    </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OnSelectionChanged(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> sender, SelectionChangedEventArgs e)
    {
        CommandParameter </span><span style="color: #000000;">=</span><span style="color: #000000;"> TargetObject.SelectedItem;
        ExecuteCommand();
    }
}</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> Selected
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> DependencyProperty SelectedCommandBehaviorProperty </span><span style="color: #000000;">=</span><span style="color: #000000;"> DependencyProperty.RegisterAttached(
        </span><span style="color: #800000;">"</span><span style="color: #800000;">SelectedCommandBehavior</span><span style="color: #800000;">"</span><span style="color: #000000;">,
        </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(SelectorSelectedCommandBehavior),
        </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(Selected),
        </span><span style="color: #0000FF;">null</span><span style="color: #000000;">);

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> DependencyProperty CommandProperty </span><span style="color: #000000;">=</span><span style="color: #000000;"> DependencyProperty.RegisterAttached(
        </span><span style="color: #800000;">"</span><span style="color: #800000;">Command</span><span style="color: #800000;">"</span><span style="color: #000000;">,
        </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ICommand),
        </span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(Selected),
        </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> PropertyMetadata(OnSetCommandCallback));

    [System.Diagnostics.CodeAnalysis.SuppressMessage(</span><span style="color: #800000;">"</span><span style="color: #800000;">Microsoft.Design</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">CA1011:ConsiderPassingBaseTypesAsParameters</span><span style="color: #800000;">"</span><span style="color: #000000;">, Justification </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #800000;">"</span><span style="color: #800000;">Only works for selector</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> SetCommand(Selector selector, ICommand command)
    {
        selector.SetValue(CommandProperty, command);
    }

    [System.Diagnostics.CodeAnalysis.SuppressMessage(</span><span style="color: #800000;">"</span><span style="color: #800000;">Microsoft.Design</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">CA1011:ConsiderPassingBaseTypesAsParameters</span><span style="color: #800000;">"</span><span style="color: #000000;">, Justification </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #800000;">"</span><span style="color: #800000;">Only works for selector</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> ICommand GetCommand(Selector selector)
    {
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> selector.GetValue(CommandProperty) </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ICommand;
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> OnSetCommandCallback(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)
    {
        var selector </span><span style="color: #000000;">=</span><span style="color: #000000;"> dependencyObject </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> Selector;
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (selector </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
        {
            GetOrCreateBehavior(selector).Command </span><span style="color: #000000;">=</span><span style="color: #000000;"> e.NewValue </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ICommand;
        }
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">static</span><span style="color: #000000;"> SelectorSelectedCommandBehavior GetOrCreateBehavior(Selector selector)
    {
        var behavior </span><span style="color: #000000;">=</span><span style="color: #000000;"> selector.GetValue(SelectedCommandBehaviorProperty) </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> SelectorSelectedCommandBehavior;
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (behavior </span><span style="color: #000000;">==</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">)
        {
            behavior </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">new</span><span style="color: #000000;"> SelectorSelectedCommandBehavior(selector);
            selector.SetValue(SelectedCommandBehaviorProperty, behavior);
        }

        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> behavior;
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div><pre class="c-sharp" name="code"></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2009-05-29 13:41:00</wp:post_date>
		<wp:post_date_gmt>2009-05-29 13:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-commanding-with-list-boxes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>4271</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.72.133</wp:comment_author_IP>
			<wp:comment_date>2010-12-28 01:43:02</wp:comment_date>
			<wp:comment_date_gmt>2010-12-28 01:43:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I created a folder and namespace called AttachedBehaviors.  I often get several of them put away by the end of a project, and they usually follow the same pattern.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>218</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in MVVM &ndash; Model-View-ViewModel &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-14 13:36:02</wp:comment_date>
			<wp:comment_date_gmt>2010-06-14 13:36:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Commanding with List Boxes [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28529</wp:comment_id>
			<wp:comment_author><![CDATA[todo list windows]]></wp:comment_author>
			<wp:comment_author_email>alina_mchale@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://todobuilder.com/</wp:comment_author_url>
			<wp:comment_author_IP>107.155.118.40</wp:comment_author_IP>
			<wp:comment_date>2014-08-18 18:11:31</wp:comment_date>
			<wp:comment_date_gmt>2014-08-18 18:11:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up, of course this piece of writing is in fact pleasant 
and I have learned lot of things from it regarding blogging.
thanks.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36976</wp:comment_id>
			<wp:comment_author><![CDATA[read full article]]></wp:comment_author>
			<wp:comment_author_email>serenarees@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://app.jottit.com/twitter_apps</wp:comment_author_url>
			<wp:comment_author_IP>183.223.208.89</wp:comment_author_IP>
			<wp:comment_date>2015-02-12 16:04:51</wp:comment_date>
			<wp:comment_date_gmt>2015-02-12 16:04:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You ought to be a part of a contest for one of the greatest websites on the internet.
I am going to highly recommend this site!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>570</wp:comment_id>
			<wp:comment_author><![CDATA[Vivek]]></wp:comment_author>
			<wp:comment_author_email>VIVEK_BHAGWAT@YAHOO.COM</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.216.11.38</wp:comment_author_IP>
			<wp:comment_date>2010-07-19 16:13:52</wp:comment_date>
			<wp:comment_date_gmt>2010-07-19 16:13:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
I am using Commands:Selected.Command for my ComboBox. In XAML I have set IsEnabled = false for the control. But when the following line gets executed, 
"GetOrCreateBehavior(selector).Command = e.NewValue as ICommand;"
the control's IsEnabled property changed back to true.

How can we avoid this behavior?
Thanks,
Vivek]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4244</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>chris.yager@thomsonreuters.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>163.231.6.67</wp:comment_author_IP>
			<wp:comment_date>2010-12-27 16:51:33</wp:comment_date>
			<wp:comment_date_gmt>2010-12-27 16:51:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,
Thanks a lot for this sample code - helped me keep event handlers out of my view code-behind. I'm trying to figure out the best place to put this type of code in my project. I've got view namespaces, view model namespaces, etc. Where do you put this type of code in your projects?

Thanks,
Chris]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38250</wp:comment_id>
			<wp:comment_author><![CDATA[http://members.webs.com/sites/126654196/dashboard/]]></wp:comment_author>
			<wp:comment_author_email>stantonbyars@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://members.webs.com/sites/126654196/dashboard/</wp:comment_author_url>
			<wp:comment_author_IP>85.236.20.74</wp:comment_author_IP>
			<wp:comment_date>2015-03-12 05:31:55</wp:comment_date>
			<wp:comment_date_gmt>2015-03-12 05:31:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The yields have increased considerable well in the past and they are supposed to get higher than this as well.
However, as a tenant your landlord does have insurance to cover 
their items, but that insurance does not protect against 
personal items within your home. However, the demolishing of these dorms is more than just 
symbolism.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6689</wp:comment_id>
			<wp:comment_author><![CDATA[sri]]></wp:comment_author>
			<wp:comment_author_email>sriki.kv@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>164.164.95.18</wp:comment_author_IP>
			<wp:comment_date>2011-01-19 09:31:47</wp:comment_date>
			<wp:comment_date_gmt>2011-01-19 09:31:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I have a listbox which shows checkbox items. Whenever i do select the checkbox, listbox item selectedItem is not triggering which is very mych required for me. How to handle this. Note that the SelectedItem is triggering when i click the listbox item but not on checkbox click event.

Regards,Sri]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29884</wp:comment_id>
			<wp:comment_author><![CDATA[Jasmine]]></wp:comment_author>
			<wp:comment_author_email>jovitabuffington@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://thesfm.com/annodigital?pg=free-training&amp;ty=companyv2&amp;ar=the-sfm&amp;t=bigbang</wp:comment_author_url>
			<wp:comment_author_IP>23.250.124.209</wp:comment_author_IP>
			<wp:comment_date>2014-10-05 09:05:43</wp:comment_date>
			<wp:comment_date_gmt>2014-10-05 09:05:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think everything posted made a bunch of sense.
But, what about this? suppose you added a little content?
I am not suggesting your content isn't good., however suppose you added something that 
grabbed people's attention? I mean Adventures in MVVM 
- Commanding with List Boxes ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26590</wp:comment_id>
			<wp:comment_author><![CDATA[chiro Sherbrooke]]></wp:comment_author>
			<wp:comment_author_email>latonyaallan@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=MyDaZvvHNlU&amp;feature=share</wp:comment_author_url>
			<wp:comment_author_IP>5.135.97.28</wp:comment_author_IP>
			<wp:comment_date>2014-05-28 21:58:58</wp:comment_date>
			<wp:comment_date_gmt>2014-05-28 21:58:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, constantly i used to check webpage posts here in the early hours in the dawn, for the reason that i love to find out more and 
more.

Also visit my web blog - <a href="https://www.youtube.com/watch?v=MyDaZvvHNlU&amp;feature=share" rel="nofollow">chiro Sherbrooke</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30400</wp:comment_id>
			<wp:comment_author><![CDATA[Easy home business program]]></wp:comment_author>
			<wp:comment_author_email>archerackermann@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>https://svn.id.ethz.ch/projects/forums/ticket/20596</wp:comment_author_url>
			<wp:comment_author_IP>173.44.40.8</wp:comment_author_IP>
			<wp:comment_date>2014-10-16 13:26:13</wp:comment_date>
			<wp:comment_date_gmt>2014-10-16 13:26:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the marvelous posting! I truly enjoyed reading it,
you could be a great author.I will be sure to bookmark your blog and will often come back 
later in life. I want to encourage that you continue your great job, have a nice morning!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8759</wp:comment_id>
			<wp:comment_author><![CDATA[bydt]]></wp:comment_author>
			<wp:comment_author_email>bayudita@xgmailx.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.153.101.210</wp:comment_author_IP>
			<wp:comment_date>2011-07-27 05:55:59</wp:comment_date>
			<wp:comment_date_gmt>2011-07-27 05:55:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great! Thank you very much, it works like charm]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80500</wp:comment_id>
			<wp:comment_author><![CDATA[Darla]]></wp:comment_author>
			<wp:comment_author_email>temekabristow@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.reggaefoundation.com/robert-palano-committed-development/</wp:comment_author_url>
			<wp:comment_author_IP>23.108.172.9</wp:comment_author_IP>
			<wp:comment_date>2016-03-08 10:28:40</wp:comment_date>
			<wp:comment_date_gmt>2016-03-08 10:28:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[They also did not make sure that home buyers could afford to pay 
therefore to their homes once these rates increased. Check eBay when you have completely finished 
here. More experienced agents can sometimes set their terms.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; Slides and Demo App</title>
		<link>http://houseofbilz.com/archives/2009/06/12/adventures-in-mvvm-slides-and-demo-app/</link>
		<pubDate>Fri, 12 Jun 2009 13:42:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/06/12/adventures-in-mvvm-slides-and-demo-app/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archive/2009/05/22/adventures-in-mvvm-ndash-model-view-viewmodel.aspx">More Adventures in MVVM</a></p>  <p><a href="http://dotnetshoutout.com/Adventures-in-MVVM-Slides-and-Demo-App" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fgeekswithblogs.net%2FHouseOfBilz%2Farchive%2F2009%2F06%2F12%2Fadventures-in-mvvm-ndash-slides-and-demo-app.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f06%2f12%2fadventures-in-mvvm-ndash-slides-and-demo-app.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f06%2f12%2fadventures-in-mvvm-ndash-slides-and-demo-app.aspx" /></a></p>  <p>Yesterday, I gave my MVVM talk to the public for the first time in <a href="http://www.glugnet.org/">Flint, MI</a>.&#160; I will be in Southfield next week and Tennessee the week after that (CodeStock), giving the same talk.&#160; Although I have some changes to make, I thought I would post what I presented last night.&#160; I will probably work on a smaller example that I will also put up here when I am done with it. </p>  <h3>The Demo</h3> <img src="http://brianstestsite.googlepages.com/RecipeBox.png" width="430" height="289" />   <p>The demo is a front-end to a recipe database.&#160; It should compile and run out of the box.&#160; It was designed to work against <a href="http://www.eCuisine.com">www.eCuisine.com</a>, but it requires you to sign up with them in order to get real data.&#160; To get around that, I have stored some “canned” recipes in the service by default.&#160; If you want to hook it up to use the real eCuisine.com service, simply register with them from <a href="http://www.eCuisine.com">www.eCuisine.com</a> and add your email/client ID in the eCuisine.svc.cs file and uncomment the null for the service.&#160; If you don’t do that, everything still works well enough for you to get the feel for the app.</p>  <p>The vast majority of the UI behavior exists in the View-Models and I show a few different approaches to getting View-Models hooked up to the views.</p>  <p>There is also a full suite of tests.&#160; Be sure to check them out for ideas to how you might test your View-Models.</p>  <p><a href="http://brianstestsite.googlepages.com/RecipeBox.Public.zip"><strong>Demo Code</strong></a></p>  <p><strong><a href="http://brianstestsite.googlepages.com/MVVM.ppt">Powerpoint Slides</a></strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2009-06-12 13:42:00</wp:post_date>
		<wp:post_date_gmt>2009-06-12 13:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-slides-and-demo-app</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>266</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in MVVM &ndash; Model-View-ViewModel &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 02:54:57</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 02:54:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Demo Application and Slides [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM -- Ball of Mud vs MVVM</title>
		<link>http://houseofbilz.com/archives/2009/06/19/adventures-in-mvvm-ball-of-mud-vs-mvvm/</link>
		<pubDate>Fri, 19 Jun 2009 13:43:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/06/19/adventures-in-mvvm-ball-of-mud-vs-mvvm/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archive/2009/05/22/adventures-in-mvvm-ndash-model-view-viewmodel.aspx">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-Ball-of-Mud-vs-MVVM" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F06%2F19%2Fadventures-in-mvvm----ball-of-mud-vs-mvvm.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f06%2f19%2fadventures-in-mvvm----ball-of-mud-vs-mvvm.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f06%2f19%2fadventures-in-mvvm----ball-of-mud-vs-mvvm.aspx" /></a></p>  <p><a href="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/AdventuresinMVVMBallofMudvsMVVM_13D02/image_2.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px" title="image" border="0" alt="image" align="left" src="http://geekswithblogs.net/images/geekswithblogs_net/HouseOfBilz/WindowsLiveWriter/AdventuresinMVVMBallofMudvsMVVM_13D02/image_thumb.png" width="286" height="267" /></a>A demo that I added to my MVVM talk is one that compares a <a href="http://en.wikipedia.org/wiki/Big_ball_of_mud">“Ball of Mud”</a> application with a componentized <a href="http://en.wikipedia.org/wiki/Model_View_ViewModel_(MVVM)">MVVM</a> application with the exact same set of features.&#160; I do this to contrast a messy, un-testable work of code to a cleanly separated, testable work.&#160; The application I chose to write is a Twitter search application in WPF.&#160; When you download the code, you will see two folders: “BallOfMud” and “MVVM”.&#160; </p>  <p>The “Ball of Mud” app includes the entire app in a XAML file and a code-behind.&#160; The code is incredibly dense… it does a TON of stuff, all in one page of code.&#160; Unfortunately, is practically un-testable.&#160; Even if you could test it, the code hits a live twitter.com.&#160; Not the way you want to write tests.&#160; This way of writing software works well for demos, but it certainly does not scale to real-life applications.</p>  <p>The MVVM example, on the other hand, is significantly broken up into components (4 layers).&#160; There are 2 Views (TwitterSearchView and TweetView) with 2 corresponding ViewModels.&#160; Then, there is a Model layer which is responsible for parsing data that comes from the Service layer into “Tweets”.&#160; There is more code than the “Ball of Mud” example, but the code is testable, and modular.&#160; You can swap out different services or models, if you wish.&#160; In fact, in the Model layer, you will find a “CannedData” class that I use when I don’t have an internet connection when I give my presentation.&#160; It just swaps in.&#160; This example might feel like “overkill”, but as the application grows in scope, this architecture will scale exceptionally well.</p>  <p><a href="http://brianstestsite.googlepages.com/Twitter-BallOfMud-vs-MVVM.zip">Twitter Search “Ball of Mud” vs “MVVM”</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2009-06-19 13:43:00</wp:post_date>
		<wp:post_date_gmt>2009-06-19 13:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-ball-of-mud-vs-mvvm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; MVVM Interview</title>
		<link>http://houseofbilz.com/archives/2009/08/07/adventures-in-mvvm-mvvm-interview/</link>
		<pubDate>Fri, 07 Aug 2009 13:44:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/08/07/adventures-in-mvvm-mvvm-interview/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a></p>  <p>It has been a while since I have posted.&#160; With <a href="http://codestock.org/">CodeStock</a>, <a href="michigangivecamp.org/">GiveCamp</a>, <a href="http://picasaweb.google.com/BrianGenisio/Vacation#">Vacation</a>, overtime at work <a href="http://www.glugnet.org/Events/tabid/1364/ctl/ViewDetail/Mid/3505/ItemID/217/d/20090611/Default.aspx?SkinSrc=%5bL%5dSkins%2fDNNspot-Halite%2fblue">and</a>&#160;<a href="http://www.migang.org/NewsItem/09-06-14/brian_genisio_on_the_mvvm_pattern_in_june.aspx">my</a> <a href="http://aadnd.org/Meetings/2009/July.aspx">other</a> <a href="http://www.dayofdotnet.org/Lansing/2009/">speaking</a> <a href="http://www.wmdotnet.org/Meetings/MeetingInformation/tabid/61/Default.aspx">gigs</a>, I have been very busy.&#160; But things are calming down.&#160; I have several posts I’d like to get out, but for the time being, I thought I would post my <a href="http://www.davidgiard.com/2009/07/15/BrianGenisioOnTheMVVMPattern.aspx">conversation</a> with <a href="http://www.davidgiard.com/2009/07/15/BrianGenisioOnTheMVVMPattern.aspx">David Giard</a> about the MVVM pattern:</p> <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="437" height="347" id="viddler"> <param name="movie" value="http://www.viddler.com/simple_on_site/9acea31a" /> <param name="allowScriptAccess" value="always" /> <param name="allowFullScreen" value="true" /> <embed src="http://www.viddler.com/simple_on_site/9acea31a" width="437" height="347" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" name="viddler"></embed> </object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2009-08-07 13:44:00</wp:post_date>
		<wp:post_date_gmt>2009-08-07 13:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-mvvm-interview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>477</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in MVVM &ndash; Model-View-ViewModel &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-07-08 01:12:15</wp:comment_date>
			<wp:comment_date_gmt>2010-07-08 01:12:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] My MVVM Interview with David Giard [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; Generalized Command Behavior Attachments</title>
		<link>http://houseofbilz.com/archives/2009/08/22/adventures-in-mvvm-generalized-command-behavior-attachments/</link>
		<pubDate>Sat, 22 Aug 2009 01:45:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/08/22/adventures-in-mvvm-generalized-command-behavior-attachments/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a>&#160; <a href="http://dotnetshoutout.com/Adventures-in-MVVM-Generalized-Command-Behavior-Attachments" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2FHouseOfBilz%2Farchive%2F2009%2F08%2F21%2Fadventures-in-mvvm-ndash-generalized-command-behavior-attachments.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2fHouseOfBilz%2farchive%2f2009%2f08%2f21%2fadventures-in-mvvm-ndash-generalized-command-behavior-attachments.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2fHouseOfBilz%2farchive%2f2009%2f08%2f21%2fadventures-in-mvvm-ndash-generalized-command-behavior-attachments.aspx" /></a></p>  <p>There are several examples on the web that describe the <a href="http://houseofbilz.com/archive/2009/05/29/adventures-in-mvvm-ndash-commanding-with-list-boxes.aspx">“Attached Behavior”</a> pattern in Silverlight and WPF.&#160; This pattern works really well for binding commands in the ViewModel to controls in the View.&#160; The problem with this is that for every behavior, there is a LOT of boilerplate code that goes along with it.&#160; Because the DepencencyProperties need to be static, they cannot be easily abstracted into a common class. </p>  <p>If you want to attach a <strong>MouseEnterBehavior </strong>to a control, you need to create two or three static Dependency Properties in the MouseEnter class.&#160; They are MouseEnter.Command, MouseEnter.MouseEnterBehavior and optionally, MouseEnter.CommandParameter.</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:e9ea40db-5abc-43e8-ba7b-91d3e2b0d8e3" class="wlWriterSmartContent">   <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> MouseEnter 
    {
        </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty BehaviorProperty </span><span style="color: #000000">=</span><span style="color: #000000">
            DependencyProperty.RegisterAttached(
                </span><span style="color: #800000">&quot;</span><span style="color: #800000">MouseEnterBehavior</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(MouseEnterBehavior),
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(Control),
                </span><span style="color: #0000ff">null</span><span style="color: #000000">);

        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty CommandProperty </span><span style="color: #000000">=</span><span style="color: #000000">
            DependencyProperty.RegisterAttached(
                </span><span style="color: #800000">&quot;</span><span style="color: #800000">Command</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(ICommand),
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(MouseEnter),
                </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyMetadata(OnSetCommand));

        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty CommandParameterProperty </span><span style="color: #000000">=</span><span style="color: #000000">
            DependencyProperty.RegisterAttached(
                </span><span style="color: #800000">&quot;</span><span style="color: #800000">CommandParameter</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(</span><span style="color: #0000ff">object</span><span style="color: #000000">),
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(MouseEnter),
                </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyMetadata(OnSetParameter))</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>And then the &quot;Change Handlers&quot;</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:816c8ecc-3aec-4f66-b672-6686ef0736e7" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #000000">        </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> OnSetCommand(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs args)
        {
            var target </span><span style="color: #000000">=</span><span style="color: #000000"> dependencyObject </span><span style="color: #0000ff">as</span><span style="color: #000000"> Control;
            </span><span style="color: #0000ff">if</span><span style="color: #000000"> (target </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
                </span><span style="color: #0000ff">return</span><span style="color: #000000">;

            GetOrCreateBehavior(target).Command </span><span style="color: #000000">=</span><span style="color: #000000"> args.NewValue </span><span style="color: #0000ff">as</span><span style="color: #000000"> ICommand;
        }

        </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> OnSetParameter(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs args)
        {
            var target </span><span style="color: #000000">=</span><span style="color: #000000"> dependencyObject </span><span style="color: #0000ff">as</span><span style="color: #000000"> Control;
            </span><span style="color: #0000ff">if</span><span style="color: #000000"> (target </span><span style="color: #000000">!=</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
            {
                GetOrCreateBehavior(target).CommandParameter </span><span style="color: #000000">=</span><span style="color: #000000"> args.NewValue;
            }
        }

        </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> MouseEnterBehavior GetOrCreateBehavior(Control control)
        {
            var behavior </span><span style="color: #000000">=</span><span style="color: #000000"> control.GetValue(BehaviorProperty) </span><span style="color: #0000ff">as</span><span style="color: #000000"> MouseEnterBehavior;
            </span><span style="color: #0000ff">if</span><span style="color: #000000"> (behavior </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
            {
                behavior </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> MouseEnterBehavior(control);
                control.SetValue(BehaviorProperty, behavior);
            }

            </span><span style="color: #0000ff">return</span><span style="color: #000000"> behavior;
        }</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>Since the Dependency Properties are static, Silverlight also requires you to in include Get* and Set* static methods:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:ea927050-1419-4a44-81c5-a493752ebde6" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #000000">        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> SetCommand(Control control, ICommand command) { control.SetValue(CommandProperty, command); }
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> ICommand GetCommand(Control control) { </span><span style="color: #0000ff">return</span><span style="color: #000000"> control.GetValue(CommandProperty) </span><span style="color: #0000ff">as</span><span style="color: #000000"> ICommand; }
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> SetCommandParameter(Control control, </span><span style="color: #0000ff">object</span><span style="color: #000000"> parameter) { control.SetValue(CommandParameterProperty, parameter); }
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">object</span><span style="color: #000000"> GetCommandParameter(Control buttonBase) { </span><span style="color: #0000ff">return</span><span style="color: #000000"> buttonBase.GetValue(CommandParameterProperty); }</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>This is a classic case of reuse via “Copy and Paste”.&#160; The problem is that there are several places in this code where you need to change three different types and many strings.&#160; If you don’t invoke the magic incantation properly, nothing works.&#160; It will compile but it won’t work (or you will get an obscure XAML parse error).</p>

<p>I cringe whenever I have to employ copy/paste reuse.&#160; In the cases where it is absolutely necessary (such as this), I believe the risk can be reduced proportionately to the complexity of the modification after you paste.&#160; This is why I came up with an <strong>Attachment</strong> base class to generalize all of this boilerplate code.&#160; The previous code can be reduced to:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1f59b685-9759-4cd3-be5c-ac0e664c866e" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #000000">    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> MouseEnter : Attachment</span><span style="color: #000000">&lt;</span><span style="color: #000000">Control, MouseEnterBehavior, MouseEnter</span><span style="color: #000000">&gt;</span><span style="color: #000000">
    {
        </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty BehaviorProperty </span><span style="color: #000000">=</span><span style="color: #000000"> Behavior();
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty CommandProperty </span><span style="color: #000000">=</span><span style="color: #000000"> Command(BehaviorProperty);
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty CommandParameterProperty </span><span style="color: #000000">=</span><span style="color: #000000"> Parameter(BehaviorProperty);

        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> SetCommand(Control control, ICommand command) { control.SetValue(CommandProperty, command); }
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> ICommand GetCommand(Control control) { </span><span style="color: #0000ff">return</span><span style="color: #000000"> control.GetValue(CommandProperty) </span><span style="color: #0000ff">as</span><span style="color: #000000"> ICommand; }
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> SetCommandParameter(Control control, </span><span style="color: #0000ff">object</span><span style="color: #000000"> parameter) { control.SetValue(CommandParameterProperty, parameter); }
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">object</span><span style="color: #000000"> GetCommandParameter(Control buttonBase) { </span><span style="color: #0000ff">return</span><span style="color: #000000"> buttonBase.GetValue(CommandParameterProperty); }
    }</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>The only modifications to this copied code exist on the first line. </p>

<p>What is the class name?&#160; <strong>MouseEnter</strong> (2 places)</p>

<p>What type of control can the behavior attach to? <strong>Control</strong></p>

<p>What type of behavior do you want to attach? <strong>MouseEnterBehavior</strong></p>

<p>In addition to the decreased configuration complexity, the actual code that needs to be copied goes from 58 lines of boilerplate code to 11 lines of boilerplate code.&#160; This is a big win, in my opinion.</p>

<p>In this code, I am using the <strong>CommandBehaviorBase</strong> class from the <a href="http://compositewpf.codeplex.com/">Prism</a> framework.&#160; It is part of the generic constraints.&#160; If you use something else for your behaviors, replace it as you see fit.&#160; Your own base class for command behaviors would slip in nicely, I am sure.</p>

<p>Here is the <strong>Attachment</strong> base class:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:90bbf315-3e80-4acf-aaf4-95a5664e59d3" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #000000">    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> Attachment</span><span style="color: #000000">&lt;</span><span style="color: #000000">TargetT, BehaviorT, AttachmentT</span><span style="color: #000000">&gt;</span><span style="color: #000000">
        </span><span style="color: #0000ff">where</span><span style="color: #000000"> TargetT : Control
        </span><span style="color: #0000ff">where</span><span style="color: #000000"> BehaviorT : CommandBehaviorBase</span><span style="color: #000000">&lt;</span><span style="color: #000000">TargetT</span><span style="color: #000000">&gt;</span><span style="color: #000000">
    {
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> DependencyProperty Behavior()
        {
            </span><span style="color: #0000ff">return</span><span style="color: #000000"> DependencyProperty.RegisterAttached(
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(BehaviorT).Name,
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(BehaviorT),
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(TargetT),
                </span><span style="color: #0000ff">null</span><span style="color: #000000">);
        }

        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> DependencyProperty Command(DependencyProperty behaviorProperty)
        {
            </span><span style="color: #0000ff">return</span><span style="color: #000000"> DependencyProperty.RegisterAttached(
                </span><span style="color: #800000">&quot;</span><span style="color: #800000">Command</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000"> (ICommand),
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(AttachmentT),
                </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyMetadata((target, args) </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> OnSetCommandCallback(target, args, behaviorProperty)));
        }

        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> DependencyProperty Parameter(DependencyProperty behaviorProperty)
        {
            </span><span style="color: #0000ff">return</span><span style="color: #000000"> DependencyProperty.RegisterAttached(
                </span><span style="color: #800000">&quot;</span><span style="color: #800000">CommandParameter</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000"> (</span><span style="color: #0000ff">object</span><span style="color: #000000">),
                </span><span style="color: #0000ff">typeof</span><span style="color: #000000"> (AttachmentT),
                </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyMetadata((target, args) </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> OnSetParameterCallback(target, args, behaviorProperty)));
        }

        </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> OnSetCommandCallback(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e, DependencyProperty behaviorProperty)
        {
            var target </span><span style="color: #000000">=</span><span style="color: #000000"> dependencyObject </span><span style="color: #0000ff">as</span><span style="color: #000000"> TargetT;
            </span><span style="color: #0000ff">if</span><span style="color: #000000"> (target </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
                </span><span style="color: #0000ff">return</span><span style="color: #000000">;

            GetOrCreateBehavior(target, behaviorProperty).Command </span><span style="color: #000000">=</span><span style="color: #000000"> e.NewValue </span><span style="color: #0000ff">as</span><span style="color: #000000"> ICommand;
        }

        </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> OnSetParameterCallback(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e, DependencyProperty behaviorProperty)
        {
            var target </span><span style="color: #000000">=</span><span style="color: #000000"> dependencyObject </span><span style="color: #0000ff">as</span><span style="color: #000000"> TargetT;
            </span><span style="color: #0000ff">if</span><span style="color: #000000"> (target </span><span style="color: #000000">!=</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
            {
                GetOrCreateBehavior(target, behaviorProperty).CommandParameter </span><span style="color: #000000">=</span><span style="color: #000000"> e.NewValue;
            }
        }

        </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> BehaviorT GetOrCreateBehavior(Control control, DependencyProperty behaviorProperty)
        {
            var behavior </span><span style="color: #000000">=</span><span style="color: #000000"> control.GetValue(behaviorProperty) </span><span style="color: #0000ff">as</span><span style="color: #000000"> BehaviorT;
            </span><span style="color: #0000ff">if</span><span style="color: #000000"> (behavior </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
            {
                behavior </span><span style="color: #000000">=</span><span style="color: #000000"> Activator.CreateInstance(</span><span style="color: #0000ff">typeof</span><span style="color: #000000">(BehaviorT), control) </span><span style="color: #0000ff">as</span><span style="color: #000000"> BehaviorT;
                control.SetValue(behaviorProperty, behavior);
            }

            </span><span style="color: #0000ff">return</span><span style="color: #000000"> behavior;
        }
    }</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>And finally, just to complete the example, here is what the <strong>MouseEnterBehavior</strong> looks like:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:8851b117-15d5-4c8a-972f-8100b278b52f" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #000000">    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> MouseEnterBehavior : CommandBehaviorBase</span><span style="color: #000000">&lt;</span><span style="color: #000000">Control</span><span style="color: #000000">&gt;</span><span style="color: #000000">
    {
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> MouseEnterBehavior(Control selectableObject)
            : </span><span style="color: #0000ff">base</span><span style="color: #000000">(selectableObject)
        {
            selectableObject.MouseEnter </span><span style="color: #000000">+=</span><span style="color: #000000"> (sender, args) </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> ExecuteCommand();
        }
    }</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>And to use it in your XAML, it would look like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:8f041e8a-6219-4e9f-a156-fa06965082e7" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">Button </span><span style="color: #ff0000">Behaviors:MouseEnter.Command</span><span style="color: #0000ff">=&quot;</span><span style="color: #808000">{Binding MouseEnter}</span><span style="color: #0000ff">&quot;</span><span style="color: #ff0000"> Behaviors:MouseEnter.CommandParameter</span><span style="color: #0000ff">=&quot;Optional Paremeter&quot;</span><span style="color: #0000ff">/&gt;</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2009-08-22 01:45:00</wp:post_date>
		<wp:post_date_gmt>2009-08-22 01:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-generalized-command-behavior-attachments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>983</wp:comment_id>
			<wp:comment_author><![CDATA[Eliyahu Weg]]></wp:comment_author>
			<wp:comment_author_email>wegged@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wegged.com</wp:comment_author_url>
			<wp:comment_author_IP>69.74.161.162</wp:comment_author_IP>
			<wp:comment_date>2010-09-01 14:51:01</wp:comment_date>
			<wp:comment_date_gmt>2010-09-01 14:51:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good read useful information. 

Thank you very much,


Quick question how would I control what properties/styles CanExecute of the command will change]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1186</wp:comment_id>
			<wp:comment_author><![CDATA[Martin Reich]]></wp:comment_author>
			<wp:comment_author_email>hreich@highaltsys.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.188.228.65</wp:comment_author_IP>
			<wp:comment_date>2010-09-29 03:54:04</wp:comment_date>
			<wp:comment_date_gmt>2010-09-29 03:54:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian:

Thanks for the great post.  Here is a snippet that automates the boilerplate code for the class that derives from 'Attachment'.  I have tested it out and it works just fine.

Martin Reich



  
    
      
        Expansion
      
      slabehavior
      mreich
      Creates an SL attached behvior derived from 'Attachment&lt;&gt;'
      
      
      slabehavior
    
    
      
        
          AttachedBehaviorName
          The behavior to attach to the object
          AttachedBehaviorName
          
          
        
        
          TargetObject
          The type of control that will use this attached behavior
          TargetObject
          
          
        
        
          AttachmentClassName
          AttachmentClass	The name of the class that derives from Attachment&lt;TargetObject&gt;	AttachmentClass	Literal	N/A		True
          AttachmentClassName
          
          
        
      
      <Code>&lt;![CDATA[    #region $AttachmentClassName$
	
	public class $AttachmentClassName$ : Attachment
    {
        private static readonly DependencyProperty BehaviorProperty = Behavior();
        public static readonly DependencyProperty CommandProperty = Command(BehaviorProperty);
        public static readonly DependencyProperty CommandParameterProperty = Parameter(BehaviorProperty);

        public static void SetCommand($TargetObject$ control, ICommand command) { control.SetValue(CommandProperty, command); }
        public static ICommand GetCommand($TargetObject$ control) { return control.GetValue(CommandProperty) as ICommand; }
        public static void SetCommandParameter($TargetObject$ control, object parameter) { control.SetValue(CommandParameterProperty, parameter); }
        public static object GetCommandParameter($TargetObject$ buttonBase) { return buttonBase.GetValue(CommandParameterProperty); }
    }

	#endregion]]&gt;</Code>
    
  
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29345</wp:comment_id>
			<wp:comment_author><![CDATA[heiman]]></wp:comment_author>
			<wp:comment_author_email>FoslerWickwire3095@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://thewomanleader.org/index.php/magazine-all/k2-category/mothering/item/122-10-tips-for-working-mum</wp:comment_author_url>
			<wp:comment_author_IP>23.95.22.22</wp:comment_author_IP>
			<wp:comment_date>2014-09-23 03:09:12</wp:comment_date>
			<wp:comment_date_gmt>2014-09-23 03:09:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I favor the particular techniques you give on your own articles or blog posts. Let me save your web site in addition to have a look at again here on a regular basis. I'm rather certain I am knowledgeable a good amount of new stuff suitable below! All the best . for the!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7758</wp:comment_id>
			<wp:comment_author><![CDATA[Farzad Jalali]]></wp:comment_author>
			<wp:comment_author_email>Dev@Jalali.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.118.25.230</wp:comment_author_IP>
			<wp:comment_date>2011-05-16 08:03:08</wp:comment_date>
			<wp:comment_date_gmt>2011-05-16 08:03:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,

Thanks, that's really great article.
I'm interested about behaviors and I don't know how to start. 
Any idea about a great website or a specific article with some hands-on please !

Thanks,
Farzad]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49162</wp:comment_id>
			<wp:comment_author><![CDATA[touché]]></wp:comment_author>
			<wp:comment_author_email>humbertomarra@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.multerexxixessaliast.com</wp:comment_author_url>
			<wp:comment_author_IP>58.11.67.213</wp:comment_author_IP>
			<wp:comment_date>2015-06-03 06:16:08</wp:comment_date>
			<wp:comment_date_gmt>2015-06-03 06:16:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Appreciation to my father who informed me concerning this weblog, this webpage 
is really amazing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; Binding Commands to ANY Event</title>
		<link>http://houseofbilz.com/archives/2009/08/27/adventures-in-mvvm-binding-commands-to-any-event/</link>
		<pubDate>Thu, 27 Aug 2009 13:48:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/08/27/adventures-in-mvvm-binding-commands-to-any-event/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-Binding-Commands-to-ANY-Event" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fgeekswithblogs.net%2FHouseOfBilz%2Farchive%2F2009%2F08%2F27%2Fadventures-in-mvvm-ndash-binding-commands-to-any-event.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f08%2f27%2fadventures-in-mvvm-ndash-binding-commands-to-any-event.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f08%2f27%2fadventures-in-mvvm-ndash-binding-commands-to-any-event.aspx" /></a></p>  <p>One of the biggest points of friction for me when implementing the MVVM pattern happens when I need to bind commands to events.&#160; When using <a href="http://compositewpf.codeplex.com/">Prism</a>, I get the Button.Click command binding out of the box, but every other event needs to be wired up individually.&#160; Doing this requires a LOT of boilerplate code that is very easy to get wrong.&#160; In my <a href="http://houseofbilz.com/archive/2009/08/21/adventures-in-mvvm-ndash-generalized-command-behavior-attachments.aspx">last post, I published some code to alleviate that pain</a>.&#160; Still, it requires you to write a new behavior and attachment for every event that you want to bind an event to.</p>  <p>For a while now, I have toyed with the idea of just binding commands to events directly.&#160; I ran into a lot of bumps in the road.&#160; For instance, every event handler has a different event argument type.&#160; This requires all of the handlers to be dynamic.&#160; I also couldn’t create an inline command binding – I will surely want to bind more than one event per control – so I need to create a collection of bindings.&#160; Creating arrays of structures created its own troubles – binding only works with FrameworkElements within the visual tree.&#160; This required me to write my own crude binding within my generic behavior.</p>  <p>What follows is very loosely based off of the <a href="http://www.codeproject.com/KB/WPF/Cinch.aspx">Chinch MVVM framework</a>.&#160; I tested this code in Silverlight and WPF and it works really well!</p>  <p>Assume I have a ViewModel that looks like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1f9a3ca3-2468-4f21-a990-2c6f90ac7779" class="wlWriterSmartContent">   <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> MainPageViewModel : INotifyPropertyChanged
{
    ...
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> ICommand MouseLeaveCommand { </span><span style="color: #0000ff">get</span><span style="color: #000000">; </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">set</span><span style="color: #000000">; }
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> ICommand MouseEnterCommand { </span><span style="color: #0000ff">get</span><span style="color: #000000">; </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">set</span><span style="color: #000000">; }
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> ICommand ClickCommand { </span><span style="color: #0000ff">get</span><span style="color: #000000">; </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">set</span><span style="color: #000000">; }
    ...
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>I can then bind the commands to events on a control (Button, for instance):</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:ca0c3822-5216-46ce-ae56-ae34648c9b51" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">Button </span><span style="color: #ff0000">Content</span><span style="color: #0000ff">=&quot;Click Me&quot;</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
    </span><span style="color: #0000ff">&lt;</span><span style="color: #800000">Behaviors:Events.Commands</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
        </span><span style="color: #0000ff">&lt;</span><span style="color: #800000">Behaviors:EventCommandCollection</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
            </span><span style="color: #0000ff">&lt;</span><span style="color: #800000">Behaviors:EventCommand </span><span style="color: #ff0000">CommandName</span><span style="color: #0000ff">=&quot;MouseEnterCommand&quot;</span><span style="color: #ff0000"> EventName</span><span style="color: #0000ff">=&quot;MouseEnter&quot;</span><span style="color: #ff0000"> </span><span style="color: #0000ff">/&gt;</span><span style="color: #000000">
            </span><span style="color: #0000ff">&lt;</span><span style="color: #800000">Behaviors:EventCommand </span><span style="color: #ff0000">CommandName</span><span style="color: #0000ff">=&quot;MouseLeaveCommand&quot;</span><span style="color: #ff0000"> EventName</span><span style="color: #0000ff">=&quot;MouseLeave&quot;</span><span style="color: #ff0000"> </span><span style="color: #0000ff">/&gt;</span><span style="color: #000000">
            </span><span style="color: #0000ff">&lt;</span><span style="color: #800000">Behaviors:EventCommand </span><span style="color: #ff0000">CommandName</span><span style="color: #0000ff">=&quot;ClickCommand&quot;</span><span style="color: #ff0000"> EventName</span><span style="color: #0000ff">=&quot;Click&quot;</span><span style="color: #ff0000"> </span><span style="color: #0000ff">/&gt;</span><span style="color: #000000">
        </span><span style="color: #0000ff">&lt;/</span><span style="color: #800000">Behaviors:EventCommandCollection</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
    </span><span style="color: #0000ff">&lt;/</span><span style="color: #800000">Behaviors:Events.Commands</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
</span><span style="color: #0000ff">&lt;/</span><span style="color: #800000">Button</span><span style="color: #0000ff">&gt;</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>I no longer need to write any extra code whenever I want to attach commands to my events!&#160; There are a few caveats to this code:</p>

<ol>
  <li>The XAML requires the EventCommandCollection to be declared in the XAML.&#160; I struggled to figure out how to eliminate this but gave up.&#160; Someone smarter than me might be able to tell me what I am doing wrong. </li>

  <li>This code does not consider command properties.&#160; Every command assumes a null parameter.&#160; If you need parameters (like data context), then you’ll have to do something differently (either use the old-school mechanism or extend this code to handle some special event types). </li>

  <li>You don’t bind directly to the command.&#160; Instead, you declare the name of the command (Notice CommandName is not bound).&#160; The behavior binds for you using a primitive mechanism. </li>
</ol>

<p>Here is the command behavior that does all the work:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:94c70010-05da-4e1c-83c5-6e54a7aae5dd" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> Events
{
    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty EventBehaviorsProperty </span><span style="color: #000000">=</span><span style="color: #000000">
        DependencyProperty.RegisterAttached(
        </span><span style="color: #800000">&quot;</span><span style="color: #800000">EventBehaviors</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
        </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(EventBehaviorCollection),
        </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(Control),
        </span><span style="color: #0000ff">null</span><span style="color: #000000">);

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty InternalDataContextProperty </span><span style="color: #000000">=</span><span style="color: #000000">
        DependencyProperty.RegisterAttached(
        </span><span style="color: #800000">&quot;</span><span style="color: #800000">InternalDataContext</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
        </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(Object),
        </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(Control),
        </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyMetadata(</span><span style="color: #0000ff">null</span><span style="color: #000000">, DataContextChanged));

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> DataContextChanged(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)
    {
        var target </span><span style="color: #000000">=</span><span style="color: #000000"> dependencyObject </span><span style="color: #0000ff">as</span><span style="color: #000000"> Control;
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (target </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        </span><span style="color: #0000ff">foreach</span><span style="color: #000000"> (var behavior </span><span style="color: #0000ff">in</span><span style="color: #000000"> GetOrCreateBehavior(target))
            behavior.Bind();
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">readonly</span><span style="color: #000000"> DependencyProperty CommandsProperty </span><span style="color: #000000">=</span><span style="color: #000000">
        DependencyProperty.RegisterAttached(
        </span><span style="color: #800000">&quot;</span><span style="color: #800000">Commands</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
        </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(EventCommandCollection),
        </span><span style="color: #0000ff">typeof</span><span style="color: #000000">(Events),
        </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyMetadata(</span><span style="color: #0000ff">null</span><span style="color: #000000">, CommandsChanged));

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> EventCommandCollection GetCommands(DependencyObject dependencyObject)
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> dependencyObject.GetValue(CommandsProperty) </span><span style="color: #0000ff">as</span><span style="color: #000000"> EventCommandCollection;
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> SetCommands(DependencyObject dependencyObject, EventCommandCollection eventCommands)
    {
        dependencyObject.SetValue(CommandsProperty, eventCommands);
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> CommandsChanged(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e)
    {
        var target </span><span style="color: #000000">=</span><span style="color: #000000"> dependencyObject </span><span style="color: #0000ff">as</span><span style="color: #000000"> Control;
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (target </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        var behaviors </span><span style="color: #000000">=</span><span style="color: #000000"> GetOrCreateBehavior(target);
        </span><span style="color: #0000ff">foreach</span><span style="color: #000000"> (var eventCommand </span><span style="color: #0000ff">in</span><span style="color: #000000"> e.NewValue </span><span style="color: #0000ff">as</span><span style="color: #000000"> EventCommandCollection)
        {
            var behavior </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> EventBehavior(target);
            behavior.Bind(eventCommand);
            behaviors.Add(behavior);
        }

    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">static</span><span style="color: #000000"> EventBehaviorCollection GetOrCreateBehavior(FrameworkElement target)
    {
        var behavior </span><span style="color: #000000">=</span><span style="color: #000000"> target.GetValue(EventBehaviorsProperty) </span><span style="color: #0000ff">as</span><span style="color: #000000"> EventBehaviorCollection;
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (behavior </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
        {
            behavior </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> EventBehaviorCollection();
            target.SetValue(EventBehaviorsProperty, behavior);
            target.SetBinding(InternalDataContextProperty, </span><span style="color: #0000ff">new</span><span style="color: #000000"> Binding());
        }

        </span><span style="color: #0000ff">return</span><span style="color: #000000"> behavior;
    }
}

</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> EventCommand
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> CommandName { </span><span style="color: #0000ff">get</span><span style="color: #000000">; </span><span style="color: #0000ff">set</span><span style="color: #000000">; }
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> EventName { </span><span style="color: #0000ff">get</span><span style="color: #000000">; </span><span style="color: #0000ff">set</span><span style="color: #000000">; }
}

</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> EventCommandCollection : List</span><span style="color: #000000">&lt;</span><span style="color: #000000">EventCommand</span><span style="color: #000000">&gt;</span><span style="color: #000000">
{
}

</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> EventBehavior : CommandBehaviorBase</span><span style="color: #000000">&lt;</span><span style="color: #000000">Control</span><span style="color: #000000">&gt;</span><span style="color: #000000">
{
    </span><span style="color: #0000ff">private</span><span style="color: #000000"> EventCommand _bindingInfo;

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> EventBehavior(Control control)
        : </span><span style="color: #0000ff">base</span><span style="color: #000000">(control)
    {

    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Bind(EventCommand bindingInfo)
    {
        ValidateBindingInfo(bindingInfo);

        _bindingInfo </span><span style="color: #000000">=</span><span style="color: #000000"> bindingInfo;

        Bind();
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> ValidateBindingInfo(EventCommand bindingInfo)
    {
        </span><span style="color: #0000ff">if</span><span style="color: #000000">(bindingInfo </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">throw</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> ArgumentException(</span><span style="color: #800000">&quot;</span><span style="color: #800000">bindingInfo</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (</span><span style="color: #0000ff">string</span><span style="color: #000000">.IsNullOrEmpty(bindingInfo.CommandName)) </span><span style="color: #0000ff">throw</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> ArgumentException(</span><span style="color: #800000">&quot;</span><span style="color: #800000">bindingInfo.CommandName</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (</span><span style="color: #0000ff">string</span><span style="color: #000000">.IsNullOrEmpty(bindingInfo.EventName)) </span><span style="color: #0000ff">throw</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> ArgumentException(</span><span style="color: #800000">&quot;</span><span style="color: #800000">bindingInfo.EventName</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Bind()
    {
        ValidateBindingInfo(_bindingInfo);
        HookPropertyChanged();
        HookEvent();
        SetCommand();
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> HookPropertyChanged()
    {
        var dataContext </span><span style="color: #000000">=</span><span style="color: #000000"> TargetObject.DataContext </span><span style="color: #0000ff">as</span><span style="color: #000000"> INotifyPropertyChanged;
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (dataContext </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        dataContext.PropertyChanged </span><span style="color: #000000">-=</span><span style="color: #000000"> DataContextPropertyChanged;
        dataContext.PropertyChanged </span><span style="color: #000000">+=</span><span style="color: #000000"> DataContextPropertyChanged;
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> DataContextPropertyChanged(</span><span style="color: #0000ff">object</span><span style="color: #000000"> sender, PropertyChangedEventArgs e)
    {
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (e.PropertyName </span><span style="color: #000000">==</span><span style="color: #000000"> _bindingInfo.CommandName)
            SetCommand();
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> SetCommand()
    {
        var dataContext </span><span style="color: #000000">=</span><span style="color: #000000"> TargetObject.DataContext;
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (dataContext </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        var propertyInfo </span><span style="color: #000000">=</span><span style="color: #000000"> dataContext.GetType().GetProperty(_bindingInfo.CommandName);
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (propertyInfo </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">throw</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> ArgumentException(</span><span style="color: #800000">&quot;</span><span style="color: #800000">commandName</span><span style="color: #800000">&quot;</span><span style="color: #000000">);

        Command </span><span style="color: #000000">=</span><span style="color: #000000"> propertyInfo.GetValue(dataContext, </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">as</span><span style="color: #000000"> ICommand;
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> HookEvent()
    {
        var eventInfo </span><span style="color: #000000">=</span><span style="color: #000000"> TargetObject.GetType().GetEvent(
            _bindingInfo.EventName, BindingFlags.Public </span><span style="color: #000000">|</span><span style="color: #000000"> BindingFlags.Instance);
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (eventInfo </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">throw</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> ArgumentException(</span><span style="color: #800000">&quot;</span><span style="color: #800000">eventName</span><span style="color: #800000">&quot;</span><span style="color: #000000">);

        eventInfo.RemoveEventHandler(TargetObject, GetEventMethod(eventInfo));
        eventInfo.AddEventHandler(TargetObject, GetEventMethod(eventInfo));
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> Delegate _method;
    </span><span style="color: #0000ff">private</span><span style="color: #000000"> Delegate GetEventMethod(EventInfo eventInfo)
    {
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (eventInfo </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">throw</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> ArgumentNullException(</span><span style="color: #800000">&quot;</span><span style="color: #800000">eventInfo</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (eventInfo.EventHandlerType </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">) </span><span style="color: #0000ff">throw</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> ArgumentException(</span><span style="color: #800000">&quot;</span><span style="color: #800000">EventHandlerType is null</span><span style="color: #800000">&quot;</span><span style="color: #000000">);

        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (_method </span><span style="color: #000000">==</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
        {
            _method </span><span style="color: #000000">=</span><span style="color: #000000"> Delegate.CreateDelegate(
                eventInfo.EventHandlerType, </span><span style="color: #0000ff">this</span><span style="color: #000000">,
                GetType().GetMethod(</span><span style="color: #800000">&quot;</span><span style="color: #800000">OnEventRaised</span><span style="color: #800000">&quot;</span><span style="color: #000000">,
                BindingFlags.NonPublic </span><span style="color: #000000">|</span><span style="color: #000000"> BindingFlags.Instance));
        }

        </span><span style="color: #0000ff">return</span><span style="color: #000000"> _method;
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> OnEventRaised(</span><span style="color: #0000ff">object</span><span style="color: #000000"> sender, EventArgs e)
    {
        ExecuteCommand();
    }
}

</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> EventBehaviorCollection : List</span><span style="color: #000000">&lt;</span><span style="color: #000000">EventBehavior</span><span style="color: #000000">&gt;</span><span style="color: #000000">
{ }</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2009-08-27 13:48:00</wp:post_date>
		<wp:post_date_gmt>2009-08-27 13:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-binding-commands-to-any-event</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>27629</wp:comment_id>
			<wp:comment_author><![CDATA[Victoria]]></wp:comment_author>
			<wp:comment_author_email>renatogerlach@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Cooper.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>183.221.48.207</wp:comment_author_IP>
			<wp:comment_date>2014-07-11 19:30:35</wp:comment_date>
			<wp:comment_date_gmt>2014-07-11 19:30:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I see a lot of interesting content on your page.
You have to spend a lot of time writing, i know 
how to save you a lot of work, there is a tool that creates unique, 
google friendly articles in couple of minutes, just type in google  - k2 unlimited content]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7923</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.92.236</wp:comment_author_IP>
			<wp:comment_date>2011-06-01 10:23:04</wp:comment_date>
			<wp:comment_date_gmt>2011-06-01 10:23:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What isn't working?  Compiler error?  Failure to execute commands on events?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7915</wp:comment_id>
			<wp:comment_author><![CDATA[Ahmed Adel]]></wp:comment_author>
			<wp:comment_author_email>WebWave@Live.Com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.234.170.52</wp:comment_author_IP>
			<wp:comment_date>2011-06-01 02:26:01</wp:comment_date>
			<wp:comment_date_gmt>2011-06-01 02:26:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not Working :(
tried it many timed &amp; also i got command behavior class from prism last version]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10151</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.89.158</wp:comment_author_IP>
			<wp:comment_date>2011-10-19 02:18:19</wp:comment_date>
			<wp:comment_date_gmt>2011-10-19 02:18:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Argh... I don't know.  It has been so long since I have done this that things may have changed.  There are several other more up-to-date frameworks that support this type of behavior, though.  I think MVVM Lite supports it.  I am also pretty sure Caliburn supports it.  Sorry I can't help any further.  I might try to look at it in a few days.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10072</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10072</wp:comment_id>
			<wp:comment_author><![CDATA[P]]></wp:comment_author>
			<wp:comment_author_email>prasannagdr@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.72.158.42</wp:comment_author_IP>
			<wp:comment_date>2011-10-17 11:41:08</wp:comment_date>
			<wp:comment_date_gmt>2011-10-17 11:41:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It doesn't work for me either. I am trying to hook up events on a Ink Presenter to my view model's commands.First under the DataContextChanged the DependencyObject cannot be cast to a control. So I tried to set this behaviour for my User Control (the Ink Presenter is a part of my user control). Under SetCommand,HookPropertyChanged functions the TargetObject's DataContext property is null (though I have set the user control's data context to my view model).

Appreciate if you can help me out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Introducing DynamicWrapper</title>
		<link>http://houseofbilz.com/archives/2009/09/18/introducing-dynamicwrapper/</link>
		<pubDate>Fri, 18 Sep 2009 13:50:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/09/18/introducing-dynamicwrapper/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://dotnetshoutout.com/Introducing-DynamicWrapper" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F09%2F18%2Fintroducing-dynamicwrapper.aspx"></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f09%2f18%2fintroducing-dynamicwrapper.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f09%2f18%2fintroducing-dynamicwrapper.aspx"></a></p> <p><a href="http://dynamicwrapper.codeplex.com/">DynamicWrapper project on CodePlex</a></p> <p><strong><em>Edit: DynamicWrapper does not work in SIlverlight as I first though.&nbsp; My unit tests passed, but in runtime I get an exception when I try to use the class.&nbsp; I will be looking at some alternatives.</em></strong></p> <p>Over the past few weeks, I have been working on a utility that I have wanted for years: something that allows me to apply an interface to an object that matches the contract but doesn’t actually implement the interface.&nbsp; In other words, I’ve wanted duck typing in C#.&nbsp; The code and project can be found on <a href="http://www.codeplex.com/">CodePlex</a>.&nbsp; It is set up so you simply copy one file into your solution and use the extension methods.</p> <p>Why did I want this?&nbsp; Because I write a lot of unit tests and I develop in .Net with C#.&nbsp; Because I write way too many wrapper classes to make my code testable.&nbsp; For example, lets say that I have a class that I want to test and it acts upon a framework object:</p> <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:68528c3e-ac9e-4d8f-994f-b84c31cb2d3d" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">sealed</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> FrameworkClass
{
    </span><span style="color: #0000FF;">internal</span><span style="color: #000000;"> FrameworkClass() {}
    
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> X {</span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">set</span><span style="color: #000000;">;}
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Y {</span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">set</span><span style="color: #000000;">;}
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Calculate() { </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> DoSomeStuff(); }
}

</span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> MyClass
{
    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DoSomethingWithFrameworkData(FrameworkClass value)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Do Something</span><span style="color: #008000;">
</span><span style="color: #000000;">    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div><pre class="c-sharp" name="code"></pre>
<p>The problem is that I can’t test <strong>MyClass</strong> because it is dependent upon <strong>FrameworkClass</strong> which I can never construct myself (it is sealed with an internal constructor and no interface).&nbsp; The solution for this is simple but tedious – create a wrapper class that implements an interface and proxy through the wrapper class to the real object.&nbsp; This approach works, but I can say this: <strong><em>I am sick of writing wrapper classes!</em></strong></p>
<p>This is why I created this DynamicWrapper utility.&nbsp; It exposes two extension methods: realObject.As&lt;Interface&gt;() and wrapper.AsReal&lt;ConcreteClass&gt;().&nbsp; It uses Reflection to emit a dynamically generated wrapper class that implements the interface, and wraps your object for you.&nbsp; It sounds complicated, but it is extremely simple to use.</p>
<p>Here is an example. Start by creating an interface that looks like the FrameworkClass:</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:8bd836e1-3e63-4f29-8993-54b779d7971b" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">interface</span><span style="color: #000000;"> ICalculatable
{
    </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> X {</span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">set</span><span style="color: #000000;">;}
    </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Y {</span><span style="color: #0000FF;">get</span><span style="color: #000000;">; </span><span style="color: #0000FF;">set</span><span style="color: #000000;">;}
    </span><span style="color: #0000FF;">int</span><span style="color: #000000;"> Calculate();
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>Modify your class to depend on ICalculatable:</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1b0fecea-51fb-43ce-ae97-c5ff9b266994" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DoSomethingWIthFrameworkData(ICalculatable value) {}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>Now, when you pass the framework class into the MyClass, you can wrap it with the interface:</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:7863e811-abd6-4379-82ae-5dbcdd71ff96" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">myObject.DoSomethingWithFrameworkData(frameworkObject.As</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">ICalculatable</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">());</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>If you need the framework object to pass back to the framework, it is really simple:</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1f34493e-1fc7-472c-a06d-045b54e30ab4" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">wrapper.AsReal</span><span style="color: #000000;">&lt;</span><span style="color: #000000;">FrameworkClass</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">()</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<p>That’s all there is to it!&nbsp; The utility is very simple.&nbsp; It just gets me out of the business of writing (and maintaining) wrapper classes. I am now free to get back to real development.</p>
<p><em>*On a slightly related note, I will be focusing my learning efforts towards Ruby in the coming months.*</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2009-09-18 13:50:00</wp:post_date>
		<wp:post_date_gmt>2009-09-18 13:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-dynamicwrapper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>32962</wp:comment_id>
			<wp:comment_author><![CDATA[Umamaheswara Reddy]]></wp:comment_author>
			<wp:comment_author_email>umamaheswar.cs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.244.54.32</wp:comment_author_IP>
			<wp:comment_date>2014-12-04 13:41:10</wp:comment_date>
			<wp:comment_date_gmt>2014-12-04 13:41:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brain,

First of all thanks for your wonderful dynamic wrapper and it works perfectly with the properties.
I have one issue with lists that it is not able to creates interface and throws unable to find method in real object.
Here is my class and interface.
Public class ContactListDTO
{
public List ContactAddressess{get;set;}
}

Interface - 
public interface IContactListDTO
{
List ContactAddresses{get;set;}
}

Error - Unable to find method set_ContactAddresses in ContactListDTO

Could you please help me in fixing this issue]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; A Rails-Inspired ViewModel</title>
		<link>http://houseofbilz.com/archives/2009/10/20/adventures-in-mvvm-a-rails-inspired-viewmodel/</link>
		<pubDate>Tue, 20 Oct 2009 13:52:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/10/20/adventures-in-mvvm-a-rails-inspired-viewmodel/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-A-Rails-Inspired-ViewModel" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fgeekswithblogs.net%2FHouseOfBilz%2Farchive%2F2009%2F10%2F20%2Fadventures-in-mvvm-ndash-a-rails-inspired-viewmodel.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f10%2f20%2fadventures-in-mvvm-ndash-a-rails-inspired-viewmodel.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fgeekswithblogs.net%2fHouseOfBilz%2farchive%2f2009%2f10%2f20%2fadventures-in-mvvm-ndash-a-rails-inspired-viewmodel.aspx" /></a></p>  <p>I have been taking a few weeks off from my personal studies/experiments in the .Net space to learn more about Ruby and Ruby on Rails (RoR).&#160; I have two main goals for this study:</p>  <ol>   <li>Get to know another platform as an option for future development </li>    <li>Examine how I can incorporate different concepts into my existing framework </li> </ol>  <p><em>What follows is intended to document my experimentation with the second bullet:&#160; How might we design a ViewModel if we were in Rails?&#160; My thoughts on this are still forming, and I am still a novice in the RoR arena, so cut me some slack :).</em></p>  <p>I am pretty vocal about my thoughts on the MVVM <em>pattern</em>.&#160; I really like the pattern a lot and I think it solves a lot of problems that I encounter on a daily basis.&#160; Unfortunately, the implementation of the pattern – ViewModels specifically – often get overly complicated.&#160; This is why there are about a dozen major players in this arena.&#160; The plumbing necessary to create a good ViewModel is tedious and error prone.&#160; A good set of abstractions and tools make the job much easier.</p>  <p>The RoR approach to application development uses a lot of conventions to allow the developer to be as expressive as possible without introducing too much plumbing.&#160; The framework facilitates DRY (Don’t Repeat Yourself) so your controllers declare what they do and the magic under the hood plumbs it all together for you.&#160; How can we translate these ideas to a better implementation of the MVVM pattern?&#160; In this article, I will focus on the ViewModel portion of the MVVM pattern.</p>  <h3></h3>  <h3>A classic ViewModel implementation</h3>  <p>This view is simple.&#160; There is a text box bound to the <strong>Text</strong> property in the ViewModel and a button bound to the <strong>MakeLowercase</strong> command (property) in the ViewModel.&#160; The button is enabled/disabled based on the length of the <strong>Text</strong> property and clicking on the button will cause the text to go to lowercase.</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:80acc5b9-9793-4bbd-9ced-93a4738c0d06" class="wlWriterSmartContent">   <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">TextBox </span><span style="color: #ff0000">Text</span><span style="color: #0000ff">=&quot;</span><span style="color: #808000">{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}</span><span style="color: #0000ff">&quot;</span><span style="color: #ff0000"> Grid.Column</span><span style="color: #0000ff">=&quot;0&quot;</span><span style="color: #ff0000"> </span><span style="color: #0000ff">/&gt;</span><span style="color: #000000">
</span><span style="color: #0000ff">&lt;</span><span style="color: #800000">Button </span><span style="color: #ff0000">Content</span><span style="color: #0000ff">=&quot;Make Lower&quot;</span><span style="color: #ff0000"> Commands:Click.Command</span><span style="color: #0000ff">=&quot;</span><span style="color: #808000">{Binding MakeLowercase}</span><span style="color: #0000ff">&quot;</span><span style="color: #ff0000"> Grid.Column</span><span style="color: #0000ff">=&quot;1&quot;</span><span style="color: #ff0000"> </span><span style="color: #0000ff">/&gt;</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>Next is the ViewModel in its pure (no abstractions) form:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:2390ca1b-8c21-4df9-ada0-20d9a5627c2d" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> MainPageViewModel : INotifyPropertyChanged
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> MainPageViewModel()
    {
        MakeLowercase </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> DelegateCommand</span><span style="color: #000000">&lt;</span><span style="color: #000000">pobject</span><span style="color: #000000">&gt;</span><span style="color: #000000">(ExecuteMakeLowercase, CanExecuteMakeLowercase);
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> ExecuteMakeLowercase(</span><span style="color: #0000ff">object</span><span style="color: #000000"> obj)
    {
        Text </span><span style="color: #000000">=</span><span style="color: #000000"> Text.ToLower();
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">bool</span><span style="color: #000000"> CanExecuteMakeLowercase(</span><span style="color: #0000ff">object</span><span style="color: #000000"> arg)
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #000000">!</span><span style="color: #0000ff">string</span><span style="color: #000000">.IsNullOrEmpty(Text);
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> _text;
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Text
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> _text; }
        </span><span style="color: #0000ff">set</span><span style="color: #000000">
        {
            _text </span><span style="color: #000000">=</span><span style="color: #000000"> value;
            FirePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Text</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
            MakeLowercase.RaiseCanExecuteChanged();
        }
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> DelegateCommand</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">object</span><span style="color: #000000">&gt;</span><span style="color: #000000"> _makeLowercase;
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> DelegateCommand</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">object</span><span style="color: #000000">&gt;</span><span style="color: #000000"> MakeLowercase
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> _makeLowercase; }
        </span><span style="color: #0000ff">set</span><span style="color: #000000">
        {
            _makeLowercase </span><span style="color: #000000">=</span><span style="color: #000000"> value;
            FirePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">MakeLowercase</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        }
    }

    </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> FirePropertyChanged(</span><span style="color: #0000ff">string</span><span style="color: #000000"> propertyName)
    {
        var handlers </span><span style="color: #000000">=</span><span style="color: #000000"> PropertyChanged;
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (handlers </span><span style="color: #000000">!=</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
            handlers(</span><span style="color: #0000ff">this</span><span style="color: #000000">, </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyChangedEventArgs(propertyName));
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">event</span><span style="color: #000000"> PropertyChangedEventHandler PropertyChanged;
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h3>Problems with the traditional ViewModel implementation</h3>

<ol>
  <li>Lots of plumbing (Command in the constructor, PropertyChanged in property setters, ExecuteChanged evaluation in the <strong>Text</strong> setter, etc) </li>

  <li>Verbose properties (We can’t use auto-properties because of the need to notify of changes </li>

  <li>Unrelated events (<strong>Text</strong> property needs to know that <strong>CanExecuteMakeLowercase</strong> needs to be re-evaluated) </li>

  <li>INotifyPropertyChanged is error-prone due to string events </li>

  <li>Lots of redundancies makes maintenance messy </li>
</ol>

<h3>What a Rails-Inspired ViewModel might look like</h3>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:140cd01f-44d3-40b5-8072-90229fa0c901" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> MainPageViewModel : ActiveViewModel</span><span style="color: #000000">&lt;</span><span style="color: #000000">MainPageViewModel.Properties</span><span style="color: #000000">&gt;</span><span style="color: #000000">
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">enum</span><span style="color: #000000"> Properties { Text }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Execute_MakeLowercase()
    {
        Set(Properties.Text, Get</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000">(Properties.Text).ToLower());
    }

    [DependentUpon(Properties.Text)]
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">bool</span><span style="color: #000000"> CanExecute_MakeLowercase()
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #000000">!</span><span style="color: #0000ff">string</span><span style="color: #000000">.IsNullOrEmpty(Get</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000">(Properties.Text));
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>My goal was to reduce the amount of plumbing and redundancies in this code to communicate only what it needs to</p>

<ol>
  <li>There is one property named <strong>Text</strong> </li>

  <li>The <strong>MakeLowercase</strong> command will act on the <strong>Text</strong> property and make it lowercase </li>

  <li><strong>CanExecuteMakeLowercase</strong> will return true if <strong>Text</strong> has meaningful data </li>

  <li><strong>CanExecuteMakeLowercase</strong> needs to be re-evaluated with <strong>Text</strong> changes </li>
</ol>

<p>There is a lot of magic in <strong>ActiveViewModel.&#160; </strong>I am using convention to define the properties as a list of enums (<strong>Properties</strong>).&#160; The ActiveViewModel will generate these properties dynamically.&#160; I am also using convention to create commands.&#160; Any method that is prefixed with <strong>Execute_</strong> will be made into a command property.&#160; Any method prefixed with <strong>CanExecute_</strong> will be evaluated in the same command.&#160; Further, the <strong>CanExecute_</strong> method can declare the properties that will cause the commands to re-evaluate, putting the dependency where it belongs – with the method that is dependant upon it!&#160; Testability is really easy: Call the actions and validate the properties (via public Get()).&#160; I didn’t implement it, but actions based on property setters could very easily use the <strong>DependentUpon</strong> attribute to avoid <strong>INotifyPropertyChanged</strong> chaining that can get quite ugly.</p>

<h3>Summary</h3>

<p>I think this approach has a lot of potential.&#160; I am posting it in order to move the conversation forward.&#160; When the MVVM dust settles, and we have some best practices flushed out, what do we want our ViewModels to look like?&#160; Even though I consider this class experimental and exploratory (not meant to be used in production), I feel compelled to call out some weaknesses that will (or may) need to be addressed for a more production-ready base class:</p>

<ol>
  <li>The <strong>ActiveViewModel</strong> class will not work in Silverlight.&#160; It relies heavily on custom type descriptors which are not available in Silverlight.&#160; Hopefully, in Silverlight 4.0, we will have some better support for dynamic property generation.&#160; This may be in the form of C# 4.0 (with the DynamicObject.Try[SG]etMember overrides, for instance), property descriptors, or something else (better IronRuby support, perhaps?) </li>

  <li>There is not a lot of type safety with the properties.&#160; They are stored internally as plain objects.&#160; The <strong>Get</strong> method lets you get at a type-casted value, but you need to know it when you ask for it.&#160; We might change the property declaration from an enum to a list of name/type pairs and enforce some better type safety in the base class? </li>

  <li>Because there are not properties, we loose “equals semantics”.&#160; Get/Set is harder to read/follow than simply assigning and reading properties </li>
</ol>

<p>Finally, in case you are curious, you can see my implementation (at the time of this post) of the <strong>ActiveViewModel</strong> from my <a href="http://bazaar.launchpad.net/~briangenisio/mypetproject/Main/annotate/7/ActiveViewModel/ActiveViewModel.cs">Launchpad project</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2009-10-20 13:52:00</wp:post_date>
		<wp:post_date_gmt>2009-10-20 13:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-a-rails-inspired-viewmodel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Adventures in MVVM -- Dependant Properties with INotifyPropertyChanged</title>
		<link>http://houseofbilz.com/archives/2009/11/14/adventures-in-mvvm-dependant-properties-with-inotifypropertychanged/</link>
		<pubDate>Sat, 14 Nov 2009 13:54:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/11/14/adventures-in-mvvm-dependant-properties-with-inotifypropertychanged/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-Dependant-Properties-with-INotifyPropertyChanged" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2009%2F11%2F14%2Fadventures-in-mvvm----dependant-properties-with-inotifypropertychanged.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f11%2f14%2fadventures-in-mvvm----dependant-properties-with-inotifypropertychanged.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2009%2f11%2f14%2fadventures-in-mvvm----dependant-properties-with-inotifypropertychanged.aspx" /></a></p>  <p>I spend a lot of time writing ViewModels, which almost always implements <strong>INotifyPropertyChanged</strong>.&#160; For those who are not familiar with this interface, it includes a single event: PropertyChanged.&#160; That event contains a payload of the name of the property that changed.&#160; It exists as a standard way to notify observers that a property needs to be re-evaluated.</p>  <p>Although I use it all the time, I have always believed that <strong>INotifyPropertyChanged</strong> has some serious shortcomings.&#160; One of those shortcomings deals with dependant properties. </p>  <p>Lets say, for for the sake of example, that the ViewModel has two integer properties that the user can enter (<strong>InputA</strong> and <strong>InputB</strong>).&#160; There also exists a property named <strong>Calculation</strong> that is dependent upon <strong>InputA</strong> and <strong>InputB</strong>.&#160; Finally, there is a display property named <strong>CalculationText</strong> which is dependent upon <strong>Calculation</strong>.&#160; The code for these properties would look like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:d20f4eef-cddf-457c-be1b-5cd0419e6024" class="wlWriterSmartContent">   <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> _inputA;
</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> InputA
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> _inputA; }
    </span><span style="color: #0000ff">set</span><span style="color: #000000">
    {
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (_inputA </span><span style="color: #000000">==</span><span style="color: #000000"> value) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        _inputA </span><span style="color: #000000">=</span><span style="color: #000000"> value;
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">InputA</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Calculation</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">CalculationText</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
    }
}

</span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> _inputB;
</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> InputB
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> _inputB; }
    </span><span style="color: #0000ff">set</span><span style="color: #000000">
    {
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (_inputB </span><span style="color: #000000">==</span><span style="color: #000000"> value) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        _inputB </span><span style="color: #000000">=</span><span style="color: #000000"> value;
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">InputB</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Calculation</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">CalculationText</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
    }
}

</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> Calculation
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> InputA </span><span style="color: #000000">*</span><span style="color: #000000"> InputB; }
}

</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> CalculationText
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #800000">&quot;</span><span style="color: #800000">A * B = </span><span style="color: #800000">&quot;</span><span style="color: #000000"> </span><span style="color: #000000">+</span><span style="color: #000000"> Calculation; }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>There is a problem with this code.&#160; The input properties need to know that they are inputs for <strong>Calculation</strong> and <strong>CalculationText</strong> by firing the event for the calculations.&#160; As far as I am concerned, this is the wrong place for this information to exist.&#160; Inputs should not know that they are inputs.&#160; I can say first hand that this quickly breaks down as the ViewModel gets bigger and you start changing behavior.</p>

<p>The responsibility should be reversed.&#160; Instead of having the input properties knowing about the dependants, the dependent properties should be responsible for knowing the inputs that they rely upon.&#160; This can be done with some simple declarations:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:f2850de4-e87b-4d5b-88cb-a83a57fbb89e" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> _inputA;
</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> InputA
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> _inputA; }
    </span><span style="color: #0000ff">set</span><span style="color: #000000">
    {
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (_inputA </span><span style="color: #000000">==</span><span style="color: #000000"> value) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        _inputA </span><span style="color: #000000">=</span><span style="color: #000000"> value;
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">InputA</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
    }
}

</span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> _inputB;
</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> InputB
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> _inputB; }
    </span><span style="color: #0000ff">set</span><span style="color: #000000">
    {
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (_inputB </span><span style="color: #000000">==</span><span style="color: #000000"> value) </span><span style="color: #0000ff">return</span><span style="color: #000000">;

        _inputB </span><span style="color: #000000">=</span><span style="color: #000000"> value;
        RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">InputB</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
    }
}

[DependsUpon(</span><span style="color: #800000">&quot;</span><span style="color: #800000">InputA</span><span style="color: #800000">&quot;</span><span style="color: #000000">)]
[DependsUpon(</span><span style="color: #800000">&quot;</span><span style="color: #800000">InputB</span><span style="color: #800000">&quot;</span><span style="color: #000000">)]
</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> Calculation
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> InputA </span><span style="color: #000000">*</span><span style="color: #000000"> InputB; }
}

[DependsUpon(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Calculation</span><span style="color: #800000">&quot;</span><span style="color: #000000">)]
</span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> CalculationText
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #800000">&quot;</span><span style="color: #800000">A * B = </span><span style="color: #800000">&quot;</span><span style="color: #000000"> </span><span style="color: #000000">+</span><span style="color: #000000"> Calculation; }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>Notice how <strong>Calculation</strong> declares that it is dependent upon <strong>InputA</strong> and <strong>InputB</strong>.&#160; <strong>CalculationText</strong> also declares a dependency upon <strong>Calculation</strong>.&#160; The inputs are free of knowing anything about the dependants.</p>

<p>The implementation of this behavior should be handled in the base class and there are several ways to accomplish it.&#160; There are just a few things you want to think about:</p>

<ol>
  <li>Make sure that when inputs fire a change notification, the dependants are also fired </li>

  <li>Make sure to handle dependency chaining.&#160; <strong>InputA</strong> will cause <strong>Calculation</strong> to fire and <strong>Calculation</strong> will cause <strong>CalculationText</strong> to fire </li>

  <li>If the derived class declares dependencies such that it creates a circular reference, don’t endlessly loop or overflow your stack </li>
</ol>

<p>Here is a very simple implementation of this behavior.&#160; It manages the reflection at the time of change.&#160; A better (more efficient) implementation would probably map the dependencies at construction time into a private dictionary, but this is just a quick example of how you might achieve this behavior:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:525d9dea-2b00-453f-bcef-2a764c529c32" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">abstract</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> ViewModelBase : INotifyPropertyChanged
{
    [AttributeUsage(AttributeTargets.Property, AllowMultiple </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">true</span><span style="color: #000000">)]
    </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> DependsUponAttribute : Attribute
    {
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> DependancyName { </span><span style="color: #0000ff">get</span><span style="color: #000000">; </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">set</span><span style="color: #000000">; }
        
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> DependsUponAttribute(</span><span style="color: #0000ff">string</span><span style="color: #000000"> propertyName)
        {
            DependancyName </span><span style="color: #000000">=</span><span style="color: #000000"> propertyName;
        }
    }

    </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">virtual</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> RaisePropertyChanged(</span><span style="color: #0000ff">string</span><span style="color: #000000"> propertyName)
    {
        var handlers </span><span style="color: #000000">=</span><span style="color: #000000"> PropertyChanged;
        </span><span style="color: #0000ff">if</span><span style="color: #000000"> (handlers </span><span style="color: #000000">!=</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
        {
            </span><span style="color: #0000ff">foreach</span><span style="color: #000000">(var property </span><span style="color: #0000ff">in</span><span style="color: #000000"> AllNotifiedProperties(propertyName))
                handlers(</span><span style="color: #0000ff">this</span><span style="color: #000000">, </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyChangedEventArgs(property));
        }
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> IEnumerable</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000"> DependantProperties(</span><span style="color: #0000ff">string</span><span style="color: #000000"> inputName)
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> from property </span><span style="color: #0000ff">in</span><span style="color: #000000"> GetType().GetProperties()
               </span><span style="color: #0000ff">where</span><span style="color: #000000"> property.GetCustomAttributes(</span><span style="color: #0000ff">typeof</span><span style="color: #000000">(DependsUponAttribute), </span><span style="color: #0000ff">true</span><span style="color: #000000">).Cast</span><span style="color: #000000">&lt;</span><span style="color: #000000">DependsUponAttribute</span><span style="color: #000000">&gt;</span><span style="color: #000000">()
                     .Any(attribute </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> attribute.DependancyName </span><span style="color: #000000">==</span><span style="color: #000000"> inputName)
               select property.Name;
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> IEnumerable</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000"> NotifiedProperties(IEnumerable</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000"> inputs)
    {
        var dependancies </span><span style="color: #000000">=</span><span style="color: #000000"> from input </span><span style="color: #0000ff">in</span><span style="color: #000000"> inputs
                           from dependancy </span><span style="color: #0000ff">in</span><span style="color: #000000"> DependantProperties(input)
                           select dependancy;

        </span><span style="color: #0000ff">return</span><span style="color: #000000"> inputs.Union(dependancies).Distinct();
    }

    </span><span style="color: #0000ff">private</span><span style="color: #000000"> IEnumerable</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000"> AllNotifiedProperties(</span><span style="color: #0000ff">string</span><span style="color: #000000"> inputName)
    {
        IEnumerable</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000"> results </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000">[]{inputName};

        </span><span style="color: #0000ff">while</span><span style="color: #000000"> (NotifiedProperties(results).Count() </span><span style="color: #000000">&gt;</span><span style="color: #000000"> results.Count())
            results </span><span style="color: #000000">=</span><span style="color: #000000"> NotifiedProperties(results);

        </span><span style="color: #0000ff">return</span><span style="color: #000000"> results;
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">event</span><span style="color: #000000"> PropertyChangedEventHandler PropertyChanged;
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2009-11-14 13:54:00</wp:post_date>
		<wp:post_date_gmt>2009-11-14 13:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-dependant-properties-with-inotifypropertychanged</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>2216</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.14.36.209</wp:comment_author_IP>
			<wp:comment_date>2010-11-24 19:59:02</wp:comment_date>
			<wp:comment_date_gmt>2010-11-24 19:59:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, you can do something like that, but it requires you to do some post compilation.  See PostSharp for this: http://thetreeknowseverything.wordpress.com/2009/01/21/auto-implement-inotifypropertychanged-with-aspects/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2189</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2189</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Farrell]]></wp:comment_author>
			<wp:comment_author_email>imjason@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jfarrell.net</wp:comment_author_url>
			<wp:comment_author_IP>12.3.222.130</wp:comment_author_IP>
			<wp:comment_date>2010-11-23 19:19:13</wp:comment_date>
			<wp:comment_date_gmt>2010-11-23 19:19:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, any way to take a similar approach with the properties in general. I am thinking something like:

[Notify]
public string FirstName { get; set; }]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18841</wp:comment_id>
			<wp:comment_author><![CDATA[Mike]]></wp:comment_author>
			<wp:comment_author_email>dizzy0ny@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>63.118.82.6</wp:comment_author_IP>
			<wp:comment_date>2013-02-17 23:25:06</wp:comment_date>
			<wp:comment_date_gmt>2013-02-17 23:25:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I previously was making use of this neat class quite a bit.  recently however, i have been finding some odd behaviors.   I have list box contain a list of items.  In code behind when when the list box item is clicked set a property of my viewmodel, which implements ViewModelBase.  This causes the setter to RaisePropertyChanged.   This all works fine.

The problem is  that for a model that is not flat..one that has child properties that are of some type that also implements ViewModelBase...for some reason there are cases where these child properties end up on other parent models.   i haven't been able to figure it out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16976</wp:comment_id>
			<wp:comment_author><![CDATA[Mike]]></wp:comment_author>
			<wp:comment_author_email>dizzy0ny@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>63.118.82.6</wp:comment_author_IP>
			<wp:comment_date>2012-09-05 17:02:06</wp:comment_date>
			<wp:comment_date_gmt>2012-09-05 17:02:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How would you handle properties raised by child models?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13657</wp:comment_id>
			<wp:comment_author><![CDATA[Vijay]]></wp:comment_author>
			<wp:comment_author_email>vijaye7@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.9.106.202</wp:comment_author_IP>
			<wp:comment_date>2011-12-27 21:30:52</wp:comment_date>
			<wp:comment_date_gmt>2011-12-27 21:30:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,

An excellent solution. I used a variation of this earlier, which required me to write lots of code. This is very elegant. Thanks a lot. 

Vijay]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17239</wp:comment_id>
			<wp:comment_author><![CDATA[bolu]]></wp:comment_author>
			<wp:comment_author_email>bolu.ulod@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.35.238.170</wp:comment_author_IP>
			<wp:comment_date>2012-10-09 12:49:42</wp:comment_date>
			<wp:comment_date_gmt>2012-10-09 12:49:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, Is there any way to implement this on properties from another class? 

e.g.:
[DependsUpon("InputA")]
[DependsUpon("InputB")]
[DependsUpon("ConvertRate",ClassA)]
public int Calculation
{
    get { return InputA * InputB * ClassA.ConvertRate; }
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37094</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.slideshare.net/tanyasantobandung/kos-kosan-dijual-di-jatinangor]]></wp:comment_author>
			<wp:comment_author_email>kiara_sparling@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.slideshare.net/tanyasantobandung/kos-kosan-dijual-di-jatinangor</wp:comment_author_url>
			<wp:comment_author_IP>192.171.240.199</wp:comment_author_IP>
			<wp:comment_date>2015-02-15 03:32:18</wp:comment_date>
			<wp:comment_date_gmt>2015-02-15 03:32:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[whoah this weblog is excellent i like reading your articles.
Stay up the good work! You know, many people are searching round 
for this info, you can aid them greatly.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Moving On</title>
		<link>http://houseofbilz.com/archives/2009/12/20/moving-on/</link>
		<pubDate>Sun, 20 Dec 2009 13:55:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/12/20/moving-on/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Four years ago, I moved to Ann Arbor to work with a talented team on what I consider to be an important, high-quality medical application.&#160; In that time, I had many great opportunities and I learned a ton from my colleagues.&#160; My team is filled with some really smart people!&#160; Because of this, I have mixed feelings to announce that I am moving on.&#160; Starting in February, I will be working for <a href="http://srtsolutions.com/blogs/billwagner/">Bill Wagner</a> and <a href="http://srtsolutions.com/blogs/diannemarsh/">Dianne Marsh</a> and joining the team at <a href="http://srtsolutions.com/">SRT Solutions</a>.&#160; It will be quite a change for me -- moving from one of the largest companies in the world to a small, local consulting company.&#160; This job will, however, give me an opportunity to spend more time focusing on the technologies and concepts that most interest me.&#160; I am excited for this change, and I am excited to be working directly with the many amazing members of the SRT team.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2009-12-20 13:55:00</wp:post_date>
		<wp:post_date_gmt>2009-12-20 13:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-on</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="career"><![CDATA[Career]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>79910</wp:comment_id>
			<wp:comment_author><![CDATA[laura maya]]></wp:comment_author>
			<wp:comment_author_email>sharinewby@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.smashwords.com/books/view/516460</wp:comment_author_url>
			<wp:comment_author_IP>221.211.117.140</wp:comment_author_IP>
			<wp:comment_date>2015-12-27 04:33:05</wp:comment_date>
			<wp:comment_date_gmt>2015-12-27 04:33:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It'&#1109; perfect &#116;ime &#116;&#1995; &#109;ake 
&#1109;ome plans &#102;&#1086;r &#116;&#1210;&#1077; future &#1072;nd &#1110;t &#1110;&#115; tije &#116;&#1086; &#098;&#1077; 
&#614;appy. &#8544;'&nu;&#1077; learn &#116;&#614;&#1110;&#1109; submit &#593;nd &#1110;f &#921; 
&#109;ay &#106;ust &#1231; &#1377;ish &#116;&#11423; reconmend &#655;&#1086;u &#102;ew attention-grabbing &#116;hings &#1413;r tips.
&#1052;aybe &#655;&#1413;u &#099;&#593;n &#119;rite 
subsequent articles relating &#116;&#1995; &#116;&#614;&#105;&#1109; article.
&#1216; desire &#116;&#1086; &#1075;ead &#1077;&nu;&#1077;n &#109;ore issues &#593;bout 
&#105;t!

&#109;&#1091; bloog ... <a href="https://www.smashwords.com/books/view/516460" rel="nofollow">laura maya</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78625</wp:comment_id>
			<wp:comment_author><![CDATA[reichtum]]></wp:comment_author>
			<wp:comment_author_email>jerrellplowman@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>https://play.google.com/store/books/details/Laura_Maya_Bloggen_der_moderne_Weg_zum_Reichtum?id=c62iAgAAQBAJ</wp:comment_author_url>
			<wp:comment_author_IP>50.240.46.244</wp:comment_author_IP>
			<wp:comment_date>2015-11-01 13:06:47</wp:comment_date>
			<wp:comment_date_gmt>2015-11-01 13:06:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When I initiaally cokmmented &#1216; &#593;ppear &#116;&#1413; 
&amp;#1211ave clicked &#116;&amp;#1211&#1077; -Notify mme &#1377;hen ne&#1121; comments aare 
&#097;dded- chgeckbox &#097;nd &#102;rom no&#1377; &#1995;n &amp;#6513&#1141;ery &#116;ime &#097; &#099;omment &#1110;&#1109; aadded &#1030; recieve 4 emails &amp;#7457ith &#116;&#1210;&#1077; exact 
&#115;ame &#1089;omment. &#1056;erhaps &#116;&#1210;ere &#105;&#1109; 
&#097; &#109;eans &#121;&#1086;u &#097;&#1075;&#1077; &#593;ble &#116;&omicron; remove &#109;&#1077; frpm &#116;&#104;&#097;t service?

&#932;hank &#121;&#111;u!

&#109;&#1091; weblog; <a href="https://play.google.com/store/books/details/Laura_Maya_Bloggen_der_moderne_Weg_zum_Reichtum?id=c62iAgAAQBAJ" rel="nofollow">reichtum</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79222</wp:comment_id>
			<wp:comment_author><![CDATA[reichtum]]></wp:comment_author>
			<wp:comment_author_email>israelcarrasco@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>https://play.google.com/store/books/details/Laura_Maya_Bloggen_der_moderne_Weg_zum_Reichtum?id=c62iAgAAQBAJ</wp:comment_author_url>
			<wp:comment_author_IP>87.118.228.90</wp:comment_author_IP>
			<wp:comment_date>2015-11-10 02:52:56</wp:comment_date>
			<wp:comment_date_gmt>2015-11-10 02:52:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hello!,I love your writing ver&#1199; a lot! percentage &#1121;&amp;#6513 
&#1181;eep &#117;&#1088; &#097; correspondence extra &#593;bout &#121;&#959;ur article &amp;#1086n AOL?

&#921; require &#097; specialist &#111;n &#116;&amp;#1211&#1110;&#115; space 
&#116;&omicron; ssolve &#109;&#655; &amp;#1088roblem.

&#1229;ay &#098;&amp;#6513 &#116;&#104;&#1072;t'&#1109; &#655;&#1086;u!
&#1058;aking &#593; &amp;#8572&amp;#11423&amp;#11423k ahead &#116;&#959; &#1109;ee &#121;&#1995;u.



&#913;lso visit &#109;&#121; wweb blog: <a href="https://play.google.com/store/books/details/Laura_Maya_Bloggen_der_moderne_Weg_zum_Reichtum?id=c62iAgAAQBAJ" rel="nofollow">reichtum</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73180</wp:comment_id>
			<wp:comment_author><![CDATA[geld verdienen met website]]></wp:comment_author>
			<wp:comment_author_email>carolebastow@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>https://itunes.apple.com/us/book/id963797972</wp:comment_author_url>
			<wp:comment_author_IP>211.48.77.58</wp:comment_author_IP>
			<wp:comment_date>2015-09-23 10:44:22</wp:comment_date>
			<wp:comment_date_gmt>2015-09-23 10:44:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If yߋu are going for best contents like myself, only 
pay a visit this web page everyday beause it presents 
quality contents, thanks

Look аt my site <a href="https://itunes.apple.com/us/book/id963797972" rel="nofollow">geld verdienen met website</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80690</wp:comment_id>
			<wp:comment_author><![CDATA[mieszkania]]></wp:comment_author>
			<wp:comment_author_email>jeweltout@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://themeforest.net/user/davion20089</wp:comment_author_url>
			<wp:comment_author_IP>88.119.22.187</wp:comment_author_IP>
			<wp:comment_date>2016-03-30 01:45:35</wp:comment_date>
			<wp:comment_date_gmt>2016-03-30 01:45:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post. I used to be checking constantly this weblog and 
I'm impressed! Exfremely useful information specially the 
last sectio :) I handle such information much.
I was looking for this certain info for a long time.
Thank you and good luck.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80468</wp:comment_id>
			<wp:comment_author><![CDATA[smashword]]></wp:comment_author>
			<wp:comment_author_email>shelton_vanwinkle@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.smashwords.com/books/view/516460</wp:comment_author_url>
			<wp:comment_author_IP>219.238.191.253</wp:comment_author_IP>
			<wp:comment_date>2016-03-06 10:06:43</wp:comment_date>
			<wp:comment_date_gmt>2016-03-06 10:06:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My relatives &#593;ll t&#614;&#1077; &#116;ime &#1109;ay &#116;&#614;&#097;t &#073; &#593;m 
wasting &#109;&#1091; ttime &#1211;ere &#1072;t ne&#116;, &#1077;xcept &#921; &#1179;no&#1121; &#073; &#097;m &#1409;etting experience everyday bby reading &#1109;uch 
fastidious articles orr reviews.

Feel free &#116;&#1086; visit &#109;&#1199; website :: 
<a href="https://www.smashwords.com/books/view/516460" rel="nofollow">smashword</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; CodeMash Schedule Application</title>
		<link>http://houseofbilz.com/archives/2010/01/11/adventures-in-mvvm-codemash-schedule-application/</link>
		<pubDate>Mon, 11 Jan 2010 13:56:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2009/01/11/adventures-in-mvvm-codemash-schedule-application/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a></p>  <p>So, I am getting myself ready to head out to Sandusy, Ohio for three days of nerdy fun at <a href="http://Codemash.org">CodeMash</a>.&#160; While I am there, I will be giving my “Introduction to the MVVM Pattern”.&#160; In preparation for this talk, I decided to create a new demo application.&#160; This application is a calendar and session list for the conference.&#160; It is not terribly fancy (I wish I had more time (or talent) to skin it better), but it highlights many of the concepts that I will be speaking about in my presentation.</p>  <p>The app is a Silverlight 3 project utilizing the Telerik Scheduler control.&#160; This particular control is rather rich, and I was excited to get my hands dirty with it. The ViewModel for the scheduler was primarily responsible for translating session data into something the Telerik control could consume.&#160;&#160; The app also includes a session list with a filter panel which is derived from the session data.&#160; This is where the majority of the MVVM code can be found.&#160; The ViewModels for the session list are responsible for dynamically creating and merging filter predicates based on the values in the session list.</p>  <p><a href="http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Calendar.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="CodeMashSessions.Calendar" border="0" alt="CodeMashSessions.Calendar" src="http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Calendar_thumb.png" width="442" height="287" /></a> <a href="http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Sessions.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="CodeMashSessions.Sessions" border="0" alt="CodeMashSessions.Sessions" src="http://houseofbilz.net/wp-content/uploads/2010/05/CodeMashSessions.Sessions_thumb.png" width="436" height="283" /></a></p>  <p>You can play with the application at <a href="http://HouseOfBilz.net/CodeMash">http://HouseOfBilz.net/CodeMash</a></p>  <p>CodeMashSessions Source Code: <a title="http://www.houseofbilz.net/codemash/CodeMashSessions.Source.zip" href="http://www.houseofbilz.net/codemash/CodeMashSessions.Source.zip">http://www.houseofbilz.net/codemash/CodeMashSessions.Source.zip</a></p>  <p>Twitter &quot;Ball of Mud&quot; vs MVVM Source Code: <a href="http://houseofbilz.net/codemash/Twitter-BallOfMud-vs-MVVM.zip">http://houseofbilz.net/codemash/Twitter-BallOfMud-vs-MVVM.zip</a></p>  <p>Slides from &quot;An Introduction to the MVVM Pattern&quot;: <a href="http://houseofbilz.net/codemash/MVVM.ppt">http://houseofbilz.net/codemash/MVVM.ppt</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2010-01-11 13:56:00</wp:post_date>
		<wp:post_date_gmt>2010-01-11 13:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-codemash-schedule-application</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="codemash"><![CDATA[CodeMash]]></category>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>51288</wp:comment_id>
			<wp:comment_author><![CDATA[crystal x]]></wp:comment_author>
			<wp:comment_author_email>sabrinabrentnall@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://purecrystalx.blogspot.com/2014/07/crystal-x-asli-dari-ptnasa.html</wp:comment_author_url>
			<wp:comment_author_IP>180.183.119.12</wp:comment_author_IP>
			<wp:comment_date>2015-06-12 04:40:47</wp:comment_date>
			<wp:comment_date_gmt>2015-06-12 04:40:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my first time pay a quick visit at here and i 
am really pleassant to read everthing at single place.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Goodbye XML&#8230; Hello YAML (part 1)</title>
		<link>http://houseofbilz.com/archives/2010/02/21/goodbye-xml-hello-yaml-part-1/</link>
		<pubDate>Sun, 21 Feb 2010 13:58:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/02/21/goodbye-xml-hello-yaml-part-1/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archive/2010/03/27/goodbye-xmlhellip-hello-yaml-part-2.aspx">Part 2</a></p>  <p>This is the first in a many-part series in which I will be writing about using YAML in the .Net space – particularly within C#.&#160; I will cover the whys, the hows, and show some tricks using the dynamic capabilities of C# when using YAML.&#160; I might even explore IronRuby a bit.</p>  <h4></h4>  <h5>Why YAML?</h5>  <p>I got the chance to sit in on four days of Ruby on Rails (RoR) training from <a href="http://objo.com/">Joe Obrien</a> a few weeks ago.&#160; I hadn’t played with RoR in a few months, and this training was amazingly useful.&#160; I always like to see what I can take away from an environment like this for the work I do more regularly.</p>  <p>In this case, one of the things I took away with me was YAML.&#160; Let me start with some background.</p>  <p>Over 10 years ago, when XML was touted as a human-readable data format, I had to scoff.&#160; Was XML really human readable?&#160; Well, from a software developer’s perspective, it sure is a lot nicer than binary.&#160; But, from a REAL human’s perspective, XML is just barely more readable than Klingon.&#160; This is mostly due to the verbose nature of XML and the often ranted about “<a href="http://www.google.com/search?q=angle+bracket+tax">angle bracket tax</a>”.&#160;&#160;&#160; </p>  <p>10 years later, we are still using XML as our primary data transfer/persistence/definition format.&#160; I certainly don’t mind using XML in a world where I (a human) rarely need to read the data.&#160; I am fine with keeping the data in my REST services as XML, for instance.&#160; In that case, my tools abstract it away and I don’t have to read it very often.</p>  <p>Currently, my colleague <a href="http://srtsolutions.com/blogs/mikewoelmer/">Mike Woelmer</a> and I have a client who needs us to develop an engine where the business rules will be entered by a human (not a developer) and will change as the project evolves.&#160; The data/rules will be set in stone once the project is complete.&#160; XML is a bad choice for this, since a non-technical person will be entering the rules.&#160; At the same time, developing a UI for this is too time consuming and out of the scope of the project.&#160; My first thought: a <a href="http://en.wikipedia.org/wiki/Domain_specific_language">Doman Specific Language</a> (DSL)!&#160; That would certainly lend well to my requirements.&#160; As much as I liked that idea, I didn’t have time to create a DSL either, especially while spiking.&#160; Then I remembered back to my RoR training.&#160; I remembered a data format called <a href="http://yaml.org/">YAML</a> that they used for some of the configuration files.&#160; It was a VERY easy-to-read, hierarchical data format.</p>  <p>To illustrate the difference between XML and YAML, here is a simple example of some rather easy-to-read XML defining the data for a recipe (unrelated to my current project):</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:9ba9f019-91ea-4a0b-adaf-8e698f42b7b3" class="wlWriterEditableSmartContent"><pre style="background-color:#EBEBEB;overflow: auto;"><span style="color: #000000;">&lt;</span><span style="color: #000000;">recipe</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">title</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">Macaroni and Cheese</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">title</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">My favorite comfort food</span><span style="color: #000000;">.&lt;/</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">author</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">Brian Genisio</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">author</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">timeToPrepare</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">30</span><span style="color: #000000;"> Minutes</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">timeToPrepare</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">ingredients</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">ingredient</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">name</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">Cheese</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">name</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">quantity</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">3</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">quantity</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">units</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">cups</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">units</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">ingredient</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">ingredient</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">name</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">Macaroni</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">name</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">quantity</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">16</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">quantity</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">units</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">oz</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">units</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">ingredient</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">ingredients</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">steps</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">step</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">number</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">1</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">number</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">Cook the macaroni</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">step</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">step</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">number</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">2</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">number</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">Melt the cheese</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">step</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">step</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">number</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">3</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">number</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
      </span><span style="color: #000000;">&lt;</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">Mix the cooked macaroni with the melted cheese</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">description</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">step</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
  </span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">steps</span><span style="color: #000000;">&gt;</span><span style="color: #000000;">
</span><span style="color: #000000;">&lt;/</span><span style="color: #000000;">recipe</span><span style="color: #000000;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Here is the exact same data described with YAML:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1e7fcb62-fc62-4377-972c-b1a753ae149a" class="wlWriterEditableSmartContent"><pre style="background-color:#EBEBEB;overflow: auto;"><span style="color: #000000;">Recipe:
  Title:         Macaroni and Cheese
  Description:   My favorite comfort food.
  Author:        Brian Genisio
  TimeToPrepare: 30 Minutes
  Ingredients:
    -
      Name:     Cheese
      Quantity: 3
      Units:    cups
    -
      Name:     Macaroni
      Quantity: 16
      Units:    oz
  Steps:
    -
      Number: 1
      Description: Cook the macaroni
    -
      Number: 2
      Description: Melt the cheese
    -
      Number: 3
      Description: Mix the cooked macaroni with the melted cheese</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Although this is a very simple example, I would ask you: Which one would you rather present to a customer when talking about the data and business rules?&#160; Which one would YOU rather look at when developing your software?</p>

<p>In my next couple of posts, I will discuss some tools available to you in the .Net space and some nifty C# 4.0 techniques for working with the data.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2010-02-21 13:58:00</wp:post_date>
		<wp:post_date_gmt>2010-02-21 13:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>goodbye-xml-hello-yaml-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<category domain="post_tag" nicename="yaml"><![CDATA[YAML]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35732</wp:comment_id>
			<wp:comment_author><![CDATA[Aundrea]]></wp:comment_author>
			<wp:comment_author_email>diannamount@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yahoo.com</wp:comment_author_url>
			<wp:comment_author_IP>37.72.189.29</wp:comment_author_IP>
			<wp:comment_date>2015-01-24 05:21:18</wp:comment_date>
			<wp:comment_date_gmt>2015-01-24 05:21:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Right now it seems like BlogEngine is the best blogging platform out there 
right now. (from what I've read) Is that what you're using on your blog?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28798</wp:comment_id>
			<wp:comment_author><![CDATA[Maple 2 Rise Right Hand Gooseneck w/ Cap]]></wp:comment_author>
			<wp:comment_author_email>everettekraus@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://pipes.yahoo.com/pipes/pipe.run?_id=e4de1009900a000cbda557eee254879b&amp;_render=rss</wp:comment_author_url>
			<wp:comment_author_IP>93.118.67.203</wp:comment_author_IP>
			<wp:comment_date>2014-09-01 05:55:01</wp:comment_date>
			<wp:comment_date_gmt>2014-09-01 05:55:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is a storage area where pool supplies and equipment is kept.
Standard contractors must execute a total of 
6 hours of continuing schooling such as three core several hours and 
three specialist hrs to satisfy up with the 
prerequisites through the November 2011 deadline. Smaller 
scale leasehold improvements, or remodeling of an existing restaurant will keep 
the cost on the lower end.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12608</wp:comment_id>
			<wp:comment_author><![CDATA[Continuous Education &laquo; IgorShare Weblog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://igorshare.wordpress.com/2011/11/29/continuous-education-2/</wp:comment_author_url>
			<wp:comment_author_IP>66.135.48.191</wp:comment_author_IP>
			<wp:comment_date>2011-11-29 22:19:53</wp:comment_date>
			<wp:comment_date_gmt>2011-11-29 22:19:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Goodbye XML… Hello YAML (part 1) « Brian Genisio&#8217;s House of Bilz [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MVVM Jam -- Prerequisites</title>
		<link>http://houseofbilz.com/archives/2010/02/27/mvvm-jam-prerequisites/</link>
		<pubDate>Sat, 27 Feb 2010 13:58:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/02/27/mvvm-jam-prerequisites/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For those in the Ann Arbor, Michigan area, you might be familiar with the “<a href="http://www.comejamwithus.org/">Come Jam With Us</a>” project.&#160; Every week, we get together for an hour and code on a particular topic.&#160; It is usually led by one or two people and the rest of the group codes along in order to learn about the topic at hand.&#160; It is a really great forum for learning new concepts and technologies.</p>  <p>This week, on Tuesday, March 2nd, I will be hosting an MVVM jam session at 5:30 (<a href="http://www.comejamwithus.org/where-you-can-find-us">directions</a>).&#160; I will be taking you through the process of transforming a “Ball of Mud” application to use the MVVM architecture.&#160; We will do this in a test-driven way, so you can see the testability story of MVVM.</p>  <p>The prerequisites are very simple:</p>  <p>1. Visual Studio 2008 or 2010 or <a href="http://www.microsoft.com/express/">Visual Studio Express</a> (free)</p>  <p>2. Download the <a href="http://HouseOfBilz.net/MVVMJam/MVVM-Jam.ModelExtracted.zip">sample project</a>.&#160; It is a rudimentary Twitter search application written with WPF.</p>  <p>3. You should have some way of running NUnit tests from Visual Studio.&#160; If you have <a href="http://www.jetbrains.com/resharper/index.html">ReSharper</a> or <a href="http://testdriven.net/">TestDriven.Net</a> (or any similar plug-in), then you are all set.&#160; ReSharper has a free 30 day trial and TestDriven.Net has a free version for personal use.</p>  <p>I hope to see you there!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2010-02-27 13:58:00</wp:post_date>
		<wp:post_date_gmt>2010-02-27 13:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mvvm-jam-prerequisites</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jam"><![CDATA[Jam]]></category>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MVVM Jam &#8211; A Solution</title>
		<link>http://houseofbilz.com/archives/2010/03/02/mvvm-jam-a-solution/</link>
		<pubDate>Tue, 02 Mar 2010 13:59:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/03/02/mvvm-jam-a-solution/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Thanks to all who came to the MVVM jam tonight.&#160; In case you wanted to see what a completed solution looks like, you can download it <a href="http://houseofbilz.net/MVVMJam/MVVM-Jam-Complete.zip">here</a>.&#160; There are many tweaks that can be made, and it is certainly not the only solution… but hopefully, it helps to understand how the MVVM pattern can be applied.</p>  <p>Next week (Wednesday, March 9th) , I will be giving a presentation on <a href="http://compositewpf.codeplex.com/">Prism</a> for Silverlight and WPF at the <a href="http://aadnd.org/">Ann Arbor .Net Users’ Group</a>.&#160; It is an eyes-forward talk about more patterns similar to MVVM.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2010-03-02 13:59:00</wp:post_date>
		<wp:post_date_gmt>2010-03-02 13:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mvvm-jam-a-solution</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jam"><![CDATA[Jam]]></category>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prism Slides and Demo</title>
		<link>http://houseofbilz.com/archives/2010/03/11/prism-slides-and-demo/</link>
		<pubDate>Thu, 11 Mar 2010 13:59:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/03/11/prism-slides-and-demo/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently gave a presentation on Prism at the <a href="http://aadnd.org/">Ann Arbor .Net Users Group</a>.&#160; I have made my slides and demo available for download:</p>  <h3><a href="http://houseofbilz.net/Prism/Prism.pptx">Slides</a>&#160;&#160; <a href="http://houseofbilz.net/Prism/PrismExample.zip">Demo</a></h3>  <p>Some interesting links associated with prism:</p>  <ul>   <li><a href="http://tinyurl.com/Prism2">Composite Application Guidance</a> </li>    <li><a href="http://tinyurl.com/Prism2-CAL ">Composite Application Library</a> </li>    <li><a href="http://www.codeplex.com/CompositeWPF/">Codeplex Site</a> </li>    <li><a href="http://tinyurl.com/Prism2-Videos">Great 4-part video series</a> </li>    <li><a href="http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2009/10/27/prism-and-silverlight-screencasts-on-channel-9.aspx">Another video series</a> that <a href="http://www.davidgiard.com/">David Giard</a> pointed me towards </li> </ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2010-03-11 13:59:00</wp:post_date>
		<wp:post_date_gmt>2010-03-11 13:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prism-slides-and-demo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="prism"><![CDATA[Prism]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf"><![CDATA[WPF]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>32042</wp:comment_id>
			<wp:comment_author><![CDATA[accelerate]]></wp:comment_author>
			<wp:comment_author_email>zita_carlos@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.getjealous.com/bizarrebarrel6740/journal/3492073/infant-feeding-the-bottle-nipple-tandem.html</wp:comment_author_url>
			<wp:comment_author_IP>190.248.48.50</wp:comment_author_IP>
			<wp:comment_date>2014-11-14 01:42:12</wp:comment_date>
			<wp:comment_date_gmt>2014-11-14 01:42:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice blog here! Additionally your web site so much up fast!
What host are you the use of? Can I am getting your affiliate hyperlink to your host?
I want my site loaded up as fast as yours lol]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Goodbye XML&#8230; Hello YAML (part 2)</title>
		<link>http://houseofbilz.com/archives/2010/03/27/goodbye-xml-hello-yaml-part-2/</link>
		<pubDate>Sat, 27 Mar 2010 14:00:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/03/27/goodbye-xml-hello-yaml-part-2/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dotnetshoutout.com/Goodbye-XML%E2%80%A6-Hello-YAML-part-2" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2010%2F03%2F27%2Fgoodbye-xmlhellip-hello-yaml-part-2.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2010%2f03%2f27%2fgoodbye-xmlhellip-hello-yaml-part-2.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2010%2f03%2f27%2fgoodbye-xmlhellip-hello-yaml-part-2.aspx" /></a>   <p><a href="http://houseofbilz.com/archive/2010/02/21/goodbye-xmlhellip-hello-yaml-part-1.aspx">Part 1</a></p>  <p>After I explained my motivation for using YAML instead of XML for my data, I got a lot of people asking me what type of tooling is available in the .Net space for consuming YAML.&#160; In this post, I will discuss a nice tooling option as well as describe some small modifications to leverage the extremely powerful dynamic capabilities of C# 4.0.&#160; I will be referring to the following YAML file throughout this post</p>  <p></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:9bfdd9c4-2ac1-4f6e-961e-d3dad7186bc4" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">Recipe:
  Title:         Macaroni and Cheese
  Description:   My favorite comfort food.
  Author:        Brian Genisio
  TimeToPrepare: </span><span style="color: #000000;">30</span><span style="color: #000000;"> Minutes
  Ingredients:
    -
      Name:     Cheese
      Quantity: </span><span style="color: #000000;">3</span><span style="color: #000000;">
      Units:    cups
    -
      Name:     Macaroni
      Quantity: </span><span style="color: #000000;">16</span><span style="color: #000000;">
      Units:    oz
  Steps:
    -
      Number: </span><span style="color: #000000;">1</span><span style="color: #000000;">
      Description: Cook the macaroni
    -
      Number: </span><span style="color: #000000;">2</span><span style="color: #000000;">
      Description: Melt the cheese
    -
      Number: </span><span style="color: #000000;">3</span><span style="color: #000000;">
      Description: Mix the cooked macaroni with the melted cheese</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p></p>

<h3>Tooling</h3>

<p>It turns out that there are several implementations of YAML tools out there.&#160; The neatest one, in my opinion, is <a href="http://yaml.codeplex.com/">YAML for .NET, Visual Studio and Powershell</a>.&#160; It includes a great editor plug-in for Visual Studio as well as YamlCore, which is a parsing engine for .Net.&#160; It is in active development still, but it is certainly enough to get you going with YAML in .Net.&#160; </p>

<p>Start by referenceing YamlCore.dll, load your document, and you are on your way.&#160; Here is an example of using the parser to get the title of the Recipe:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:67da368d-a0ea-4e95-80f0-519787bb7578" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">var yaml </span><span style="color: #000000;">=</span><span style="color: #000000;"> YamlLanguage.FileTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data.yaml</span><span style="color: #800000;">"</span><span style="color: #000000;">) </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> Hashtable;
var recipe </span><span style="color: #000000;">=</span><span style="color: #000000;"> yaml[</span><span style="color: #800000;">"</span><span style="color: #800000;">Recipe</span><span style="color: #800000;">"</span><span style="color: #000000;">] </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> Hashtable;
var title </span><span style="color: #000000;">=</span><span style="color: #000000;"> recipe[</span><span style="color: #800000;">"</span><span style="color: #800000;">Title</span><span style="color: #800000;">"</span><span style="color: #000000;">] </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> </span><span style="color: #0000FF;">string</span><span style="color: #000000;">;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<a href="http://yaml.codeplex.com/"></a>

<p></p>

<p>In a similar way, you can access data in the Ingredients set:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:22908ba1-a4cd-4b47-a9ee-3987407bd53c" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">var yaml </span><span style="color: #000000;">=</span><span style="color: #000000;"> YamlLanguage.FileTo(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data.yaml</span><span style="color: #800000;">"</span><span style="color: #000000;">) </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> Hashtable;
var recipe </span><span style="color: #000000;">=</span><span style="color: #000000;"> yaml[</span><span style="color: #800000;">"</span><span style="color: #800000;">Recipe</span><span style="color: #800000;">"</span><span style="color: #000000;">] </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> Hashtable;
var ingredients </span><span style="color: #000000;">=</span><span style="color: #000000;"> recipe[</span><span style="color: #800000;">"</span><span style="color: #800000;">Ingredients</span><span style="color: #800000;">"</span><span style="color: #000000;">] </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> ArrayList;

</span><span style="color: #0000FF;">foreach</span><span style="color: #000000;"> (Hashtable ingredient </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> ingredients)
{
    var name </span><span style="color: #000000;">=</span><span style="color: #000000;"> ingredient[</span><span style="color: #800000;">"</span><span style="color: #800000;">Name</span><span style="color: #800000;">"</span><span style="color: #000000;">] </span><span style="color: #0000FF;">as</span><span style="color: #000000;"> </span><span style="color: #0000FF;">string</span><span style="color: #000000;">;
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>You may have noticed that YamlCore uses non-generic Hashtables and ArrayLists.&#160; This is because YamlCore was designed to work in all .Net versions, including 1.0.&#160; Everything in the parsed tree is one of two things: Hashtable, ArrayList or Value type (usually String).&#160; This translates well to the YAML structure where everything is either a Map, a Set or a Value.&#160; </p>

<h3>Taking it further</h3>

<p>Personally, I really dislike writing code like this.&#160; Years ago, I promised myself to never write the words Hashtable or ArrayList in my .Net code again.&#160; They are ugly, mostly depreciated collections that existed before we got generics in C# 2.0.&#160; Now, especially that we have dynamic capabilities in C# 4.0, we can do <strong>a lot</strong> better than this.&#160; With a relatively small amount of code, you can wrap the Hashtables and Array lists with a dynamic wrapper (wrapper code at the bottom of this post).&#160; The same code can be re-written to look like this:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:2df57b77-9f24-4e35-a85e-cdfdd4bd989f" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">dynamic doc </span><span style="color: #000000;">=</span><span style="color: #000000;"> YamlDoc.Load(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data.yaml</span><span style="color: #800000;">"</span><span style="color: #000000;">);
var title </span><span style="color: #000000;">=</span><span style="color: #000000;"> doc.Recipe.Title;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>And</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:f4b4bf83-c762-47c5-8707-ae4afbad192e" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">dynamic doc </span><span style="color: #000000;">=</span><span style="color: #000000;"> YamlDoc.Load(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data.yaml</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #0000FF;">foreach</span><span style="color: #000000;"> (dynamic ingredient </span><span style="color: #0000FF;">in</span><span style="color: #000000;"> doc.Recipe.Ingredients)
{
    var name </span><span style="color: #000000;">=</span><span style="color: #000000;"> ingredient.Name;
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p></p>

<p>I significantly prefer this code over the previous.&#160; That’s not all… the magic really happens when we take this concept into WPF.&#160; With a single line of code, you can bind to the data dynamically in the view:</p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:56d7052c-215c-41f6-87e5-a9cd8fbc6648" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #000000;">DataContext </span><span style="color: #000000;">=</span><span style="color: #000000;"> YamlDoc.Load(</span><span style="color: #800000;">"</span><span style="color: #800000;">Data.yaml</span><span style="color: #800000;">"</span><span style="color: #000000;">);</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p></p>

<p>Then, your XAML is extremely straight-forward (Nothing else.&#160; No static types, no adapter code.&#160; Nothing):</p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:4df1ba98-3945-45a1-817b-6cedd642224f" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">StackPanel</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Recipe.Title}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Recipe.Description}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Recipe.Author}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Recipe.TimeToPrepare}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="Ingredients:"</span><span style="color: #FF0000;"> FontWeight</span><span style="color: #0000FF;">="Bold"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;"> 
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ItemsControl </span><span style="color: #FF0000;">ItemsSource</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Recipe.Ingredients}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Margin</span><span style="color: #0000FF;">="10,0,0,0"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
        </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ItemsControl.ItemTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
            </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">DataTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">StackPanel </span><span style="color: #FF0000;">Orientation</span><span style="color: #0000FF;">="Horizontal"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Quantity}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">=" "</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Units}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">=" of "</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Name}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">StackPanel</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
            </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">DataTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
        </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">ItemsControl.ItemTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">ItemsControl</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">

    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="Steps:"</span><span style="color: #FF0000;"> FontWeight</span><span style="color: #0000FF;">="Bold"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ItemsControl </span><span style="color: #FF0000;">ItemsSource</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Recipe.Steps}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Margin</span><span style="color: #0000FF;">="10,0,0,0"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
        </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">ItemsControl.ItemTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
            </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">DataTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">StackPanel </span><span style="color: #FF0000;">Orientation</span><span style="color: #0000FF;">="Horizontal"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Number}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">=": "</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding Description}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
                </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">StackPanel</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
            </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">DataTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
        </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">ItemsControl.ItemTemplate</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">ItemsControl</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">

</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">StackPanel</span><span style="color: #0000FF;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p></p>

<p>This nifty XAML binding trick only works in WPF, unfortunately.&#160; Silverlight handles binding differently, so they don’t support binding to dynamic objects as of late (March 2010).&#160; This, in my opinion, is a major lacking feature in Silverlight and I <strong>really</strong> hope we will see this feature available to us in Silverlight 4 Release.&#160; (I am not very optimistic for Silverlight 4, but I can hope for the feature in Silverlight 5, can’t I?)</p>

<h3>Conclusion</h3>

<p>I still have a few things I want to say about using YAML in the .Net space including de-serialization and using IronRuby for your YAML parser, but this post is hopefully enough to see how easy it is to incorporate YAML documents in your code.</p>

<p><a title="http://yaml.codeplex.com/" href="http://yaml.codeplex.com/">Codeplex Site for YAML tools</a></p>

<p><a href="http://pastie.org/890406">Dynamic wrapper for YamlCore</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2010-03-27 14:00:00</wp:post_date>
		<wp:post_date_gmt>2010-03-27 14:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>goodbye-xml-hello-yaml-part-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<category domain="post_tag" nicename="yaml"><![CDATA[YAML]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30080</wp:comment_id>
			<wp:comment_author><![CDATA[South Carolina anabolic shop]]></wp:comment_author>
			<wp:comment_author_email>rosebuttrose@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://huubing.com/groups/several-guides-about-buying-the-suitable-perfect-steroids-for-windsurfing/</wp:comment_author_url>
			<wp:comment_author_IP>5.196.107.189</wp:comment_author_IP>
			<wp:comment_date>2014-10-09 16:19:21</wp:comment_date>
			<wp:comment_date_gmt>2014-10-09 16:19:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Having read this I believed it was vry informative. I appreciate you 
taking the time and effort to put this content together.

I once again find myself personally spending a significant amount of time both reading and posting comments.
But soo what, it was still worthwhile!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36393</wp:comment_id>
			<wp:comment_author><![CDATA[Wesley]]></wp:comment_author>
			<wp:comment_author_email>gwendolynchomley@live.de</wp:comment_author_email>
			<wp:comment_author_url>http://test.com</wp:comment_author_url>
			<wp:comment_author_IP>192.157.251.180</wp:comment_author_IP>
			<wp:comment_date>2015-01-30 08:17:09</wp:comment_date>
			<wp:comment_date_gmt>2015-01-30 08:17:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks to my father who stated to me about this webpage, this blog is genuinely awesome.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6997</wp:comment_id>
			<wp:comment_author><![CDATA[RickG]]></wp:comment_author>
			<wp:comment_author_email>rgrakowsky@pivcon.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.69.47.234</wp:comment_author_IP>
			<wp:comment_date>2011-02-14 14:25:23</wp:comment_date>
			<wp:comment_date_gmt>2011-02-14 14:25:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tried to use this library and the Dynamic wrapper under VS2008 and VS2010 (with the understanding that it is not officially supported under VS2010) and in both cases YamlLanguage.FileTo is throwing the error 'YaTools.Yaml.YamlLanguage does not contain a definition to FileTo'.  Thoughts?

Thanks in advance,
Rick]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6998</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.14.36.209</wp:comment_author_IP>
			<wp:comment_date>2011-02-14 16:17:41</wp:comment_date>
			<wp:comment_date_gmt>2011-02-14 16:17:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rick: Are you referencing YamlCore.dll as well?  http://yaml.codeplex.com/releases/view/21307]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28663</wp:comment_id>
			<wp:comment_author><![CDATA[Rosario]]></wp:comment_author>
			<wp:comment_author_email>rosarioelder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://google.com</wp:comment_author_url>
			<wp:comment_author_IP>198.23.174.81</wp:comment_author_IP>
			<wp:comment_date>2014-08-24 12:25:50</wp:comment_date>
			<wp:comment_date_gmt>2014-08-24 12:25:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Visit my web-site: web site; <a href="http://google.com" rel="nofollow">Rosario</a>,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27086</wp:comment_id>
			<wp:comment_author><![CDATA[Geraldine]]></wp:comment_author>
			<wp:comment_author_email>geraldineshapiro@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://danielsanlsqibrb.beeplog.com/793398_4258804.htm</wp:comment_author_url>
			<wp:comment_author_IP>23.105.212.169</wp:comment_author_IP>
			<wp:comment_date>2014-06-19 19:14:14</wp:comment_date>
			<wp:comment_date_gmt>2014-06-19 19:14:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When hiring a Phoenix home remodeling prices are quite a bit unyielding financially because of the 
case will likely provide a safe work environment for contractors?
A few problems with your roofer begins work so that there are a couple of tips that will 
help you avoid appearing to be paid. Denver Transit Partners, 
a translated copy of the school bus construction trades.
E its ability to prevent it from their wages are not on their job, or promised materials 
may not be necessary during the current regulations provide.


my web blog: web site - <a href="http://danielsanlsqibrb.beeplog.com/793398_4258804.htm" rel="nofollow">Geraldine</a> -]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29376</wp:comment_id>
			<wp:comment_author><![CDATA[www.facebook.com]]></wp:comment_author>
			<wp:comment_author_email>justine_becerra@fastmail.jp</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/pages/DragonVale-Hack-and-Cheat-for-IphoneAndroidIpad-and-Ipod/1490006347926659</wp:comment_author_url>
			<wp:comment_author_IP>197.211.205.154</wp:comment_author_IP>
			<wp:comment_date>2014-09-24 00:43:10</wp:comment_date>
			<wp:comment_date_gmt>2014-09-24 00:43:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Representing symbiosis of painted furniture and French styling, the Chantilly range is also comprehensive.

"Beauty and The Beat," is currently being shown at the online French film 
festival, My French Film Festival. As the name suggests it is the furniture of 
the green house.

my site - <a href="https://www.facebook.com/pages/DragonVale-Hack-and-Cheat-for-IphoneAndroidIpad-and-Ipod/1490006347926659" rel="nofollow">www.facebook.com</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29457</wp:comment_id>
			<wp:comment_author><![CDATA[Joellen]]></wp:comment_author>
			<wp:comment_author_email>kelseybiermann@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://Shenna.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>211.151.13.14</wp:comment_author_IP>
			<wp:comment_date>2014-09-26 08:31:27</wp:comment_date>
			<wp:comment_date_gmt>2014-09-26 08:31:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You share interesting things here. I think that your page can go viral easily, but 
you must give it initial boost and i know how to do it, 
just search in google for - wcnu traffic increase]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35556</wp:comment_id>
			<wp:comment_author><![CDATA[74.am]]></wp:comment_author>
			<wp:comment_author_email>liamson@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://74.am/index.php?a=profile&amp;u=demiqunxtb</wp:comment_author_url>
			<wp:comment_author_IP>182.253.242.19</wp:comment_author_IP>
			<wp:comment_date>2015-01-22 15:00:42</wp:comment_date>
			<wp:comment_date_gmt>2015-01-22 15:00:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ƴou are myy role models. Thanks to the post]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Silverlightning Talks</title>
		<link>http://houseofbilz.com/archives/2010/04/16/the-silverlightning-talks/</link>
		<pubDate>Fri, 16 Apr 2010 14:01:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/04/16/the-silverlightning-talks/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Tomorrow, I will be speaking in Grand Rapids at the <a href="http://www.eventbrite.com/event/557773315">Silverlight Firestarter</a>.&#160; It is a one day event intended to get people bootstrapped with Silverlight.&#160; I will be giving the “Advanced Topics” presentation.&#160; I have decided to run it as a series of “<a href="http://en.wikipedia.org/wiki/Lightning_Talk">Lightning Talks</a>”.&#160; The idea is to give a lot of breadth so you know that the topic exists and move quickly between them.&#160; To go along with the talks, here are a bunch of links that you might find useful:</p>  <h1>MVVM</h1>  <p><a href="http://msdn.microsoft.com/en-us/magazine/dd458800.aspx">http://msdn.microsoft.com/en-us/magazine/dd458800.aspx</a>     <br /><a href="http://msdn.microsoft.com/en-us/magazine/dd419663.aspx">http://msdn.microsoft.com/en-us/magazine/dd419663.aspx</a>     <br /><a href="http://channel9.msdn.com/shows/Continuum/MVVM/">http://channel9.msdn.com/shows/Continuum/MVVM/</a>     <br /><a href="http://karlshifflett.wordpress.com/2008/11/08/learning-wpf-m-v-vm/">http://karlshifflett.wordpress.com/2008/11/08/learning-wpf-m-v-vm/</a>     <br /><a href="http://johnpapa.net/silverlight/5-minute-overview-of-mvvm-in-silverlight/">http://johnpapa.net/silverlight/5-minute-overview-of-mvvm-in-silverlight/</a></p>  <p>   <br />Good MVVM Frameworks     <br /><a href="http://www.galasoft.ch/mvvm/getstarted/">http://www.galasoft.ch/mvvm/getstarted/</a>     <br /><a href="http://caliburn.codeplex.com/Wikipage">http://caliburn.codeplex.com/Wikipage</a></p>  <p>&#160;</p>  <h1>Prism</h1>  <p><a href="http://compositewpf.codeplex.com/">http://compositewpf.codeplex.com/</a>     <br /><a href="http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2009/10/27/prism-and-silverlight-screencasts-on-channel-9.aspx">http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2009/10/27/prism-and-silverlight-screencasts-on-channel-9.aspx</a>     <br /><a href="http://www.grumpydev.com/2009/07/04/why-shouldn%E2%80%99t-i-use-prism/">http://www.grumpydev.com/2009/07/04/why-shouldn%E2%80%99t-i-use-prism/</a></p>  <p>&#160;</p>  <h1>Unit Testing</h1>  <p>Silverlight Unit Testing Framework    <br /><a href="http://code.msdn.microsoft.com/silverlightut">http://code.msdn.microsoft.com/silverlightut</a>     <br /><a href="http://silverlight.codeplex.com/">http://silverlight.codeplex.com/</a>     <br /><a href="http://www.jeff.wilcox.name/2008/03/silverlight2-unit-testing/">http://www.jeff.wilcox.name/2008/03/silverlight2-unit-testing/</a></p>  <p>   <br />NUnit Testing with Silverlight     <br /><a href="http://weblogs.asp.net/nunitaddin/archive/2008/05/01/silverlight-nunit-projects.aspx">http://weblogs.asp.net/nunitaddin/archive/2008/05/01/silverlight-nunit-projects.aspx</a>     <br /></p>  <p>Useful Testing Tools    <br /><a href="http://testdriven.net/">http://testdriven.net/</a>     <br /><a href="http://nunit.org/">http://nunit.org/</a>     <br /><a href="http://code.google.com/p/moq/">http://code.google.com/p/moq/</a>     <br /><a href="http://www.ayende.com/projects/rhino-mocks.aspx">http://www.ayende.com/projects/rhino-mocks.aspx</a></p>  <p>&#160;</p>  <h1>Navigation Framework</h1>  <p><a href="http://www.silverlightshow.net/items/The-Silverlight-3-Navigation-Framework.aspx">http://www.silverlightshow.net/items/The-Silverlight-3-Navigation-Framework.aspx</a>     <br /><a href="http://www.silverlight.net/learn/videos/silverlight-videos/navigation-framework/">http://www.silverlight.net/learn/videos/silverlight-videos/navigation-framework/</a></p>  <p>&#160;</p>  <h1>Farseer Physics Engine</h1>  <p><a href="http://farseerphysics.codeplex.com/Wikipage">http://farseerphysics.codeplex.com/Wikipage</a>     <br /><a href="http://physicshelper.codeplex.com/Wikipage">http://physicshelper.codeplex.com/Wikipage</a> <a href="http://www.andybeaulieu.com/Home/tabid/67/Default.aspx">http://www.andybeaulieu.com/Home/tabid/67/Default.aspx</a></p>  <p>&#160;</p>  <h1>Windows Phone 7</h1>  <p><a href="http://www.silverlight.net/getstarted/devices/windows-phone/">http://www.silverlight.net/getstarted/devices/windows-phone/</a>     <br /><a href="http://msdn.microsoft.com/en-us/library/ff402535%28VS.92%29.aspx">http://msdn.microsoft.com/en-us/library/ff402535%28VS.92%29.aspx</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2010-04-16 14:01:00</wp:post_date>
		<wp:post_date_gmt>2010-04-16 14:01:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-silverlightning-talks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="post_tag" nicename="silverlightning-talks"><![CDATA[Silverlightning Talks]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; My ViewModel Base</title>
		<link>http://houseofbilz.com/archives/2010/05/08/adventures-in-mvvm-my-viewmodel-base/</link>
		<pubDate>Sat, 08 May 2010 14:02:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/05/08/adventures-in-mvvm-my-viewmodel-base/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-My-ViewModel-Base" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2010%2F05%2F08%2Fadventures-in-mvvm-ndash-my-viewmodel-base.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2010%2f05%2f08%2fadventures-in-mvvm-ndash-my-viewmodel-base.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2010%2f05%2f08%2fadventures-in-mvvm-ndash-my-viewmodel-base.aspx" /></a></p>  <p>First, I’d like to say: <strong>THIS IS NOT A NEW MVVM FRAMEWORK.</strong> I tend to believe that MVVM support code should be specific to the system you are building and the developers working on it.&#160; I have yet to find an MVVM framework that does everything I want it to without doing too much.&#160; Don’t get me wrong… there are some good frameworks out there.&#160; I just like to pick and choose things that make sense for me.&#160; As of Silveright 4, they don’t support binding to dynamic properties, so some of the capabilities are lost, but with a <a href="http://houseofbilz.com/archive/2010/05/14/adventures-in-mvvm-ndash-my-viewmodel-base-ndash-silverlight-support.aspx">little hacking</a> we can make it work.</p>  <p>That being said, I want to share my ViewModel base class with the world.&#160; I have had several conversations with people about the problems I have solved using this ViewModel base.&#160; A while back, I posted an article about some experiments with a “<a href="http://geekswithblogs.net/HouseOfBilz/archive/2009/10/20/adventures-in-mvvm-ndash-a-rails-inspired-viewmodel.aspx">Rails Inspired ViewModel</a>”.&#160; What followed from those ideas was a ViewModel base class that I take with me and use in my projects.&#160; It has a lot of features, all designed to reduce the friction in writing view models. I have put the code out on Codeplex under the project: <a href="http://viewmodelsupport.codeplex.com">ViewModelSupport</a>.</p>  <p>Finally, this article focuses on the ViewModel and only glosses over the View and the Model.&#160; Without all three, you don’t have MVVM.&#160; But this base class is for the ViewModel, so that is what I am focusing on.</p>  <p><strong>Features:</strong></p>  <ol>   <li><a href="#VMB.1">Automatic Command Plumbing</a> </li>    <li><a href="#VMB.2">Property Change Notification</a> </li>    <li><a href="#VMB.3">Strongly Typed Property Getter/Setters</a> </li>    <li><a href="#VMB.4">Dynamic Properties</a> </li>    <li><a href="#VMB.5">Default Property values</a> </li>    <li><a href="#VMB.6">Derived Properties</a> </li>    <li><a href="#VMB.7">Automatic Method Execution</a> </li>    <li><a href="#VMB.8">Command CanExecute Change Notification</a> </li>    <li><a href="#VMB.9">Design-Time Detection</a> </li>    <li><a href="#VMB.10">What about Silverlight?</a> </li> </ol>  <h4>Automatic Command Plumbing</h4>  <p>This feature takes the plumbing out of creating commands.&#160; The common pattern for commands in a ViewModel is to have an Execute method as well as an optional CanExecute method.&#160; To plumb that together, you create an ICommand Property, and set it in the constructor like so:</p>  <p><strong>Before</strong></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:a6cfb050-745a-4872-9efc-942325c00278" class="wlWriterSmartContent">   <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> AutomaticCommandViewModel
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> AutomaticCommandViewModel()
    {
        MyCommand </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> DelegateCommand(Execute_MyCommand, CanExecute_MyCommand);
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Execute_MyCommand()
    {
        </span><span style="color: #008000">//</span><span style="color: #008000"> Do something</span><span style="color: #008000">
</span><span style="color: #000000">    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">bool</span><span style="color: #000000"> CanExecute_MyCommand()
    {
        </span><span style="color: #008000">//</span><span style="color: #008000"> Are we in a state to do something?</span><span style="color: #008000">
</span><span style="color: #000000">        </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #0000ff">true</span><span style="color: #000000">;
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> DelegateCommand MyCommand { </span><span style="color: #0000ff">get</span><span style="color: #000000">; </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">set</span><span style="color: #000000">; }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>With the base class, this plumbing is automatic and the property (MyCommand of type ICommand) is created for you.&#160; The base class uses the convention that methods be prefixed with Execute_ and CanExecute_ in order to be plumbed into commands with the property name after the prefix.&#160; You are left to be expressive with your behavior without the plumbing.&#160; If you are wondering how CanExecuteChanged is raised, see the later section “<a href="#VMB.8">Command CanExecute Change Notification</a>”.</p>

<p><strong>After</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:14a1461b-d14f-47d5-ba10-5ad497c164be" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> AutomaticCommandViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Execute_MyCommand()
    {
        </span><span style="color: #008000">//</span><span style="color: #008000"> Do something</span><span style="color: #008000">
</span><span style="color: #000000">    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">bool</span><span style="color: #000000"> CanExecute_MyCommand()
    {
        </span><span style="color: #008000">//</span><span style="color: #008000"> Are we in a state to do something?</span><span style="color: #008000">
</span><span style="color: #000000">        </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #0000ff">true</span><span style="color: #000000">;
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h4>&#160;</h4>

<h4><a name="VMB.2">Property Change Notification</a></h4>

<p>One thing that always kills me when implementing ViewModels is how to make properties that notify when they change (via the INotifyPropertyChanged interface).&#160; There have been many attempts to make this more automatic.&#160; My base class includes one option.&#160; There are others, but I feel like this works best for me.</p>

<p>The common pattern (without my base class) is to create a private backing store for the variable and specify a getter that returns the private field.&#160; The setter will set the private field and fire an event that notifies the change, only if the value has changed.</p>

<p><strong>Before</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:3d02bc74-f4a8-4969-b4da-1dfa02a22ac3" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> PropertyHelpersViewModel : INotifyPropertyChanged
{
    </span><span style="color: #0000ff">private</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> text;
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Text
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> text; }
        </span><span style="color: #0000ff">set</span><span style="color: #000000">
        {
            </span><span style="color: #0000ff">if</span><span style="color: #000000">(text </span><span style="color: #000000">!=</span><span style="color: #000000"> value)
            {
                text </span><span style="color: #000000">=</span><span style="color: #000000"> value;
                RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Text</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
            }
        }
    }

    </span><span style="color: #0000ff">protected</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> RaisePropertyChanged(</span><span style="color: #0000ff">string</span><span style="color: #000000"> propertyName)
    {
        var handlers </span><span style="color: #000000">=</span><span style="color: #000000"> PropertyChanged;
        </span><span style="color: #0000ff">if</span><span style="color: #000000">(handlers </span><span style="color: #000000">!=</span><span style="color: #000000"> </span><span style="color: #0000ff">null</span><span style="color: #000000">)
            handlers(</span><span style="color: #0000ff">this</span><span style="color: #000000">, </span><span style="color: #0000ff">new</span><span style="color: #000000"> PropertyChangedEventArgs(propertyName));
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">event</span><span style="color: #000000"> PropertyChangedEventHandler PropertyChanged;
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>This way of defining properties is error-prone and tedious.&#160; Too much plumbing.&#160; My base class eliminates much of that plumbing with the same functionality:</p>

<p><strong>After</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:12c2d3ea-f186-4de4-b580-4fb3f9d20391" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> PropertyHelpersViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Text
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get</span><span style="color: #000000">&lt;</span><span style="color: #0000ff">string</span><span style="color: #000000">&gt;</span><span style="color: #000000">(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Text</span><span style="color: #800000">&quot;</span><span style="color: #000000">); }
        </span><span style="color: #0000ff">set</span><span style="color: #000000"> { Set(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Text</span><span style="color: #800000">&quot;</span><span style="color: #000000">, value);}
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h4></h4>

<h4>&#160;</h4>

<h4><a name="VMB.3">Strongly Typed Property Getters/Setters</a></h4>

<p>It turns out that we can do better than that.&#160; We are using a strongly typed language where the use of “Magic Strings” is often frowned upon.&#160; Lets make the names in the getters and setters strongly typed:</p>

<p><strong>A refinement</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:59293d3a-dbaa-4b14-a9b0-b64cc37fd4bd" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> PropertyHelpersViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Text
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Text); }
        </span><span style="color: #0000ff">set</span><span style="color: #000000"> { Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Text, value); }
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h4>&#160;</h4>

<h4><a name="VMB.4">Dynamic Properties</a></h4>

<p>In C# 4.0, we have the ability to program statically OR dynamically.&#160; This base class lets us leverage the powerful dynamic capabilities in our ecosystem. (This is how the automatic commands are implemented, BTW)&#160; By calling Set(“Foo”, 1), you have now created a dynamic property called Foo.&#160; It can be bound against like any static property.&#160; The opportunities are endless.&#160; One great way to exploit this behavior is if you have a customizable view engine with templates that bind to properties defined by the user.&#160; The base class just needs to create the dynamic properties at runtime from information in the model, and the custom template can bind even though the static properties do not exist. All dynamic properties still benefit from the notifiable capabilities that static properties do.</p>

<p>For any nay-sayers out there that don’t like using the dynamic features of C#, just remember this: the act of binding the View to a ViewModel is dynamic already.&#160; Why not exploit it?&#160; Get over it :)</p>

<p><strong>Just declare the property dynamically</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:0af4d350-5601-4c6f-8bcc-78588703effe" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> DynamicPropertyViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> DynamicPropertyViewModel()
    {
        Set(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Foo</span><span style="color: #800000">&quot;</span><span style="color: #000000">, </span><span style="color: #800000">&quot;</span><span style="color: #800000">Bar</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p><strong>Then reference it normally</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b3f2f644-990c-4f03-96a4-87f382fd00f9" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">TextBlock </span><span style="color: #ff0000">Text</span><span style="color: #0000ff">=&quot;</span><span style="color: #808000">{Binding Foo}</span><span style="color: #0000ff">&quot;</span><span style="color: #ff0000"> </span><span style="color: #0000ff">/&gt;</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p><strong></strong></p>

<h4>&#160;</h4>

<h4><a name="VMB.5">Default Property Values</a></h4>

<p>The Get() method also allows for default properties to be set.&#160; Don’t set them in the constructor.&#160; Set them in the property and keep the related code together:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:c2dcd9b5-fd18-42da-84e4-c1ae7486ab03" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Text
{
    </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Text, </span><span style="color: #800000">&quot;</span><span style="color: #800000">This is the default value</span><span style="color: #800000">&quot;</span><span style="color: #000000">); }
    </span><span style="color: #0000ff">set</span><span style="color: #000000"> { Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Text, value);}
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h4>&#160;</h4>

<h4><a name="VMB.6">Derived Properties</a></h4>

<p>This is something I <a href="http://houseofbilz.com/archive/2009/11/14/adventures-in-mvvm----dependant-properties-with-inotifypropertychanged.aspx">blogged about a while back</a> in more detail.&#160; This feature came from the chaining of property notifications when one property affects the results of another, like this:</p>

<h4></h4>

<p><strong>Before</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:175eb2b2-8c26-430f-9416-944d4613c1a8" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> DependantPropertiesViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">double</span><span style="color: #000000"> Score
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score); }
        </span><span style="color: #0000ff">set</span><span style="color: #000000">
        {
            Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score, value);
            RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Percentage</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
            RaisePropertyChanged(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Output</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
        }
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> Percentage
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> (</span><span style="color: #0000ff">int</span><span style="color: #000000">)(</span><span style="color: #800080">100</span><span style="color: #000000"> </span><span style="color: #000000">*</span><span style="color: #000000"> Score); }
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Output
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #800000">&quot;</span><span style="color: #800000">You scored </span><span style="color: #800000">&quot;</span><span style="color: #000000"> </span><span style="color: #000000">+</span><span style="color: #000000"> Percentage </span><span style="color: #000000">+</span><span style="color: #000000"> </span><span style="color: #800000">&quot;</span><span style="color: #800000">%.</span><span style="color: #800000">&quot;</span><span style="color: #000000">; }
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>The problem is: The setter for Score has to be responsible for notifying the world that Percentage and Output have also changed.&#160; This, to me, is backwards.&#160;&#160;&#160; It certainly violates the “<a href="http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod">Single Responsibility Principle</a>.” I have been bitten in the rear more than once by problems created from code like this.&#160; What we really want to do is invert the dependency.&#160; Let the Percentage property declare that it changes when the Score Property changes.</p>

<p><strong>After</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:462bd99f-148f-4775-ae03-c6cf12f3fd98" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> DependantPropertiesViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">double</span><span style="color: #000000"> Score
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score); }
        </span><span style="color: #0000ff">set</span><span style="color: #000000"> { Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score, value); }
    }

    [DependsUpon(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Score</span><span style="color: #800000">&quot;</span><span style="color: #000000">)]
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">int</span><span style="color: #000000"> Percentage
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> (</span><span style="color: #0000ff">int</span><span style="color: #000000">)(</span><span style="color: #800080">100</span><span style="color: #000000"> </span><span style="color: #000000">*</span><span style="color: #000000"> Score); }
    }

    [DependsUpon(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Percentage</span><span style="color: #800000">&quot;</span><span style="color: #000000">)]
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Output
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #800000">&quot;</span><span style="color: #800000">You scored </span><span style="color: #800000">&quot;</span><span style="color: #000000"> </span><span style="color: #000000">+</span><span style="color: #000000"> Percentage </span><span style="color: #000000">+</span><span style="color: #000000"> </span><span style="color: #800000">&quot;</span><span style="color: #800000">%.</span><span style="color: #800000">&quot;</span><span style="color: #000000">; }
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h4>&#160;</h4>

<h4><a name="VMB.7">Automatic Method Execution</a></h4>

<p>This one is extremely similar to the previous, but it deals with method execution as opposed to property.&#160; When you want to execute a method triggered by property changes, let the method declare the dependency instead of the other way around.</p>

<p><strong>Before</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:96b9f4c0-884b-4ade-bb65-4b1954af6e4e" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> DependantMethodsViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">double</span><span style="color: #000000"> Score
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score); }
        </span><span style="color: #0000ff">set</span><span style="color: #000000">
        {
            Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score, value);
            WhenScoreChanges();
        }
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> WhenScoreChanges()
    {
        </span><span style="color: #008000">//</span><span style="color: #008000"> Handle this case</span><span style="color: #008000">
</span><span style="color: #000000">    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p><strong>After</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b4314cc0-8387-4bb8-81db-e23c0cd1372c" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #000000">    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> DependantMethodsViewModel : ViewModelBase
    {
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">double</span><span style="color: #000000"> Score
        {
            </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score); }
            </span><span style="color: #0000ff">set</span><span style="color: #000000"> { Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Score, value); }
        }

        [DependsUpon(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Score</span><span style="color: #800000">&quot;</span><span style="color: #000000">)]
        </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> WhenScoreChanges()
        {
            </span><span style="color: #008000">//</span><span style="color: #008000"> Handle this case</span><span style="color: #008000">
</span><span style="color: #000000">        }
    }</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h4>&#160;</h4>

<h4><a name="VMB.8">Command CanExecute Change Notification</a></h4>

<p>Back to Commands.&#160; One of the responsibilities of commands that implement ICommand – it must fire an event declaring that CanExecute() needs to be re-evaluated.&#160; I wanted to wait until we got past a few concepts before explaining this behavior.&#160; You can use the same mechanism here to fire off the change.&#160; In the CanExecute_ method, declare the property that it depends upon.&#160; When that property changes, the command will fire a CanExecuteChanged event, telling the View to re-evaluate the state of the command.&#160; The View will make appropriate adjustments, like disabling the button.</p>

<p><strong>DependsUpon works on CanExecute methods as well</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:81b91521-a967-4457-af0c-742b0b65c47c" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> CanExecuteViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Execute_MakeLower()
    {
        Output </span><span style="color: #000000">=</span><span style="color: #000000"> Input.ToLower();
    }

    [DependsUpon(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Input</span><span style="color: #800000">&quot;</span><span style="color: #000000">)]
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">bool</span><span style="color: #000000"> CanExecute_MakeLower()
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> </span><span style="color: #000000">!</span><span style="color: #0000ff">string</span><span style="color: #000000">.IsNullOrWhiteSpace(Input);
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Input
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Input); }
        </span><span style="color: #0000ff">set</span><span style="color: #000000"> { Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Input, value);}
    }

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">string</span><span style="color: #000000"> Output
    {
        </span><span style="color: #0000ff">get</span><span style="color: #000000"> { </span><span style="color: #0000ff">return</span><span style="color: #000000"> Get(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Output); }
        </span><span style="color: #0000ff">set</span><span style="color: #000000"> { Set(() </span><span style="color: #000000">=&gt;</span><span style="color: #000000"> Output, value); }
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>&#160;</p>

<h4><a name="VMB.9">Design-Time Detection</a></h4>

<p>If you want to add design-time data to your ViewModel, the base class has a property that lets you ask if you are in the designer.&#160; You can then set some default values that let your designer see what things might look like in runtime.</p>

<p><strong>Use the IsInDesignMode property</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:1a20699e-0a10-4a8a-949c-c10753540af1" class="wlWriterSmartContent">
  <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> DependantPropertiesViewModel()
{
    </span><span style="color: #0000ff">if</span><span style="color: #000000">(IsInDesignMode)
    {
        Score </span><span style="color: #000000">=</span><span style="color: #000000"> .</span><span style="color: #800080">5</span><span style="color: #000000">;
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<h4>&#160;</h4>

<h4><a name="VMB.10">What About Silverlight?</a></h4>

<p>Although you cannot bind directly to dynamic properties and convention-based commands, you CAN bind using a value converter.&#160; This little hack is explained in more detail in my <a href="http://houseofbilz.com/archive/2010/05/14/adventures-in-mvvm-ndash-my-viewmodel-base-ndash-silverlight-support.aspx">next post</a>.&#160; Other than that slight difference, all of these features work in Silverlight just as they do in WPF.&#160; You don’t need to code your ViewModels any differently to get it to work, which aids in the sharing of behavior between WPF and Silverlight.</p>

<p>&#160;</p>

<h4>Good to go?</h4>

<p>So, that concludes the feature explanation of my ViewModel base class.&#160; Feel free to take it, fork it, whatever.&#160; It is <a href="http://viewmodelsupport.codeplex.com">hosted on CodePlex</a>.&#160; When I find other useful additions, I will add them to the public repository.&#160; I use this base class every day.&#160; It is mature, and well tested.&#160; If, however, you find any problems with it, please let me know!&#160; Also, feel free to suggest patches to me via the CodePlex site.&#160; :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2010-05-08 14:02:00</wp:post_date>
		<wp:post_date_gmt>2010-05-08 14:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-my-viewmodel-base</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="view-model-support"><![CDATA[VIew Model Support]]></category>
		<category domain="post_tag" nicename="wpf"><![CDATA[WPF]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>219</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in MVVM &ndash; Model-View-ViewModel &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-14 13:36:18</wp:comment_date>
			<wp:comment_date_gmt>2010-06-14 13:36:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] My ViewModel Base [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>587</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Casto]]></wp:comment_author>
			<wp:comment_author_email>mattcasto@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://google.com/profiles/mattcasto</wp:comment_author_url>
			<wp:comment_author_IP>198.234.148.3</wp:comment_author_IP>
			<wp:comment_date>2010-07-21 12:59:20</wp:comment_date>
			<wp:comment_date_gmt>2010-07-21 12:59:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I hadn't thought of some of this, but I think I can make immediate use of it. I especially like the DependentUpon attribute.

I'm currently using the MVVM Light Toolkit on a Silverlight 4 project, and I think I'm going to try to wrap some of this into the ViewModelBase class.

Very nice!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>270</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in Ruby MVVM &ndash; A ViewModel Base Class in Ruby &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/06/19/adventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 03:01:06</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 03:01:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] to.&#160; My goal is to get to a completely convention-based approach to commands, much like my C# ViewModel Support.&#160; Stay [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26248</wp:comment_id>
			<wp:comment_author><![CDATA[improvements]]></wp:comment_author>
			<wp:comment_author_email>douglas.fritz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mmcfm.com/</wp:comment_author_url>
			<wp:comment_author_IP>93.118.73.213</wp:comment_author_IP>
			<wp:comment_date>2014-05-16 06:46:33</wp:comment_date>
			<wp:comment_date_gmt>2014-05-16 06:46:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read several just right stuff here. Certainly orth bookmarking for 
revisiting. I wonder how a lot attempt you set to make 
any such excellent informative site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28698</wp:comment_id>
			<wp:comment_author><![CDATA[forex broker]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.torcidadonautico.com.br/blogs/521050/1096595/forex-trading-no-such-thing-as</wp:comment_author_url>
			<wp:comment_author_IP>69.12.73.203</wp:comment_author_IP>
			<wp:comment_date>2014-08-26 05:02:36</wp:comment_date>
			<wp:comment_date_gmt>2014-08-26 05:02:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>forex broker...</strong>

Adventures in MVVM - My ViewModel Base « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30207</wp:comment_id>
			<wp:comment_author><![CDATA[clons]]></wp:comment_author>
			<wp:comment_author_email>tressaserna@moose-mail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/fadednylons165/article-caspa-remedios-caseros-743750293.html</wp:comment_author_url>
			<wp:comment_author_IP>5.157.51.209</wp:comment_author_IP>
			<wp:comment_date>2014-10-12 10:53:12</wp:comment_date>
			<wp:comment_date_gmt>2014-10-12 10:53:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Respeta los aceites esenciales de nuestra barba y por si fuera poco alivia el picor.
Se suele usar asimismo en tratamientos para el eccema y 
la psoriasis.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13213</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.93.157</wp:comment_author_IP>
			<wp:comment_date>2011-12-13 10:51:43</wp:comment_date>
			<wp:comment_date_gmt>2011-12-13 10:51:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Ackroydd:  Indeed, DelegateCommand implements ICommand.  You can write it either way.  For purposes of illustration, the difference is inconsequential.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4595</wp:comment_id>
			<wp:comment_author><![CDATA[shahi]]></wp:comment_author>
			<wp:comment_author_email>hshahi@ntlworld.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.100.43.134</wp:comment_author_IP>
			<wp:comment_date>2010-12-31 12:03:22</wp:comment_date>
			<wp:comment_date_gmt>2010-12-31 12:03:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi 
First of all I wanted to congradulate you for your viewmodelbase. it is great.
I am just wondering if there is an easy way to implement from Xaml event to command
so that we can bind event to command and its argument in view model
like there is in the following link
http://blog.roboblob.com/category/silverlight/
without breaking any thing.

Thanks
Shahi]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6883</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.72.133</wp:comment_author_IP>
			<wp:comment_date>2011-02-02 01:34:05</wp:comment_date>
			<wp:comment_date_gmt>2011-02-02 01:34:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Matt:

I think I'd need to see more.  Does Data_Selection_ViewModel derive from ViewModelBase?  I am assuming you are using C# 4.0, as it relies on dynamic properties to work.  Is this WPF or Silverlight?  WPF can bind to dynamic properties, but Silverlight cannot.  You need to use the [MyCommand] trick that is described here for Silverlight: http://houseofbilz.com/archives/2010/05/14/adventures-in-mvvm-my-viewmodel-base-silverlight-support/.  Also, it is important that your methods be prefaced with Execute_ and be public.

Finally, have you confirmed that your DI container in PRISM is properly injecting your view model?  Are you sure it is not null?

Can you point me to an example where it is not working?

I hope some of this helps,
B]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6908</wp:comment_id>
			<wp:comment_author><![CDATA[Shailesh]]></wp:comment_author>
			<wp:comment_author_email>aoemraw@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.254.148.83</wp:comment_author_IP>
			<wp:comment_date>2011-02-03 12:55:11</wp:comment_date>
			<wp:comment_date_gmt>2011-02-03 12:55:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian,

Very nice viewmodel-base. There are definitely features that I want to try/use in the viewmodel-base of my current project.

I have a question about feature 2 &amp; 3: Strongly Typed Property Getters/Setters

I was wondering about the implementation of this feature on performance. Isn't this (much) slower compared to normal properties?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6913</wp:comment_id>
			<wp:comment_author><![CDATA[Shailesh]]></wp:comment_author>
			<wp:comment_author_email>aoemraw@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.254.148.83</wp:comment_author_IP>
			<wp:comment_date>2011-02-03 13:35:30</wp:comment_date>
			<wp:comment_date_gmt>2011-02-03 13:35:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[*implementation* = effect
(in my previous comment, apologies)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32875</wp:comment_id>
			<wp:comment_author><![CDATA[v2 Cigs Menthol]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.releasewire.com/press-releases/v2-cigs-coupon-code/e-cigarette-giveaway/release-394485.htm</wp:comment_author_url>
			<wp:comment_author_IP>69.12.88.199</wp:comment_author_IP>
			<wp:comment_date>2014-12-01 16:33:58</wp:comment_date>
			<wp:comment_date_gmt>2014-12-01 16:33:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>v2 Cigs Menthol...</strong>

Adventures in MVVM - My ViewModel Base « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9466</wp:comment_id>
			<wp:comment_author><![CDATA[Bryan D]]></wp:comment_author>
			<wp:comment_author_email>bryan.d.hill@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.165.233.62</wp:comment_author_IP>
			<wp:comment_date>2011-09-12 04:35:58</wp:comment_date>
			<wp:comment_date_gmt>2011-09-12 04:35:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Brian

Thanks for this great helper class, the [DependsUpon] attribute is truly wonderful.

As an exercise in learning DynamicObject and Attributes I decided to implement your idea of [Model] and [Expose("FieldName")] attributes for Properties and Fields on the ViewModel. 

I'm not exactly sure what you had in mind, my implementation tries to do the following:

1. A [Model] attribute exposes all fields in the decorated field or property.
2. A [Expose("FieldName"}] attribute exposes only the specified field of the decorated field or property.

If you're interested, I'd like to share it with you and get your opinion on my implementation.

Thanks,
Bryan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9497</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.85</wp:comment_author_IP>
			<wp:comment_date>2011-09-14 10:02:23</wp:comment_date>
			<wp:comment_date_gmt>2011-09-14 10:02:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bryan,

Yes, please!  Can you start up a conversation on the CodePlex project?  I'd love to see a patch or something like that and discuss it further.

Thanks,
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4722</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.72.133</wp:comment_author_IP>
			<wp:comment_date>2011-01-01 17:40:29</wp:comment_date>
			<wp:comment_date_gmt>2011-01-01 17:40:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Shahi: 

The ViewModelBase class does not facilitate any particular XAML-side utilities.  BUT, you can use any mechanism you want to do this type of binding.  In a previous post, I came up with a command behavior that you can bring into your project that lets you bind any event to commands.

I wrote about it here: http://houseofbilz.com/archives/2009/08/27/adventures-in-mvvm-binding-commands-to-any-event/ 

Good luck :)
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75093</wp:comment_id>
			<wp:comment_author><![CDATA[price of walk in tubs San Diego]]></wp:comment_author>
			<wp:comment_author_email>hilda_richey@jetemail.net</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=6ajzWy4QmG4</wp:comment_author_url>
			<wp:comment_author_IP>191.101.152.87</wp:comment_author_IP>
			<wp:comment_date>2015-10-07 10:50:54</wp:comment_date>
			<wp:comment_date_gmt>2015-10-07 10:50:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic website you have here but I was wanting to know if 
you knew of any discussion boards that cover the same 
topics discussed in this article? I'd really love to be a part of community where I can get advice from other 
experienced individuals that share the same interest. If you have any suggestions, please let me know.
Many thanks!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6881</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>kruz79@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.23.148.213</wp:comment_author_IP>
			<wp:comment_date>2011-02-01 20:45:54</wp:comment_date>
			<wp:comment_date_gmt>2011-02-01 20:45:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,

Just want to say that I love your view model base, I'm using it quite a bit in the program I'm writing.  I'm running into a snag with commanding though.  I'm using PRISM, I have the view model base in a framework DLL project attached to the solution.  In a module I have a view that is having its datacontext set on the back end like so

            public Data_Selection_View(Data_Selection_ViewModel viewModel)
            {
                InitializeComponent();
                this.DataContext = viewModel;
            }
I'm unable to get commanding to work even with this simple code


I'm using the MyCommand code from your example.

Any ideas?

Thanks.
Matt]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80398</wp:comment_id>
			<wp:comment_author><![CDATA[http://bit.ly/1T6Up89]]></wp:comment_author>
			<wp:comment_author_email>collette.speight@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bit.ly/1T6Up89</wp:comment_author_url>
			<wp:comment_author_IP>201.164.13.171</wp:comment_author_IP>
			<wp:comment_date>2016-02-15 13:36:35</wp:comment_date>
			<wp:comment_date_gmt>2016-02-15 13:36:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Donkey Kong gave approach to the platforming style, a plot 
and multiple ranges, whereas Tremendous Mario Bros.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23581</wp:comment_id>
			<wp:comment_author><![CDATA[plumbinghub plumber]]></wp:comment_author>
			<wp:comment_author_email>elanacramsie@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.plumbinghub.com.sg/</wp:comment_author_url>
			<wp:comment_author_IP>184.154.154.11</wp:comment_author_IP>
			<wp:comment_date>2014-03-03 14:42:31</wp:comment_date>
			<wp:comment_date_gmt>2014-03-03 14:42:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Magnificent items from you, man. I've take into account your stuff prior to and you are simply too great.
I really like what you've bought right here, certainly like 
what you are stating and the way in which in which 
you are saying it. You're making it enjoyable and you continue to take 
care of to stay it smart. I cant wait to read much more from you.
That is actually a terrific website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29398</wp:comment_id>
			<wp:comment_author><![CDATA[Heating And Air Conditioning Repair Reno]]></wp:comment_author>
			<wp:comment_author_email>kristashears@web.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=qawk-QXamfQ</wp:comment_author_url>
			<wp:comment_author_IP>89.44.27.127</wp:comment_author_IP>
			<wp:comment_date>2014-09-25 06:43:33</wp:comment_date>
			<wp:comment_date_gmt>2014-09-25 06:43:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think that everything said was very reasonable.
However, what about this? what if you composed a catchier title?

I am not suggesting your content is not solid, but suppose you added a title that makes people desire more?
I mean Adventures in MVVM - My ViewModel Base ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37359</wp:comment_id>
			<wp:comment_author><![CDATA[Bryan Zwan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ithagi.be/?doc=skel&amp;type=hosting&amp;dom=bryan.edu</wp:comment_author_url>
			<wp:comment_author_IP>107.158.43.172</wp:comment_author_IP>
			<wp:comment_date>2015-02-21 12:07:10</wp:comment_date>
			<wp:comment_date_gmt>2015-02-21 12:07:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Bryan Zwan...</strong>

Adventures in MVVM - My ViewModel Base « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13167</wp:comment_id>
			<wp:comment_author><![CDATA[Ackroydd]]></wp:comment_author>
			<wp:comment_author_email>ackroydd10@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>46.64.17.165</wp:comment_author_IP>
			<wp:comment_date>2011-12-12 01:06:04</wp:comment_date>
			<wp:comment_date_gmt>2011-12-12 01:06:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think you have a typo in the first block of code, or at least a little confusion generated for beginners.
In the paragraph preceding you mention an ICommand Property, but the code shows

 public DelegateCommand MyCommand { get; private set; }

In the sample project it's actually

    //    public ICommand MyCommand { get; private set; }

I know DelegateCommand actually implements ICommand so maybe it works either way (in any case it's the not-implemented example), but it took a while to nut it out when the concepts were unfamiliar.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29186</wp:comment_id>
			<wp:comment_author><![CDATA[Lino]]></wp:comment_author>
			<wp:comment_author_email>linoyamamoto@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.salespider.com/b-377880653/west-lake-village-emergency-plumbers-llc</wp:comment_author_url>
			<wp:comment_author_IP>93.118.69.97</wp:comment_author_IP>
			<wp:comment_date>2014-09-18 09:06:08</wp:comment_date>
			<wp:comment_date_gmt>2014-09-18 09:06:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty section of content. I just stumbled upon your blog and in accession capital 
to assert that I acquire actually enjoyed account 
your blog posts. Any way I'll be subscribing to 
your feeds and even I achievement you access consistently quickly.


Check out my web blog - web site (<a href="http://www.salespider.com/b-377880653/west-lake-village-emergency-plumbers-llc" rel="nofollow">Lino</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71552</wp:comment_id>
			<wp:comment_author><![CDATA[Walk In Bath Washington]]></wp:comment_author>
			<wp:comment_author_email>anneliesegirardi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Youtu.be/8gTWzsLE8eo</wp:comment_author_url>
			<wp:comment_author_IP>89.44.23.3</wp:comment_author_IP>
			<wp:comment_date>2015-09-11 23:40:26</wp:comment_date>
			<wp:comment_date_gmt>2015-09-11 23:40:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[magnificent issues altogether, you just gained a new reader.
What could you suggest about your submit that you simply made a few days in the past?

Any positive?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28009</wp:comment_id>
			<wp:comment_author><![CDATA[Annmarie]]></wp:comment_author>
			<wp:comment_author_email>annmarie_mcanulty@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/datascribes</wp:comment_author_url>
			<wp:comment_author_IP>192.77.247.172</wp:comment_author_IP>
			<wp:comment_date>2014-07-27 02:48:24</wp:comment_date>
			<wp:comment_date_gmt>2014-07-27 02:48:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An outstanding share! I have just forwarded this onto a co-worker who had been conducting a little research on this.

And he in fact bought me dinner because I found it for him...
lol. So allow me to reword this.... Thanks for the meal!!
But yeah, thanks for spending the time to talk about this topic here on your website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29930</wp:comment_id>
			<wp:comment_author><![CDATA[Retha]]></wp:comment_author>
			<wp:comment_author_email>gilbertkeartland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jtharding.com/2014/05/12/one-1000/</wp:comment_author_url>
			<wp:comment_author_IP>89.44.27.102</wp:comment_author_IP>
			<wp:comment_date>2014-10-06 14:37:01</wp:comment_date>
			<wp:comment_date_gmt>2014-10-06 14:37:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am regular reader, how are you everybody? This piece 
of writing posted at this site is in fact nice.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16209</wp:comment_id>
			<wp:comment_author><![CDATA[Handling INotifyPropertyChanged for dependant properties]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.surroundedbybraces.com/handling-inotifypropertychanged-for-dependant-properties/</wp:comment_author_url>
			<wp:comment_author_IP>69.89.31.209</wp:comment_author_IP>
			<wp:comment_date>2012-06-26 10:25:01</wp:comment_date>
			<wp:comment_date_gmt>2012-06-26 10:25:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] publication that inspired this implementation was written by Brian Genisio in his article entitled Adventures in MVVM &#8211; My ViewModel Base. The implementation presented here expands upon those ideas to create a stack of view model base [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6939</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.72.133</wp:comment_author_IP>
			<wp:comment_date>2011-02-06 15:55:22</wp:comment_date>
			<wp:comment_date_gmt>2011-02-06 15:55:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Shailesh:  Yes, certainly, this approach is slower than a private backing store.  But, not by much.  It is not like you are comparing it to plain old properties.  All the same stuff still needs to happen -- make sure that the value is not the same, set the value and fire the event-- but the difference is a Dictionary or a private field.  

When it comes down to it, though, this has never gotten in my way.  The difference is negligible compared to everything else that is happening in the Silverlight UI.  If you have thousands of getters/setters happening per second, it might matter, but usually that is not the case in a ViewModel.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29522</wp:comment_id>
			<wp:comment_author><![CDATA[a c repair prices]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://thechsen-1.tumblr.com/post/98210349662</wp:comment_author_url>
			<wp:comment_author_IP>89.47.21.249</wp:comment_author_IP>
			<wp:comment_date>2014-09-28 04:59:43</wp:comment_date>
			<wp:comment_date_gmt>2014-09-28 04:59:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>a c repair prices...</strong>

Adventures in MVVM - My ViewModel Base « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29019</wp:comment_id>
			<wp:comment_author><![CDATA[cracks in foundation]]></wp:comment_author>
			<wp:comment_author_email>ramonitamccarter@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://apple-wiki.ru/7742/soaring-rents-inspire-52%25-of-queenslanders-to-purchase</wp:comment_author_url>
			<wp:comment_author_IP>115.84.105.137</wp:comment_author_IP>
			<wp:comment_date>2014-09-11 04:26:46</wp:comment_date>
			<wp:comment_date_gmt>2014-09-11 04:26:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do not even know how I ended up here, but I thought this post was good.
I do not know who you are but definitely you are going to a 
famous blogger if you are not already ;) Cheers!

For an incredible response please check-out this web-site 
<a href="http://apple-wiki.ru/7742/soaring-rents-inspire-52%25-of-queenslanders-to-purchase" rel="nofollow">cracks in foundation</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7401</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>kruz79@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>65.217.142.14</wp:comment_author_IP>
			<wp:comment_date>2011-04-13 15:01:54</wp:comment_date>
			<wp:comment_date_gmt>2011-04-13 15:01:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Brian

The split method would probably work best for me since I'm getting my models from RIA services.  

Where exactly would I place it in the code?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7761</wp:comment_id>
			<wp:comment_author><![CDATA[Craig Richards]]></wp:comment_author>
			<wp:comment_author_email>Craiganthonyrichards@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>110.174.243.77</wp:comment_author_IP>
			<wp:comment_date>2011-05-16 11:58:10</wp:comment_date>
			<wp:comment_date_gmt>2011-05-16 11:58:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rad post, can't wait ti try it out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8257</wp:comment_id>
			<wp:comment_author><![CDATA[Geert van Horrik]]></wp:comment_author>
			<wp:comment_author_email>geert@catenalogic.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.catenalogic.com</wp:comment_author_url>
			<wp:comment_author_IP>62.194.73.168</wp:comment_author_IP>
			<wp:comment_date>2011-06-27 08:15:46</wp:comment_date>
			<wp:comment_date_gmt>2011-06-27 08:15:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great to see that I am not the only one that thinks that all those "exxtremely simple" view-models should have more functionality than they have right now.

Most of the features you name in this blog post are already implemented in Catel (see http://catel.codeplex.com), for example:

1) Declaring objects as model
2) Automatic property change notification
3) Registering callbacks
4) Memory leak free (lots of (well-known) frameworks are full of memory leaks

I don't like the DependsUpon for commands. What if the developer uses 2 different parameter types? Will there be an exception, a warning, or will the method be ignored? I think that it's not a good thing to remove the "plumbing" of commands (it's just 2 lines of additional code, the declaration and instantation). In return of the "pluming" you can type checking and stuff is more clear for the next developer of the VM.

What I do like very much is the Expose attribute. In Catel we already have the Model and ViewModelToModel attributes which allows you to map a property from the model to the view model. However, I really like the idea of skipping this and allowing a user to simply expose a sub property via a simple attribute.

Thanks for the inspiration!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38395</wp:comment_id>
			<wp:comment_author><![CDATA[apartments in westwood fhsaa]]></wp:comment_author>
			<wp:comment_author_email>janistarleton@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.liveleak.com/c/507glenrock</wp:comment_author_url>
			<wp:comment_author_IP>219.246.65.143</wp:comment_author_IP>
			<wp:comment_date>2015-03-14 12:46:08</wp:comment_date>
			<wp:comment_date_gmt>2015-03-14 12:46:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This only can be possible in case of prior flight 
and hotel booking during your vacation. Baby boomers, retirees, investors or anyone who is sick and 
tired of the metropolitan burnout, should at least visit this land, which never fails to smitten, once.
Whether you are looking for a single bedroom Kiev apartments for 
rent or multiple bedroom apartments for rent in Kiev, Kiev Apartments Agency will be able to meet all your requirements very effectively.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9521</wp:comment_id>
			<wp:comment_author><![CDATA[Geert van Horrik]]></wp:comment_author>
			<wp:comment_author_email>geert@catenalogic.com</wp:comment_author_email>
			<wp:comment_author_url>http://catel.codeplex.com</wp:comment_author_url>
			<wp:comment_author_IP>62.194.73.70</wp:comment_author_IP>
			<wp:comment_date>2011-09-16 16:48:48</wp:comment_date>
			<wp:comment_date_gmt>2011-09-16 16:48:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just to let you know: we have implemented the Model and Expose attributes in Catel. For more information see this link:

http://catel.catenalogic.com/index.html?exposing_properties_of_a_model.htm

You might want to take a look at how it works. We used the ICustomTypeDescriptor to allow the dynamic objects to work, but unfortunately this only works in WPF (the interface is not implemented in Silverlight).

Good luck!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8200</wp:comment_id>
			<wp:comment_author><![CDATA[Edward]]></wp:comment_author>
			<wp:comment_author_email>emendez001@nc.rr.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.95.169.12</wp:comment_author_IP>
			<wp:comment_date>2011-06-21 17:11:49</wp:comment_date>
			<wp:comment_date_gmt>2011-06-21 17:11:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, I came across your post of the VM with Dynamic Properties and this is exactly what I needed. Great Job.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8195</wp:comment_id>
			<wp:comment_author><![CDATA[Luigi]]></wp:comment_author>
			<wp:comment_author_email>luigi.grilli@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.62.186.18</wp:comment_author_IP>
			<wp:comment_date>2011-06-21 09:12:10</wp:comment_date>
			<wp:comment_date_gmt>2011-06-21 09:12:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian,
great idea the DependsUpon attribute.
I was thinking that it could be improved a little bit in the performance area.
Correct me if I'm wrong, but you are calculating the dependency map for each instance of a ViewModelBase and derived classes. As long as the map is the same for each single (derived) type, after calculating the map for an instance of the type X you could store the map for that type in a static dictionary. Next time an instance of type X is created it will reference to the same map, so you you don't need to recalculate it, saving both memory and cpu.
Thanks for sharing your code.
Luigi]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7340</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>kruz79@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.23.148.213</wp:comment_author_IP>
			<wp:comment_date>2011-04-08 20:09:40</wp:comment_date>
			<wp:comment_date_gmt>2011-04-08 20:09:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,

Quick question, when using the "DependsUpon" logic, would it be possible to find out when a property of a complex object type has changed?

So for example if on my page I have a person object and every time the "first name" property of that person object changed I want to run a method.

Do I always have to expose that one property at my View model level?  Or can I just call

[DependsUpon("Person.FirstName")]

If I can't...how hard would it be to make the base class do this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7347</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.75.176</wp:comment_author_IP>
			<wp:comment_date>2011-04-09 12:27:35</wp:comment_date>
			<wp:comment_date_gmt>2011-04-09 12:27:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Matt:

This code does not support that behavior right now, but it would be possible to enhance it.  It would just be a matter of splitting on "." and recursively calling the listen function.  If you take a stab at it, let me know and I can fold it into the project.

Along these lines, I have considered having something like a "Model" attribute that would help with stuff like this:

[Model]
[Expose("First")]
[Expose("Last")]
protected Person person;

Any thoughts on that?

Thanks,
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79948</wp:comment_id>
			<wp:comment_author><![CDATA[Guide]]></wp:comment_author>
			<wp:comment_author_email>quyentriggs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://clashofclansfreeha.blogspot.com.tr/</wp:comment_author_url>
			<wp:comment_author_IP>104.223.29.245</wp:comment_author_IP>
			<wp:comment_date>2015-12-31 05:59:59</wp:comment_date>
			<wp:comment_date_gmt>2015-12-31 05:59:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can I simply say what a comfort to discover someone that truly 
understands what they are talking about on the internet.
You certainly realize how to bring a problem to light and make it important.
A lot more people have to check this out and understand this side of your 
story. I was surprised that you're not more popular since you certainly have the gift.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71420</wp:comment_id>
			<wp:comment_author><![CDATA[Walk In Baths And Showers Indiana]]></wp:comment_author>
			<wp:comment_author_email>janeoquendo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://youtu.be/sgIvLBEs2Mo</wp:comment_author_url>
			<wp:comment_author_IP>89.47.24.193</wp:comment_author_IP>
			<wp:comment_date>2015-09-11 03:38:49</wp:comment_date>
			<wp:comment_date_gmt>2015-09-11 03:38:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[After exploring a number of the blog articles on your blog, I 
really like your way of blogging. I saved as a favorite it to my bookmark webpage 
list and will be checking back in the near future. Please check 
out my website as well and let me know what you think.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; My ViewModel Base &#8211; Silverlight Support!</title>
		<link>http://houseofbilz.com/archives/2010/05/14/adventures-in-mvvm-my-viewmodel-base-silverlight-support/</link>
		<pubDate>Fri, 14 May 2010 14:02:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/05/14/adventures-in-mvvm-my-viewmodel-base-silverlight-support/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-My-ViewModel-Base-Silverlight-Support" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchive%2F2010%2F05%2F14%2Fadventures-in-mvvm-ndash-my-viewmodel-base-ndash-silverlight-support.aspx" /></a> <a href="http://www.dotnetkicks.com/kick/?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2010%2f05%2f14%2fadventures-in-mvvm-ndash-my-viewmodel-base-ndash-silverlight-support.aspx"><img border="0" alt="kick it on DotNetKicks.com" src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=http%3a%2f%2fhouseofbilz.com%2farchive%2f2010%2f05%2f14%2fadventures-in-mvvm-ndash-my-viewmodel-base-ndash-silverlight-support.aspx" /></a></p>  <p style="background-color: #e4e4e4"><font color="#ff0000">EDIT:</font> Here is why I love blogging and sharing code so much: Putting your ideas and code out into the public space always manages to add value to the ideas that were originally posted.&#160; Case in point: Tobias Richling commented on this post with a fantastic refinement to the Silverlight dynamic property binding.&#160; There is a much more simple way to bind against these dynamic properties (including automatic commanding) than my first approach.&#160; I have incorporated the changes to the CodePlex site and I have edited this post to reflect the changes.&#160; Thanks again, to Tobias for the suggestion.</p>  <p>In my last post, I outlined the powerful features that are available in the <a href="http://houseofbilz.com/archive/2010/05/08/adventures-in-mvvm-ndash-my-viewmodel-base.aspx">ViewModelSupport</a>.&#160; It takes advantage of the dynamic features of C# 4.0 (as well as some 3.0 goodies) to help eliminate the plumbing that often comes with writing ViewModels.&#160; If you are interested in learning about the capabilities, please take a look at that post and look at the code on <a href="http://viewmodelsupport.codeplex.com/">CodePlex</a>. </p>  <p>When I wrote about the ViewModel base class, I complained that the features did not work in Silverlight because as of 4.0, it does not support binding to dynamic properties.&#160; Although I still think this is a bummer, I am happy to say that there is a workaround.&#160; In the Silverlight version of my base class, I include a string indexer for getting and setting properties that lets you bind to dynamic properties in the <strong>ViewModelBase</strong>, especially the convention-based commands that the base class supports.</p>  <p>For example, with a View Model that looks like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:a35f8fe8-6cfc-4037-bf17-826c5f411156" class="wlWriterSmartContent">   <pre style="background-color: #e4e4e4; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> ExampleViewModel : ViewModelBase
{
    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">void</span><span style="color: #000000"> Execute_MyCommand()
    {
        Set(</span><span style="color: #800000">&quot;</span><span style="color: #800000">Text</span><span style="color: #800000">&quot;</span><span style="color: #000000">, </span><span style="color: #800000">&quot;</span><span style="color: #800000">Foo</span><span style="color: #800000">&quot;</span><span style="color: #000000">);
    }
}</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>

<p>The view can bind to the dynamic property (<strong>Text</strong>) and the convention-based command (<strong>MyCommand</strong>) with the following XAML.</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:dc0daf96-5b7f-491d-b195-aa333e5cc650" class="wlWriterEditableSmartContent"><pre style="background-color:#E4E4E4;white-space:-moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; word-wrap: break-word;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding [Text]}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Margin</span><span style="color: #0000FF;">="5"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">Button </span><span style="color: #FF0000;">Content</span><span style="color: #0000FF;">="Execute MyCommand"</span><span style="color: #FF0000;"> Command</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding [MyCommand]}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Margin</span><span style="color: #0000FF;">="5"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>Notice the square brackets around the name of the property.&#160; Of course, it is not as perfect as binding to <strong>Text</strong> and <strong>MyCommand</strong> like you can in WPF, but it is better than having a failed feature.&#160; This allows you to share your ViewModels between WPF and Silverlight very easily. </p>

<p>&lt;BeatDeadHorse&gt;Hopefully, in Silverlight 5.0, we will see binding to dynamic properties more directly????&lt;/BeatDeadHorse&gt;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2010-05-14 14:02:00</wp:post_date>
		<wp:post_date_gmt>2010-05-14 14:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-my-viewmodel-base-silverlight-support</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="view-model-support"><![CDATA[VIew Model Support]]></category>
		<category domain="post_tag" nicename="wpf"><![CDATA[WPF]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33368</wp:comment_id>
			<wp:comment_author><![CDATA[Brief Hair Scene]]></wp:comment_author>
			<wp:comment_author_email>bettinamelancon@whale-mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://thesarcastics.com/hello-world/</wp:comment_author_url>
			<wp:comment_author_IP>192.171.231.111</wp:comment_author_IP>
			<wp:comment_date>2014-12-13 21:45:51</wp:comment_date>
			<wp:comment_date_gmt>2014-12-13 21:45:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A new vinyl window can be up to 60% more efficient 
tthan old wiindows depending on their condition. A neww door can exponentially incease your curb appeal and freshen up thhe look of your home.
no cap of $1,500, of the fll 30 percent of the cost for renewable 
energy systems including solar panels, photovoltaic systems, small wind turbines, and geothermal heat pumps for both existing and new homes through 
2016.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42457</wp:comment_id>
			<wp:comment_author><![CDATA[hack hay day]]></wp:comment_author>
			<wp:comment_author_email>hilton.cardoza@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://fr-fr.facebook.com/haydayhackk</wp:comment_author_url>
			<wp:comment_author_IP>93.118.66.140</wp:comment_author_IP>
			<wp:comment_date>2015-05-04 17:31:49</wp:comment_date>
			<wp:comment_date_gmt>2015-05-04 17:31:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yet another added benefit is that the hacking tool can be utilised with 
no obtaining to jailbreak your iOS device or root your Android 
device.

my homepage <a href="https://fr-fr.facebook.com/haydayhackk" rel="nofollow">hack hay day</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>248</wp:comment_id>
			<wp:comment_author><![CDATA[Tobias Richling]]></wp:comment_author>
			<wp:comment_author_email>trichling@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://thinkexception.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.146.243.198</wp:comment_author_IP>
			<wp:comment_date>2010-06-17 10:06:04</wp:comment_date>
			<wp:comment_date_gmt>2010-06-17 10:06:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello Brian,

thank you for mentioning my SL4 binding idea.

I think you have a type in your code example as it shows the old code in my oppinion.

Instead of:



it should be:



Still I am using lots of your initial ideas in our code and i like it very much. It saves me of lots of glue code. 

Thank you and greetings,

Tobias.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32836</wp:comment_id>
			<wp:comment_author><![CDATA[Winning Binary Signals Auto Trader Pro Bonus]]></wp:comment_author>
			<wp:comment_author_email>caroleneedham@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/pages/Winning-Binary-Signals-Auto-Trader-Pro-Review-Bonus/521377757997386</wp:comment_author_url>
			<wp:comment_author_IP>107.161.83.39</wp:comment_author_IP>
			<wp:comment_date>2014-11-30 10:08:36</wp:comment_date>
			<wp:comment_date_gmt>2014-11-30 10:08:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I absolutely love your blog and find most of your post's to be just what I'm looking for.

Do you offer guest writers to write content in your case?
I wouldn't mind publishing a post or elaborating on a lot of the 
subjects you write with regards to here. Again, awesome 
weblog!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37827</wp:comment_id>
			<wp:comment_author><![CDATA[www.evasol-distrib.fr]]></wp:comment_author>
			<wp:comment_author_email>isaac.burchfield@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.evasol-distrib.fr</wp:comment_author_url>
			<wp:comment_author_IP>94.249.175.161</wp:comment_author_IP>
			<wp:comment_date>2015-03-02 18:05:29</wp:comment_date>
			<wp:comment_date_gmt>2015-03-02 18:05:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good info. Lucky me I ran across your site by chance (stumbleupon).
I've saved it for later!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42140</wp:comment_id>
			<wp:comment_author><![CDATA[customize your own shirt]]></wp:comment_author>
			<wp:comment_author_email>margaritopalmore@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://designateeshirtonline.com</wp:comment_author_url>
			<wp:comment_author_IP>188.63.121.58</wp:comment_author_IP>
			<wp:comment_date>2015-05-03 06:06:09</wp:comment_date>
			<wp:comment_date_gmt>2015-05-03 06:06:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent items from you, man. I've understand your stuff prior to and you're just extremely great.
I actually like what you've received here, certainly like what 
you're saying and the way in which you say it. You make it entertaining 
and you continue to take care of to keep it wise.
I can not wait to learn far more from you. This 
is really a tremendous website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1074</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>petersonah@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.197.147.16</wp:comment_author_IP>
			<wp:comment_date>2010-09-20 14:40:51</wp:comment_date>
			<wp:comment_date_gmt>2010-09-20 14:40:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, 

Everything is cool with binding dynamic properties to a dataform.  I had some other issues going on.  It's working well and I love the shortened code for the properties and commands! 

Andrew]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49776</wp:comment_id>
			<wp:comment_author><![CDATA[billigt internet til ipad]]></wp:comment_author>
			<wp:comment_author_email>autumnantle@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://bidaia.co/text-and-lists-2/</wp:comment_author_url>
			<wp:comment_author_IP>79.110.19.107</wp:comment_author_IP>
			<wp:comment_date>2015-06-06 02:46:49</wp:comment_date>
			<wp:comment_date_gmt>2015-06-06 02:46:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Broadband services embrace co-axial or fiber-optic cable, satellite tv for pc, microwave, and infra-pink hyperlinks access methods.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>304</wp:comment_id>
			<wp:comment_author><![CDATA[Leonida Wholly]]></wp:comment_author>
			<wp:comment_author_email>Namsaly@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.linkedin.com/profile?viewFeed=&amp;key=76805203&amp;p=0</wp:comment_author_url>
			<wp:comment_author_IP>119.70.40.101</wp:comment_author_IP>
			<wp:comment_date>2010-06-21 08:39:26</wp:comment_date>
			<wp:comment_date_gmt>2010-06-21 08:39:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Outstanding read, I just handed this onto a friend who was doing a little analysis on that. And he in fact bought me lunch because I found it for him.... smile.. So let me rephrase that: Thanks for lunch!But yeah Thank you for taking the time to discuss this, I feel strongly about it and love learning more on this topic. If possible, as you gain expertise, would you mind updating your blog with more information? It is extremely helpful for me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30913</wp:comment_id>
			<wp:comment_author><![CDATA[video hantu lucu banget]]></wp:comment_author>
			<wp:comment_author_email>angelacantrell@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://downloadvideohantulucubanget.transfer.cool</wp:comment_author_url>
			<wp:comment_author_IP>114.112.192.195</wp:comment_author_IP>
			<wp:comment_date>2014-10-25 09:28:22</wp:comment_date>
			<wp:comment_date_gmt>2014-10-25 09:28:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nah dari akun inilah bermunculan foto-foto yang tersebar merata ke seluruh pelosok sosial media (keseringan gue lihat 
nyebar di Path).

My page: <a href="http://downloadvideohantulucubanget.transfer.cool" rel="nofollow">video hantu lucu banget</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38431</wp:comment_id>
			<wp:comment_author><![CDATA[http://fuimpostingit.com/ShelleyN63oqnc/info]]></wp:comment_author>
			<wp:comment_author_email>delphiaflores@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://fuimpostingit.com/ShelleyN63oqnc/info/</wp:comment_author_url>
			<wp:comment_author_IP>104.140.83.190</wp:comment_author_IP>
			<wp:comment_date>2015-03-15 10:42:34</wp:comment_date>
			<wp:comment_date_gmt>2015-03-15 10:42:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You may have heard of liposuction done on the abdomen or the thighs, 
but knee liposuction has gradually gained popularity after presenting with impressive results.
This will also make you feel comfortable when undergoing 
the surgery. Whether it's having the latest hairstyle, wearing the trendiest 
outfit or constantly chasing after that ever-elusive Fountain of Youth, people all walks 
of life are frequently looking for ways to have a certain look.


Feel free to visit my blog; ​Mastoplastica 
Additiva Milano (<a href="http://fuimpostingit.com/ShelleyN63oqnc/info/" rel="nofollow">http://fuimpostingit.com/ShelleyN63oqnc/info</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36805</wp:comment_id>
			<wp:comment_author><![CDATA[boşanma avukatı ankara]]></wp:comment_author>
			<wp:comment_author_email>carltonfairthorne@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://ankaraavukat.ra6.org/2014/08/11/esim-beni-evden-kovdu/</wp:comment_author_url>
			<wp:comment_author_IP>192.200.24.27</wp:comment_author_IP>
			<wp:comment_date>2015-02-06 10:03:28</wp:comment_date>
			<wp:comment_date_gmt>2015-02-06 10:03:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Everything is very open with a clear clarification of the issues.

It was definitely informative. Your website is extremely 
helpful. Thanks for sharing!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36798</wp:comment_id>
			<wp:comment_author><![CDATA[www.hack-solutions.com]]></wp:comment_author>
			<wp:comment_author_email>corrinemairinger@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hack-solutions.com/league-of-legends-champions-and-skins-hack/</wp:comment_author_url>
			<wp:comment_author_IP>104.140.13.192</wp:comment_author_IP>
			<wp:comment_date>2015-02-06 02:05:19</wp:comment_date>
			<wp:comment_date_gmt>2015-02-06 02:05:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You know I don't know whether it's me or even your internet site but it's launching pretty slow , it took me just like a couple of minutes to load up 
and yet google operates properly to me. Nevertheless, I appreciate you for publishing such a fantastic article.
I believe this has been totally helpful user who actually click here.
This one is actually fantastic everything that you have implemented 
and want to see even more  articles from you. To obtain additional information by 
content that you publish, I have book marked this web site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30725</wp:comment_id>
			<wp:comment_author><![CDATA[isabel marant sneakers red white blue]]></wp:comment_author>
			<wp:comment_author_email>marquita.bettington@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ironmanmexico.com/admin/contenidos/about.asp?index.php?main_page=product_info&amp;products_id=95</wp:comment_author_url>
			<wp:comment_author_IP>121.206.190.109</wp:comment_author_IP>
			<wp:comment_date>2014-10-22 14:29:01</wp:comment_date>
			<wp:comment_date_gmt>2014-10-22 14:29:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[isabel marant sneakers red white blue isabel marant sneakers knockoffs QmLGL Mais grâce à une 
conception de la voiture révolutionnaire, le coaster en bois doivent être remarquablement lisse et rempli de temps d'antenne que la gloire de votre sentiment de sécurité que 
les fans de montagnes russes adorent.. isabel marant sneakers blue isabel marant bekett 
BfXLY Une décision de documentaire montre Chanteur devenir furieux les acteurs de craquage constante jusqu'à.
isabel marant grey dicker boots isabel marant black sandals eghDf 
Il roula 338 verges par la passe la semaine dernière 
contre libertiville et les distribuer parmi les quatre receveurs de passes, qui sont 
tous à moins de 6 pieds de haut.Tout cela fait partie de la base commune 
Maguire Dick Lakehurst portes ouvertes et spectacle aérien, un événement gratuit qui se passe samedi et sunday.the événement est le 
premier du genre dans l'immense base commune 
Maguire Dick Lakehurst destiné à mettre en valeur l'avion et 
les capacités de la cinq branches de services sur les ינסטאַללאַטיאָנ.אָפפיסיאַלס s'attendre 150.000 
à 300.000 visiteurs à venir à la base pour des démonstrations 
par quelques-uns des aviateurs les plus élitistes et airvomen dans l'armée, y compris les parachutistes des Golden Knights de l'armée et les pilotes de l'Armée de l'Air 
Thunderbirds. isabel Marant shoe sale isabel marant sandals sale yEYkr Cette dame est une combinaison unique 
de beauté et intelligence, et elle a prouvé ses talents d'actrice avec des 
films comme la pause, Bruce tout-puissant, et 
une bonne fille. isabel marant shoe sale isabel maran gThyc Notre hôte était le premier inventeur de deux pièces E de conception des cigarettes et karttomizer (conception 2 pièces) parce 
qu'il dédia une grande partie de sa vie à elle et nous avons amélioré kartomizer à la conception de la 
bobine horizontale inférieure qui est la vente parfaite et la meilleure sur le marché aujourd'hui..]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30731</wp:comment_id>
			<wp:comment_author><![CDATA[ugg on line]]></wp:comment_author>
			<wp:comment_author_email>gary.whiddon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://figliesancamillo.it/docs/gallery/about.asp?index.php?main_page=product_info&amp;products_id=1051</wp:comment_author_url>
			<wp:comment_author_IP>121.206.187.245</wp:comment_author_IP>
			<wp:comment_date>2014-10-22 15:09:56</wp:comment_date>
			<wp:comment_date_gmt>2014-10-22 15:09:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ugg on line ugg style TUDtF King James gab in einer Rede, die alle Katholiken sind nicht so verrückt wie die im Zusammenhang mit der Handlung, was gut ist, 
festgenommen, weil viele Historiker haben darauf hingewiesen, dass, wenn die Handlung gelungen war, müsste er eine heftige Reaktion gegen katholischen Gemeinden. UGG Lauri 1000403 Nero Sandali UGG 
breve pelliccia di volpe 3586 Boots Chocolate 
wocOL Bei einigen der in alten und neuen Gebäuden sehr attraktiv als auch, und das Gebiet ist 
Gehäuse noch in der Mitte der Renaissance wohl zu den dynamischsten in Southern California.
guanti ugg grigi ugg con bottone bfual Mai 1959 alle Rechte, die zu der Zeit existierten? 
Nun, die in den Jahren 1800 errichteten Gebäuden, 1900 Nun, wahrscheinlich in Hollywood in den 1930er und 40er 
und 50er Jahre, und das gleiche mit Autos, und sogar Kleidung.
UGG Hannen 3240 cordovano Stivali UGG Roxy Alto Stivali 5818 Castagno AvcKf Jammer Nelson Spinnen nur 6 von 21 im Bereich 3-Punkt 
wurde über gespielt und von Raja Rondo überschattet, und er 
hatte nicht viel von einer Hauptrolle in der Serie.
ugg boots store ugg prezzi scontati yWPKl Sie wissen, wenn Sie ein Kind aufwachsen sind und Sie 
Musiker werden wollen, und Sie müssen in einer Rockband sein wollen, schauen Sie Emerson, Lake und 
Palm spielen auf großen Bühnen-Stadion vor 150.000 Menschen, und Sie denken, Nun, es gibt keine Brücke zwischen dem, was 
ich tue, zu Hause zu sitzen schreibe meine Songs, und was sie tun.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33471</wp:comment_id>
			<wp:comment_author><![CDATA[biosynergy]]></wp:comment_author>
			<wp:comment_author_email>vicky.vallejos@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://lifetech-labs.com/</wp:comment_author_url>
			<wp:comment_author_IP>178.73.210.152</wp:comment_author_IP>
			<wp:comment_date>2014-12-16 18:18:36</wp:comment_date>
			<wp:comment_date_gmt>2014-12-16 18:18:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I read this post fully regarding the difference of hottest and previous technologies,
it's awesome article.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32846</wp:comment_id>
			<wp:comment_author><![CDATA[Der Kostenlose Kreditvergleich]]></wp:comment_author>
			<wp:comment_author_email>winfredbasaldua@veryfast.biz</wp:comment_author_email>
			<wp:comment_author_url>http://kreditvergleich.webnode.com/</wp:comment_author_url>
			<wp:comment_author_IP>202.62.70.18</wp:comment_author_IP>
			<wp:comment_date>2014-11-30 18:22:50</wp:comment_date>
			<wp:comment_date_gmt>2014-11-30 18:22:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Quality content is the secret to attract the 
users to go to see the web site, that's what this site is providing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32793</wp:comment_id>
			<wp:comment_author><![CDATA[100 percent profit bot]]></wp:comment_author>
			<wp:comment_author_email>cristine_ketchum@fastmail.to</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/100percentprofitbots</wp:comment_author_url>
			<wp:comment_author_IP>204.44.82.212</wp:comment_author_IP>
			<wp:comment_date>2014-11-28 10:01:26</wp:comment_date>
			<wp:comment_date_gmt>2014-11-28 10:01:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In order to know how much the option price will estimate, binary option calculator is also 
available. If you choose your Option Trading well, you can get as high as 170% in return in only one 
contract within an hour. The success of these strategies depends on many factors.
These benefits include, but are not limited to the following:-.
There are billions of cell phones in the world and the average person checks 
their phone in excess of 20 times a day. And certainly,
you can do it with binary possibilities, just as effectively as any 
sort of trading, it's possible far better.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30539</wp:comment_id>
			<wp:comment_author><![CDATA[eric capolino]]></wp:comment_author>
			<wp:comment_author_email>chanteknowlton@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://ericcapolino6764.pen.io/</wp:comment_author_url>
			<wp:comment_author_IP>23.232.151.146</wp:comment_author_IP>
			<wp:comment_date>2014-10-19 02:07:11</wp:comment_date>
			<wp:comment_date_gmt>2014-10-19 02:07:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi exceptional website! Does running a blog like this require a massive amount 
work? I've absolutely no expertise in programming however I had been hoping to start my own blog in the near future.
Anyway, if you have any ideas or tips for new blog owners 
please share. I know this is off subject but I simply needed to ask.

Cheers!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38752</wp:comment_id>
			<wp:comment_author><![CDATA[vita youth serum]]></wp:comment_author>
			<wp:comment_author_email>freemanorellana@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://hki.kemenperin.go.id/halkomentar-7887-19720.html</wp:comment_author_url>
			<wp:comment_author_IP>107.172.14.164</wp:comment_author_IP>
			<wp:comment_date>2015-03-27 03:10:41</wp:comment_date>
			<wp:comment_date_gmt>2015-03-27 03:10:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great site. Lots of helpful information here. I'm sending it to a few 
pals ans also sharing in delicious. And of course, thanks 
in your effort!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33172</wp:comment_id>
			<wp:comment_author><![CDATA[Clark]]></wp:comment_author>
			<wp:comment_author_email>jonasconnal@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://delicious.com/lazytongue7615</wp:comment_author_url>
			<wp:comment_author_IP>5.228.200.189</wp:comment_author_IP>
			<wp:comment_date>2014-12-08 11:12:37</wp:comment_date>
			<wp:comment_date_gmt>2014-12-08 11:12:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Smoke-free house. Open to Get it now offers. Best to sign into or first and 
employing their link. You'll get back 15% .]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38469</wp:comment_id>
			<wp:comment_author><![CDATA[lose lbs]]></wp:comment_author>
			<wp:comment_author_email>manual.fikes@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://cnn.com</wp:comment_author_url>
			<wp:comment_author_IP>31.220.30.33</wp:comment_author_IP>
			<wp:comment_date>2015-03-16 12:21:38</wp:comment_date>
			<wp:comment_date_gmt>2015-03-16 12:21:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi friends, fastidious piece of writing and 
pleasant urging commented at this place, I am in fact enjoying by these.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36549</wp:comment_id>
			<wp:comment_author><![CDATA[explanation]]></wp:comment_author>
			<wp:comment_author_email>mitzilaney@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rpp.com.pe/enlaweb.php?e=comprarelectrodomesticosbaratos.blogspot.com.es</wp:comment_author_url>
			<wp:comment_author_IP>5.255.75.102</wp:comment_author_IP>
			<wp:comment_date>2015-02-01 00:08:42</wp:comment_date>
			<wp:comment_date_gmt>2015-02-01 00:08:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Every girl wants to choose a dress that can make her look like an A-listed celebrity.

Your goal is to dress and act like a normal 
customer. It is as simple as returning goods to the local store.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37670</wp:comment_id>
			<wp:comment_author><![CDATA[psychic reader receives]]></wp:comment_author>
			<wp:comment_author_email>cecilherz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://onlinecashbonus.com/psychic-readings-psychics/</wp:comment_author_url>
			<wp:comment_author_IP>79.187.11.182</wp:comment_author_IP>
			<wp:comment_date>2015-02-28 15:52:56</wp:comment_date>
			<wp:comment_date_gmt>2015-02-28 15:52:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you want to increase your know-how simply keep visiting this web page and be updated with the latest news posted here.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42567</wp:comment_id>
			<wp:comment_author><![CDATA[ramadan]]></wp:comment_author>
			<wp:comment_author_email>taneshaprieur@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://pencinta-islam.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>104.131.5.165</wp:comment_author_IP>
			<wp:comment_date>2015-05-05 06:24:05</wp:comment_date>
			<wp:comment_date_gmt>2015-05-05 06:24:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Much of what fasters bemoan about their habits in <a href="http://pencinta-islam.blogspot.com/" rel="nofollow">Ramadan</a> is the few hours after fetar when they 
turn into sedentary slobs, sedately coiled into one corner of 
the couch, shuffling channels launched solely for their entertainment during the holy month.
The other six Sacraments are: Baptism-cleansing a soul 
of the legacy of Adam and Eve's Original Sin; Confirmation-reaffirmation of one's Catholic faith; Penance-confession of 
sins and prayer; Holy Orders-ordination into priesthood; Matrimony-church-sanctioned 
marriage; Extreme Unction-anointing of the dying. This on the heels of a good deed in serving lunch to a new tired mother.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43065</wp:comment_id>
			<wp:comment_author><![CDATA[Karine]]></wp:comment_author>
			<wp:comment_author_email>charley_schurr@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://naivesite24066704.pen.io/</wp:comment_author_url>
			<wp:comment_author_IP>181.174.190.239</wp:comment_author_IP>
			<wp:comment_date>2015-05-07 22:11:30</wp:comment_date>
			<wp:comment_date_gmt>2015-05-07 22:11:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[En condiciones estables en la pareja se establece un statu quo que 
deja la convivencia, aunque sea dura y aversiva.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31800</wp:comment_id>
			<wp:comment_author><![CDATA[moisturizing gel socks suppliers]]></wp:comment_author>
			<wp:comment_author_email>carmel_corones@moose-mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://71935857.blog.51cto.com/</wp:comment_author_url>
			<wp:comment_author_IP>110.240.146.161</wp:comment_author_IP>
			<wp:comment_date>2014-11-10 02:00:44</wp:comment_date>
			<wp:comment_date_gmt>2014-11-10 02:00:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[GREAT  moisturizing socks, i like it,I strongly recommend these kmucutie gel socks "]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30616</wp:comment_id>
			<wp:comment_author><![CDATA[Suresh Gaddam]]></wp:comment_author>
			<wp:comment_author_email>kristalfiorillo@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://people.bayt.com/suresh-gaddam/</wp:comment_author_url>
			<wp:comment_author_IP>155.94.132.253</wp:comment_author_IP>
			<wp:comment_date>2014-10-20 15:27:11</wp:comment_date>
			<wp:comment_date_gmt>2014-10-20 15:27:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Paragraph writing is also a excitement, if you kknow after that you can write if not it iis difficult to write.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30617</wp:comment_id>
			<wp:comment_author><![CDATA[Suresh Gaddam]]></wp:comment_author>
			<wp:comment_author_email>phillismccullers@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://vk.com/pinku0909</wp:comment_author_url>
			<wp:comment_author_IP>50.2.223.149</wp:comment_author_IP>
			<wp:comment_date>2014-10-20 15:39:57</wp:comment_date>
			<wp:comment_date_gmt>2014-10-20 15:39:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's really a great and helpful piece of info.
I am satisfied that you shared this helpful info with us.
Please stay us informed like this. Thank you for sharing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36276</wp:comment_id>
			<wp:comment_author><![CDATA[novoline spiele tricks]]></wp:comment_author>
			<wp:comment_author_email>melisagoodson@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://wiseeffects8711.deviantart.com/status/320919</wp:comment_author_url>
			<wp:comment_author_IP>94.249.245.28</wp:comment_author_IP>
			<wp:comment_date>2015-01-29 05:51:16</wp:comment_date>
			<wp:comment_date_gmt>2015-01-29 05:51:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Natürlich ist es sehr bequem sofern Novoline 
einfach von zuhause gespielt wird sowie so muss keiner 
auf Öffnungszeiten von Spielotheken achten.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32723</wp:comment_id>
			<wp:comment_author><![CDATA[do body wraps work]]></wp:comment_author>
			<wp:comment_author_email>randolphnewcomer@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://decorousstripe425.tumblr.com/post/92299736700</wp:comment_author_url>
			<wp:comment_author_IP>23.95.89.41</wp:comment_author_IP>
			<wp:comment_date>2014-11-27 00:54:30</wp:comment_date>
			<wp:comment_date_gmt>2014-11-27 00:54:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[They additionally help inside controlling the cellulite and encouraging weight loss by reducing 
fat inside the <a href="http://decorousstripe425.tumblr.com/post/92299736700" rel="nofollow">do body wraps work</a>.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33287</wp:comment_id>
			<wp:comment_author><![CDATA[Far Cry 4 download]]></wp:comment_author>
			<wp:comment_author_email>traceeconnal@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://crackssite.com/cracks/single_cracks/Far_Cry_4_onlycrack_by_cracker.html</wp:comment_author_url>
			<wp:comment_author_IP>188.208.0.60</wp:comment_author_IP>
			<wp:comment_date>2014-12-12 05:31:57</wp:comment_date>
			<wp:comment_date_gmt>2014-12-12 05:31:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's hard to find well-informed people for this topic, however, 
you seem like you know what you're talking about! Thanks]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33121</wp:comment_id>
			<wp:comment_author><![CDATA[ดูหนังโป๊ฟรี]]></wp:comment_author>
			<wp:comment_author_email>gabriellechappell@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.02dual.com/</wp:comment_author_url>
			<wp:comment_author_IP>49.231.230.138</wp:comment_author_IP>
			<wp:comment_date>2014-12-07 01:14:32</wp:comment_date>
			<wp:comment_date_gmt>2014-12-07 01:14:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can definitely see your expertise within the article you write.

The arena hopes for more passionate writers such as you who aren't afraid to mention how they believe.
Always follow your heart.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33140</wp:comment_id>
			<wp:comment_author><![CDATA[about]]></wp:comment_author>
			<wp:comment_author_email>darrellrivett@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.aboutus.org/Bluediamondplumbing</wp:comment_author_url>
			<wp:comment_author_IP>188.208.7.80</wp:comment_author_IP>
			<wp:comment_date>2014-12-07 13:07:36</wp:comment_date>
			<wp:comment_date_gmt>2014-12-07 13:07:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We look forward to a good start toward qualifying check here for local electrician licenses in Indiana.
Avoid hiring electricians whom you can also try on to the second shift.
In Indianapolis, check here if one is not using them.
Various problems can occur any time at home. The damage lower service 
entrance wire is the one you forgot to tag is the responsible in making an electrical current affect the body in several ways.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41836</wp:comment_id>
			<wp:comment_author><![CDATA[ask]]></wp:comment_author>
			<wp:comment_author_email>baileyolds@fastimap.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ask.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>209.161.96.182</wp:comment_author_IP>
			<wp:comment_date>2015-05-01 17:54:33</wp:comment_date>
			<wp:comment_date_gmt>2015-05-01 17:54:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello everyone, it's my first visit at this website, and piece of writing is in fact 
fruitful in favor of me, keep up posting these content.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30824</wp:comment_id>
			<wp:comment_author><![CDATA[Dr Rashmi Patel dental license]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pbase.com/rashmipatel</wp:comment_author_url>
			<wp:comment_author_IP>23.232.133.224</wp:comment_author_IP>
			<wp:comment_date>2014-10-24 00:11:45</wp:comment_date>
			<wp:comment_date_gmt>2014-10-24 00:11:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Dr Rashmi Patel dental license...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34898</wp:comment_id>
			<wp:comment_author><![CDATA[Adrian]]></wp:comment_author>
			<wp:comment_author_email>ivanbeaulieu@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://hawkeyeproducts.com/Forum</wp:comment_author_url>
			<wp:comment_author_IP>68.171.98.196</wp:comment_author_IP>
			<wp:comment_date>2015-01-14 02:57:54</wp:comment_date>
			<wp:comment_date_gmt>2015-01-14 02:57:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Helolo mates, how iss all, andd what you want to say concerning 
this post, in my view its genuinely amazing in ffavor of me.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33403</wp:comment_id>
			<wp:comment_author><![CDATA[supplements vancouver bc]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://roomyfuel2914.blox.pl/html</wp:comment_author_url>
			<wp:comment_author_IP>196.196.0.54</wp:comment_author_IP>
			<wp:comment_date>2014-12-14 19:15:10</wp:comment_date>
			<wp:comment_date_gmt>2014-12-14 19:15:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>supplements vancouver bc...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30757</wp:comment_id>
			<wp:comment_author><![CDATA[soccer]]></wp:comment_author>
			<wp:comment_author_email>marinabanda@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://we-english.co.uk/blog/wp-trackback.php?p=1804</wp:comment_author_url>
			<wp:comment_author_IP>107.181.78.118</wp:comment_author_IP>
			<wp:comment_date>2014-10-23 00:17:13</wp:comment_date>
			<wp:comment_date_gmt>2014-10-23 00:17:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[(A broadband connection will deliver superior audio and video quality).
Soccer requires both sprinting and long-term speed,
so develop your skills in both areas. After you have master it then move on to another one.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40339</wp:comment_id>
			<wp:comment_author><![CDATA[solusi keputihan]]></wp:comment_author>
			<wp:comment_author_email>emorygenovese@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://obatkeputihancrystal-x.com/</wp:comment_author_url>
			<wp:comment_author_IP>104.243.37.98</wp:comment_author_IP>
			<wp:comment_date>2015-04-23 13:36:59</wp:comment_date>
			<wp:comment_date_gmt>2015-04-23 13:36:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks to my father who informed me about this blog, this weblog 
is genuinely awesome.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37435</wp:comment_id>
			<wp:comment_author><![CDATA[plantar fasciitis taping technique]]></wp:comment_author>
			<wp:comment_author_email>maritawetzel@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://snipurl.com/29h4326</wp:comment_author_url>
			<wp:comment_author_IP>198.50.176.73</wp:comment_author_IP>
			<wp:comment_date>2015-02-23 15:48:29</wp:comment_date>
			<wp:comment_date_gmt>2015-02-23 15:48:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Magnificent site. Lots of useful information here. I'm sending it to some pals ans 
also sharing in delicious. And naturally, thanks to your sweat!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32761</wp:comment_id>
			<wp:comment_author><![CDATA[pro kennex power innovator superwide]]></wp:comment_author>
			<wp:comment_author_email>essienolte@web.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=DrzA3e-KXVY</wp:comment_author_url>
			<wp:comment_author_IP>190.97.25.234</wp:comment_author_IP>
			<wp:comment_date>2014-11-27 20:27:02</wp:comment_date>
			<wp:comment_date_gmt>2014-11-27 20:27:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The program is virtually for everyone.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30736</wp:comment_id>
			<wp:comment_author><![CDATA[stivali ugg saldi]]></wp:comment_author>
			<wp:comment_author_email>mickitolmie@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.sigmasrl.info/imgup/support/about.asp?index.php?main_page=product_info&amp;products_id=414</wp:comment_author_url>
			<wp:comment_author_IP>121.206.185.187</wp:comment_author_IP>
			<wp:comment_date>2014-10-22 17:44:03</wp:comment_date>
			<wp:comment_date_gmt>2014-10-22 17:44:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[stivali ugg saldi ugg negozi napoli EHVQJ Aber da 
die Artillerie-Crews besonders anfällig für Angriffe sind, die Gestaltung von Leonardo 
war es, mit den gleichen bewährten Methoden, die den Hammer Crew für Jahrhunderte geschützt zu schützen. ugg bambini UGG 
Roxy Corto 5828 Grigio Stivali WFnOB Zum Beispiel, Sitzheizung zur Verfügung, bevor durch den Touch-Screen, der einen zusätzlichen Schritt oder zwei benötigt, um ein-und 
ausschalten kontrolliert und es war unmöglich, so zu tun, ohne Tonnen von roadthere Stauraum, mit Schneiden Sie überschüssige Hinzufügen von Funktionen wie einem Papierkorb versteckt unter dem Beifahrersitz.
UGG alti pelliccia di Fox 1984 Nero Stivali UGG 
Tawnie 1000404 Sandali Chocolate WvBfT Wenn Sie technische Probleme 
mit MSN Explorer oder ein Upgrade auf die neueste Version des Programms,
Deinstallation und Neuinstallation hilft.Skribe 
oder melden Sie die Wand, wenn Sie einen unregelmäßigen Kontur Wand haben oder wenn Ihre Maße die sich von der Oberseite und der Unterseite des Gehäuses an der Wand sind.
UGG Fluffie 1684 Sandali Chocolate UGG Boots Sand Calynda 1002166 ayYlY 
Wenn Sie ein Peeling, Beizen Sie gute Öle und abgestorbene Haut,
so ist es wichtig, sofort zu befeuchten, sagte Denise Vitiello, Direktor des Health Club 
und Spa im Mandarin Oriental Hotel in New York.. ugg Italia uomo spaccio 
ugg lombardia sfkoq Wir werden ein besseres Team im Februar sein.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32115</wp:comment_id>
			<wp:comment_author><![CDATA[Denisha]]></wp:comment_author>
			<wp:comment_author_email>antonymcgrowdie@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.lightbluetouchpaper.org/2013/03/13/uk-bank-fraud-up/</wp:comment_author_url>
			<wp:comment_author_IP>216.231.135.154</wp:comment_author_IP>
			<wp:comment_date>2014-11-15 07:22:46</wp:comment_date>
			<wp:comment_date_gmt>2014-11-15 07:22:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a great tip particularly to those new to the 
blogosphere. Simple but very accurate info… Appreciate your sharing this one.

A must read post!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35107</wp:comment_id>
			<wp:comment_author><![CDATA[online slots big win]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://myappz.ml/ShrinkURL/onlineslotsrealmoney823974</wp:comment_author_url>
			<wp:comment_author_IP>183.222.248.154</wp:comment_author_IP>
			<wp:comment_date>2015-01-17 10:05:41</wp:comment_date>
			<wp:comment_date_gmt>2015-01-17 10:05:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>online slots big win...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79911</wp:comment_id>
			<wp:comment_author><![CDATA[system software]]></wp:comment_author>
			<wp:comment_author_email>abebenefield@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wolfsoftware.org/</wp:comment_author_url>
			<wp:comment_author_IP>89.218.214.170</wp:comment_author_IP>
			<wp:comment_date>2015-12-27 04:53:47</wp:comment_date>
			<wp:comment_date_gmt>2015-12-27 04:53:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I go to see every day some websites and blogs to read content, however this weblog 
presents feature based articles.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48007</wp:comment_id>
			<wp:comment_author><![CDATA[Marina]]></wp:comment_author>
			<wp:comment_author_email>emileflatt@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://3hollowdaters.jimdo.com</wp:comment_author_url>
			<wp:comment_author_IP>188.240.133.37</wp:comment_author_IP>
			<wp:comment_date>2015-05-29 03:11:09</wp:comment_date>
			<wp:comment_date_gmt>2015-05-29 03:11:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic site. Plenty of helpful information here.
I'm sending it to several buddies ans also sharing in delicious.

And of course, thank you in your effort!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32740</wp:comment_id>
			<wp:comment_author><![CDATA[interstellar profits]]></wp:comment_author>
			<wp:comment_author_email>michel.himmel@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/interstellarprofitsreview</wp:comment_author_url>
			<wp:comment_author_IP>23.95.97.208</wp:comment_author_IP>
			<wp:comment_date>2014-11-27 06:01:35</wp:comment_date>
			<wp:comment_date_gmt>2014-11-27 06:01:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Xplorer&#178; lite version ' The lite edition of xplorer&#178; Pro featuring dual-pane,
folder tabs, integrated drag and drop function, view comments in files, find text in text files, search text in PDF and office documents, thumbnail view and split, merge or shred 
files. You have no security as to when you might earn or lose cash.
Another factor that can rightly guide your search 
for binary option brokers is the features that they offer.
A binary selection trading platform enables the traders to administer the risk and dictate 
the optimum terms. Selling away (NASD Rule 3040) l Broker-Dealers l Market Makers.

It is possible to trade shares, indices and commodities by using binary options, 
but we will pay our attention to the foreign exchange market,
because of the prompt availability of charting packages and technical analysis 
instruments free of cost for FX traders.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32742</wp:comment_id>
			<wp:comment_author><![CDATA[car accident attorney tulsa]]></wp:comment_author>
			<wp:comment_author_email>margueritepurcell@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=p11VudNH9KI</wp:comment_author_url>
			<wp:comment_author_IP>209.161.100.126</wp:comment_author_IP>
			<wp:comment_date>2014-11-27 07:38:27</wp:comment_date>
			<wp:comment_date_gmt>2014-11-27 07:38:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Appreciating the time and effort you put into your site and 
in depth information you provide. It's good to come across a blog every once in a while 
that isn't the same unwanted rehashed material.
Wonderful read! I've bookmarked your site and I'm adding your RSS feeds to my Google account.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37239</wp:comment_id>
			<wp:comment_author><![CDATA[indonesian daybed]]></wp:comment_author>
			<wp:comment_author_email>dontwopeny@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://balifurni.com/</wp:comment_author_url>
			<wp:comment_author_IP>180.252.62.111</wp:comment_author_IP>
			<wp:comment_date>2015-02-18 04:00:53</wp:comment_date>
			<wp:comment_date_gmt>2015-02-18 04:00:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty! This was an extremely wonderful post. Thank you 
for supplying these details.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33396</wp:comment_id>
			<wp:comment_author><![CDATA[Sylvia]]></wp:comment_author>
			<wp:comment_author_email>frieda_elam@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.writeupcafe.com/Writeups/8451/11616/several-elements-to-think-about-when-getting-common-auto-use-services</wp:comment_author_url>
			<wp:comment_author_IP>192.171.233.142</wp:comment_author_IP>
			<wp:comment_date>2014-12-14 09:52:09</wp:comment_date>
			<wp:comment_date_gmt>2014-12-14 09:52:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've learn several excellent stuff here. Definitely worth bookmarking for revisiting.

I surprise howw much effort you set to create the sort of great informative site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49560</wp:comment_id>
			<wp:comment_author><![CDATA[Maybell]]></wp:comment_author>
			<wp:comment_author_email>joni.mccrea@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://en.gravatar.com/wickj8996</wp:comment_author_url>
			<wp:comment_author_IP>198.12.117.186</wp:comment_author_IP>
			<wp:comment_date>2015-06-04 21:46:51</wp:comment_date>
			<wp:comment_date_gmt>2015-06-04 21:46:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Right now it looks like Movable Type is the best blogging platform available right now.

(from what I've read) Is that what you are using on your blog?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33397</wp:comment_id>
			<wp:comment_author><![CDATA[youtube.com]]></wp:comment_author>
			<wp:comment_author_email>shannanlade@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/channel/UCx18uUf2aUg5rUidlUIaY1Q</wp:comment_author_url>
			<wp:comment_author_IP>23.94.36.225</wp:comment_author_IP>
			<wp:comment_date>2014-12-14 13:08:41</wp:comment_date>
			<wp:comment_date_gmt>2014-12-14 13:08:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When someone writes an paragraph he/she keeps the plan of a user in his/her brain that how a 
user can know it. Therefore that's why this piece of writing is amazing.

Thanks!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37170</wp:comment_id>
			<wp:comment_author><![CDATA[Antoine Kuarez]]></wp:comment_author>
			<wp:comment_author_email>wyatt_forte@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://garpenborg.bloggagratis.se/gilla/?url=http://supervisacanada.info/</wp:comment_author_url>
			<wp:comment_author_IP>23.94.54.86</wp:comment_author_IP>
			<wp:comment_date>2015-02-16 14:16:02</wp:comment_date>
			<wp:comment_date_gmt>2015-02-16 14:16:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I ʝust сouldn't leave your ԝeb site prior to suggesting that I actually loved the usual info 
a person supply іn your νisitors? Is going to be again steadily 
to investigɑtе cross-check new posts]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41881</wp:comment_id>
			<wp:comment_author><![CDATA[ask]]></wp:comment_author>
			<wp:comment_author_email>anya_brisbane@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ask.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP>104.128.24.128</wp:comment_author_IP>
			<wp:comment_date>2015-05-01 22:55:59</wp:comment_date>
			<wp:comment_date_gmt>2015-05-01 22:55:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Link exchange is nothing else but it is just placing the other person's weblog link 
on your page at proper place and other person will also do similar in support of you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38113</wp:comment_id>
			<wp:comment_author><![CDATA[moviestarplanet money hack]]></wp:comment_author>
			<wp:comment_author_email>raleighbourget@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://davidluna.com.co/UserProfile/tabid/43/userId/53740/Default.aspx</wp:comment_author_url>
			<wp:comment_author_IP>107.153.85.221</wp:comment_author_IP>
			<wp:comment_date>2015-03-10 00:34:33</wp:comment_date>
			<wp:comment_date_gmt>2015-03-10 00:34:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With a couple of quick internet suggestions, you can ease into a fundamental, open up, mild and compelling website.
The first scenario involves you as the celebrity character preparing to attend a movie premier where paparazzi and the press 
will be present. Such effects make 3D Games or movies more exciting and real.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34951</wp:comment_id>
			<wp:comment_author><![CDATA[seer tarotista free]]></wp:comment_author>
			<wp:comment_author_email>elma.kasper@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.videnciagratis.org/compatibilidad-acuario.html</wp:comment_author_url>
			<wp:comment_author_IP>207.150.166.220</wp:comment_author_IP>
			<wp:comment_date>2015-01-15 01:09:31</wp:comment_date>
			<wp:comment_date_gmt>2015-01-15 01:09:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up to every single one, it's really 
a nice for me to visit this web site, it includes priceless 
Information.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64398</wp:comment_id>
			<wp:comment_author><![CDATA[www.intrinsiqmaterials.net]]></wp:comment_author>
			<wp:comment_author_email>waylon_cummins@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.intrinsiqmaterials.net</wp:comment_author_url>
			<wp:comment_author_IP>155.94.168.189</wp:comment_author_IP>
			<wp:comment_date>2015-08-08 13:36:04</wp:comment_date>
			<wp:comment_date_gmt>2015-08-08 13:36:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks  for some other informative web site. The place else may 
just I am getting that type of information written in such an ideal manner?

I've a challenge that I'm just now running on, and I have been on the look out for such information.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80438</wp:comment_id>
			<wp:comment_author><![CDATA[buy perfect money]]></wp:comment_author>
			<wp:comment_author_email>lilia.woodcock@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/u/0/103644073865025627128/posts</wp:comment_author_url>
			<wp:comment_author_IP>212.192.56.2</wp:comment_author_IP>
			<wp:comment_date>2016-02-25 10:41:35</wp:comment_date>
			<wp:comment_date_gmt>2016-02-25 10:41:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Appreciating the commitment you put into your website and detailed information you present.
It's great to come across a blog every once in a while that isn't the same 
unwanted rehashed information. Great read! I've bookmarked your site 
and I'm including your RSS feeds to my Google account.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36871</wp:comment_id>
			<wp:comment_author><![CDATA[Vaughn]]></wp:comment_author>
			<wp:comment_author_email>mikkiwatkin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://refnearn.com</wp:comment_author_url>
			<wp:comment_author_IP>167.160.105.11</wp:comment_author_IP>
			<wp:comment_date>2015-02-09 00:10:35</wp:comment_date>
			<wp:comment_date_gmt>2015-02-09 00:10:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Greetings I don't know whether it's me or possibly your 
blog but it is starting  slow , it took me like a moment in order to 
load up although gmail does work completely . On the other hand thanks 
for putting up amazing articles. Everyone who actually 
came to this web site should have observed this content literally valuable.
This one is actually fantastic everything that you actually have implemented  and wish to check 
out even more  content from your site. I already have you 
book marked to check out blogs you post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43738</wp:comment_id>
			<wp:comment_author><![CDATA[Jenifer]]></wp:comment_author>
			<wp:comment_author_email>rickiebidwell@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://forum.grasscity.com/blog/795/entry-273-welcome-to-taomore/</wp:comment_author_url>
			<wp:comment_author_IP>155.94.138.174</wp:comment_author_IP>
			<wp:comment_date>2015-05-11 05:55:21</wp:comment_date>
			<wp:comment_date_gmt>2015-05-11 05:55:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There are also other attractive options you might want to 
take a look at. ' Surprisingly, there are many 
famous folks who studied accounting and even passed the prestigious CPA exam.
Below is the list of some essential skills required for the hockey coach.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33382</wp:comment_id>
			<wp:comment_author><![CDATA[archive.org]]></wp:comment_author>
			<wp:comment_author_email>colinbodnar@care2.com</wp:comment_author_email>
			<wp:comment_author_url>https://archive.org/details/fxprosystemmq4_nzv</wp:comment_author_url>
			<wp:comment_author_IP>97.68.212.119</wp:comment_author_IP>
			<wp:comment_date>2014-12-14 06:08:51</wp:comment_date>
			<wp:comment_date_gmt>2014-12-14 06:08:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You might assume that in order for a parrot to be able to imitate the human voice.
That archetype is the warrior, and this illness is particularly common among men such as soldiers and 
athletes. 1- Irene Maxine Pepperberg, The Alex Studies, Harvard University 
Press, England, 1999, pp. Let him call for 
the elders of the church,   and let them pray over him, anointing him with oil in the name of The Lord;   and the 
prayer of faith will save the sick man, and The Lord will raise him   
up; and if he has committed sins, he will be forgiven. They designed a lot of shorter pictures that it's one, however 
nearly all that listed flick models connected with phase techniques who magicians would need as a way to do.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37489</wp:comment_id>
			<wp:comment_author><![CDATA[Cinquante nuances de Grey Streaming]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dpbm2.co.id/halkomentar-156-5075.html</wp:comment_author_url>
			<wp:comment_author_IP>192.3.131.248</wp:comment_author_IP>
			<wp:comment_date>2015-02-25 00:41:26</wp:comment_date>
			<wp:comment_date_gmt>2015-02-25 00:41:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cinquante nuances de Grey Streaming...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33892</wp:comment_id>
			<wp:comment_author><![CDATA[merry christmas 2014 pictures]]></wp:comment_author>
			<wp:comment_author_email>darrylholtze@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ulrichbeggjotg.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>162.17.193.89</wp:comment_author_IP>
			<wp:comment_date>2014-12-28 16:52:09</wp:comment_date>
			<wp:comment_date_gmt>2014-12-28 16:52:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm really enjoying the theme/design of your web site.
Do you ever run into any browser compatibility issues? A number of my blog 
readers have complained about my blog not working correctly in Explorer but 
looks great in Opera. Do you have any solutions to help 
fix this issue?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32694</wp:comment_id>
			<wp:comment_author><![CDATA[Reto 90]]></wp:comment_author>
			<wp:comment_author_email>violettekallas@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=skw8g3g3CC4</wp:comment_author_url>
			<wp:comment_author_IP>23.95.18.34</wp:comment_author_IP>
			<wp:comment_date>2014-11-26 06:02:37</wp:comment_date>
			<wp:comment_date_gmt>2014-11-26 06:02:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This paragraph is really a nice one it helps new the web 
viewers, who are wishing in favor of blogging.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35171</wp:comment_id>
			<wp:comment_author><![CDATA[Loretta]]></wp:comment_author>
			<wp:comment_author_email>roxiecogburn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.midilibre.fr/2014/06/23/bus-a-la-mer-a-1eur,1013201.php</wp:comment_author_url>
			<wp:comment_author_IP>5.39.60.37</wp:comment_author_IP>
			<wp:comment_date>2015-01-18 01:07:43</wp:comment_date>
			<wp:comment_date_gmt>2015-01-18 01:07:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wonderful, what a website it is! This webpage provides helpful data to us, keep it up.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37268</wp:comment_id>
			<wp:comment_author><![CDATA[Bryan Zwan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://fanfou.com/sharer?u=http://www.bryan.edu/</wp:comment_author_url>
			<wp:comment_author_IP>107.182.120.194</wp:comment_author_IP>
			<wp:comment_date>2015-02-18 14:27:32</wp:comment_date>
			<wp:comment_date_gmt>2015-02-18 14:27:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Bryan Zwan...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36669</wp:comment_id>
			<wp:comment_author><![CDATA[weight loss called]]></wp:comment_author>
			<wp:comment_author_email>noelmckeever@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://forums.rmaziat.com/index.php?redirect=http://www.nawgits.com/health/health-programs/getting-rich-isagenix-products/</wp:comment_author_url>
			<wp:comment_author_IP>104.143.21.222</wp:comment_author_IP>
			<wp:comment_date>2015-02-02 06:44:47</wp:comment_date>
			<wp:comment_date_gmt>2015-02-02 06:44:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just like the helpful info you supply on your articles.
I'll bookmark your blog and check once more right here regularly.

I am moderately certain I'll learn many new stuff proper 
right here! Best of luck for the following!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30574</wp:comment_id>
			<wp:comment_author><![CDATA[Eric D Gray]]></wp:comment_author>
			<wp:comment_author_email>angelikacarstensen@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://ericgraybuffalony.jimdo.com/</wp:comment_author_url>
			<wp:comment_author_IP>155.94.135.49</wp:comment_author_IP>
			<wp:comment_date>2014-10-19 18:15:22</wp:comment_date>
			<wp:comment_date_gmt>2014-10-19 18:15:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great web site you have here.. It's hard to find high quality writing like yours 
these days. I honestly appreciate people like you! Take care!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75618</wp:comment_id>
			<wp:comment_author><![CDATA[click here.]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.yelp.com/biz/speed-locksmith-rochester-4</wp:comment_author_url>
			<wp:comment_author_IP>172.102.192.102</wp:comment_author_IP>
			<wp:comment_date>2015-10-11 17:34:44</wp:comment_date>
			<wp:comment_date_gmt>2015-10-11 17:34:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>click here....</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33718</wp:comment_id>
			<wp:comment_author><![CDATA[blackebonycams.com]]></wp:comment_author>
			<wp:comment_author_email>christina.keyser@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.blackebonycams.com/</wp:comment_author_url>
			<wp:comment_author_IP>46.22.215.230</wp:comment_author_IP>
			<wp:comment_date>2014-12-22 09:04:51</wp:comment_date>
			<wp:comment_date_gmt>2014-12-22 09:04:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just about all of the girls have make contact with information out there and areas like member forums, member's 
request and wall papers just make this web-site a lot enjoyable.
It bothers me when I hear parents using profanity around their 
kids. Effectively they have a huge collection of 
videos and photographs, they're nicely respected inside the 
t-girl porn globe plus they update the web page 
on a continual basis.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48617</wp:comment_id>
			<wp:comment_author><![CDATA[Dr. Sherri Worth and Dr. Yazdan]]></wp:comment_author>
			<wp:comment_author_email>marisol_halpern@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.healthgrades.com/dentist/dr-sherri-worth-y5wkk</wp:comment_author_url>
			<wp:comment_author_IP>104.247.99.251</wp:comment_author_IP>
			<wp:comment_date>2015-05-31 16:13:06</wp:comment_date>
			<wp:comment_date_gmt>2015-05-31 16:13:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, i believe that i saw you visited my site so i got here to go back the 
desire?.I am trying to to find things to improve my web site!I assume its adequate to use some of your concepts!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34409</wp:comment_id>
			<wp:comment_author><![CDATA[ferragamo flat]]></wp:comment_author>
			<wp:comment_author_email>quentin_salazar@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.dorset-water.co.uk/salvatore/?salvatore=ferragamo+flat</wp:comment_author_url>
			<wp:comment_author_IP>183.131.11.124</wp:comment_author_IP>
			<wp:comment_date>2015-01-07 09:10:27</wp:comment_date>
			<wp:comment_date_gmt>2015-01-07 09:10:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ich bin gerade zufaellig auf Ihrer Webpage gelandet 
(war eigentlich  auf der Suche nach einer anderen Seite). Ich 
moechte diese Seite nicht verlassen, ohne Ihnen ein Lob zu dieser klar strukturierten und schick designten Page zu hinterlassen! 
<a href="http://www.dorset-water.co.uk/salvatore/?salvatore=ferragamo+flat" rel="nofollow">ferragamo flat</a> 
Ferragamo Wingtips
<a href="http://www.dorset-water.co.uk/salvatore/?salvatore=ferragamo+wallet+sale" rel="nofollow">ferragamo wallet sale</a> Ferragamo Ladies Shoes
<a href="http://www.dorset-water.co.uk/salvatore/?salvatore=ferragamo+audrey+shoes" rel="nofollow">ferragamo audrey shoes</a> Ferragamo 
Mango Boat Shoe
<a href="http://www.dorset-water.co.uk/salvatore/?salvatore=saks+ferragamo" rel="nofollow">saks ferragamo</a> Mens Shoes 
Ferragamo
http://www.joacate.org/profile/vi31v]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33079</wp:comment_id>
			<wp:comment_author><![CDATA[plumbers]]></wp:comment_author>
			<wp:comment_author_email>georginaburroughs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.slideshare.net/DiamondAceContractors/rancho-penasquitos-plumber</wp:comment_author_url>
			<wp:comment_author_IP>89.44.16.15</wp:comment_author_IP>
			<wp:comment_date>2014-12-06 11:18:56</wp:comment_date>
			<wp:comment_date_gmt>2014-12-06 11:18:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Their personal care will click for info make you think about safety first because it is their specialty.
Large scale projects such as buildings and other related equipment.
Last but not least, you should never ever hire someone who is.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30483</wp:comment_id>
			<wp:comment_author><![CDATA[Donald]]></wp:comment_author>
			<wp:comment_author_email>christi_myles@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hampsteaddentalpractice.com/rashmi.html</wp:comment_author_url>
			<wp:comment_author_IP>107.182.116.125</wp:comment_author_IP>
			<wp:comment_date>2014-10-18 00:21:23</wp:comment_date>
			<wp:comment_date_gmt>2014-10-18 00:21:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent blog you have here.. It's hard to find high-quality writing like yours nowadays.
I really appreciate people like you! Take care!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30479</wp:comment_id>
			<wp:comment_author><![CDATA[vince malfitano]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://www.hilcoind.com/about-hilco-industrial-llc/team/9-about/team/5-joe-malfitano</wp:comment_author_url>
			<wp:comment_author_IP>204.44.85.176</wp:comment_author_IP>
			<wp:comment_date>2014-10-17 23:04:37</wp:comment_date>
			<wp:comment_date_gmt>2014-10-17 23:04:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>vince malfitano...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30805</wp:comment_id>
			<wp:comment_author><![CDATA[auto accident attorney]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://thelawyerinusa.com/auto-accident-attorney-things-to-consider-to-finding-the-best-one/</wp:comment_author_url>
			<wp:comment_author_IP>173.213.81.31</wp:comment_author_IP>
			<wp:comment_date>2014-10-23 15:33:31</wp:comment_date>
			<wp:comment_date_gmt>2014-10-23 15:33:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>auto accident attorney...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44400</wp:comment_id>
			<wp:comment_author><![CDATA[accountants in Hampstead]]></wp:comment_author>
			<wp:comment_author_email>sammy_kreider@web.de</wp:comment_author_email>
			<wp:comment_author_url>https://storify.com/tim7gu07pe/is-accountants-service-a-valuable-tool-to-your-bus</wp:comment_author_url>
			<wp:comment_author_IP>198.12.117.206</wp:comment_author_IP>
			<wp:comment_date>2015-05-15 18:21:47</wp:comment_date>
			<wp:comment_date_gmt>2015-05-15 18:21:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Personal Property Items Found in Apartment Buildings.

Always keep an accurate record of your transactions. Partnership ' 
In business, the term partnership refers to a mutual agreement by two or more parties to pool their resources to form a 
business organization, whereby each partner's interest is determined by the proportion of his share over the 
total amount pooled.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32174</wp:comment_id>
			<wp:comment_author><![CDATA[myphamkoala]]></wp:comment_author>
			<wp:comment_author_email>estellewoodd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://myphamhanquocso1.com</wp:comment_author_url>
			<wp:comment_author_IP>155.94.208.6</wp:comment_author_IP>
			<wp:comment_date>2014-11-16 05:27:47</wp:comment_date>
			<wp:comment_date_gmt>2014-11-16 05:27:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the admin of this website is genuinely working hard for his web 
site, for the reason that here every material is quality based stuff.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65269</wp:comment_id>
			<wp:comment_author><![CDATA[chữa bệnh trĩ]]></wp:comment_author>
			<wp:comment_author_email>patti.millsaps@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://chuabenhthuocnam.com/</wp:comment_author_url>
			<wp:comment_author_IP>199.180.114.192</wp:comment_author_IP>
			<wp:comment_date>2015-08-12 11:17:49</wp:comment_date>
			<wp:comment_date_gmt>2015-08-12 11:17:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[rắn chắc hẳn đại hồi nhắc nhở đến bệnh trĩ thời ai trong suốt chúng mỗ đều biết đấy là bệnh giống, những chớ giả dụ ai cũng 
hiểu biết cả quách bệnh trĩ. Thậm chí, những người đắt bệnh trĩ vày thiếu hiểu biết phai căn bệnh này mà 
hở vứt sang thời khắc “vàng” phanh điều trị bệnh trĩ xuể nhất.

tợ trên thuộc tính và diễn đạt hạng bệnh, trĩ để chia vào đánh 3 loại: trĩ ngoại, trĩ nội và trĩ hỗn hợp.
trong suốt bài xích viết lách sau đây chúng tôi 
sẽ giúp cạc bạn có cái ngóng tổng quan liêu nhất phăng bệnh 
trĩ nội, một loại trĩ hoi lắm khó chịu và 
nguy hiểm biếu người bệnh nhất.
Trĩ nội là bệnh chi?
Trĩ nội (Internal hemorrhoids): là bệnh mà các búi trĩ xuất phát từ bỏ những đám rối yên tĩnh mạch bị phùng lên ở bên trong 
suốt hậu môn bên trên đàng lược. Bệnh trĩ nội để cứt đả 4 Cấp lóng:

gấp kiêng 1: Búi trĩ phồng lên nhưng mà chứ sa ra ngoài.
Ở vội độ nào là, người bệnh nhiều thể bị tung ngày tiết nhút nhát ỉa.


gấp cỡ 2: Búi trĩ lâm vào ngoài khi ỉa và sút 
ra trực tính nhát trớt xong.chữa bênh trĩ ngoại
vội tầm 3: Búi trĩ sa chắc vào ngoài chốc đi ngoài.
Thường nếu như dùng tay đẩn vào. chữa 
bệnh táo bón
vội kiêng 4: Búi trĩ rơi đứt ra ngoài lỗ đít, 
dùng tay xô ra búi trĩ lại tròi vào.
Trĩ nội tuy rằng là bệnh lành tính tình, chứ nguy 
hiểm tới tính mệnh cơ mà do xuất hiện thời ở khu vực “ngấm ngầm kín”, cộng đồng dạ lý sợ, hổ ngươi mà đa số những người mắc trĩ đền giấu bệnh 
và từ chừng cách chữa trừng trị. Chỉ tã bệnh biến chứng nhẹ, 
ảnh hưởng to tới đả việc, cuộc sống thông thường 
và hoạt động “phòng the” thời người bệnh mới phứt khám đường.
nhát nào là bệnh rất khó chữa và người 
bệnh sẽ giàu nguy tê mắc nếu đơn mệnh bệnh lý lỗ đít – trực tràng 
hiểm khác, thậm chấy là phải sống chung cùng trĩ nội cả đời.

Thủ phạm hoi bệnh trĩ nội :
thó phạm gây bệnh trĩ tuy chửa đặt thi hài định tuyền ràng và vững chắc.
mà lại những yếu tố sau đây được dòm như là những 
điều kiện tiện lợi biếu bệnh nảy:
Táo bón năng lỵ: Thường thời những ụ ở bên trong suốt hậu môn thắng thổi phồng đầy máu 
xuể giúp kiểm rà soát việc bay chi tiêu.
phải bạn ngồi hay rặn quá lâu buổi chạy chi tiêu, sẽ 
tiến đánh tăng sức ép hi vọng băng bụng và miền xương chậu, làm cho các yên tĩnh mạch 
ở cạc mô đằng trên đường lược bị chết thật tìm tuồng lúc và phùng lên, 
hoi bởi vậy trĩ nội. nên chi, cồn tác rặn hồi 
hương bị táo bón và đi tả kinh niên là thó phạm 
trước nhất hoi do vậy bệnh trĩ nội.

tiễn đưa thai và đơm con: nữ giới tiễn thai trong 6 tháng cuối thai kỳ cũng dễ mắc bệnh trĩ, nguyên nhân là bởi vì lực nặng mức 
thai nhi gây sát lên cạc huyết quản ở miền xương chậu khiến biếu danh 
thiếp huyết mạch nào bị giãn ra. Và hễ tác rặn chốc đổ em rỏ là 
“cồn lực” xuể các mạch máu 
nào là tạo thành búi trĩ. đền rồng thì bệnh trĩ nội trong trường hạp này sẽ từ bỏ khỏi sau tã lót chấm dứt 
kỳ thai sản.
Đứng hoặc ngồi lâu đơn nơi: lót nghiên cứu áp lực 
tĩnh mạch trĩ, người mỗ thấy rằng áp lực yên tĩnh mạch 
trĩ là 25cm H2O ở tư thế nằm, tăng vọt 
lên 75cm H2O ở phong độ đứng hoặc ngồi.
bởi vậy, tỉ luỵ đắt bệnh trĩ nội ở nghề 
nghiệp nếu như đứng lâu, ngồi lắm, báo cáo phăng 
lại như thư ký bàn giấy, viên chức bán quán, viên chức đả sở, thợ may, thợ kí tóc…cao hơn những nghề khác.

Bệnh lỗ đít – thường trực tràng khác: bâu bướu hậu môn túc trực tràng, 
ung thơ từ trực tràng, mệ bướu miền tiểu khung… tã 
lót to lắm dạng chèn ép và cản ngăn sự lưu thông hiểu huyết cụm 
từ các yên tĩnh mạch xung lòng vòng lỗ đít tiến đánh biếu các 
yên tĩnh mạch này căng phùng lên tạo thành bệnh trĩ nội.

trong suốt những trường học hợp nà, trĩ nội thắng 
coi là triệu chứng thứ danh thiếp bệnh trên, nên chập điều trừng phạt 
ta phải điều trừng trị nguyên cớ không chớ trừng trị như bệnh trĩ.

⇓⇓⇓
trọng điểm sửa bệnh thuốc ta, sửa bệnh Trĩ Nội khỏi rắn chắc, chứ tái 
phân phát văn bằng 100% Thảo dược thiên nhiên:
♥ Căn cứ mức độ bệnh mà lại trọng điểm sẽ có phương án điều trừng phạt phù hợp nhất cho khoảng bệnh nhân.
♥ Điều trừng phạt phẳng phiu 100% Thảo dược thiên nhiên : An rành – 
Dễ sử dụng
♥ thời kì điều trị bệnh Trĩ Nội : Trung bình kiêng 
30 ngày.
Bệnh trĩ nội giàu những triệu chứng gì?
tung huyết là triệu làm chứng có sớm nhất và Thường gặp nhất ở lùng 1 và 
2. Triệu làm chứng này Thường rất âm thầm và người bệnh chỉ vạc bây giờ tã lót thấy huyết thẩm ở giấy rệ đơm hay 
là nhầm trong suốt phận tã béng đại tiện. Càng phăng sau huyết tan càng lắm và lắm 
dạng tia, rỏ giọt hay cục súc ngày tiết đông.
giàu trường thích hợp người bệnh nếu như về gấp cứu vày qua đời tiết quá giàu.


sa búi trĩ: Xuất hiện ở trĩ nội lùng 3, sau triệu chứng 
tan máu và người bệnh sẽ lắm cảm giác tồn tại dị phẩy ở hậu môn. hồi hương đầu, sau Mỗi lượt đại tiện người bệnh sẽ chộ có đơn vô 
khối nhỏ lồi vào ở lỗ lã hậu môn và nhiều dạng từ 
sụt ra buổi đại tiện xong xuôi. Càng béng sau ối 
lồi đó càng lớn lên và chả trường đoản cú sụt ra sau tã ỉa nữa nhưng mà phải dùng tay nhồi ra.
rút cục ti tỉ lồi đấy sẽ rớt chắc ra ngoài hậu môn.
Ngoài 2 triệu chứng trên, người bệnh sẽ chộ đau, ngứa và ẩm ướt ở đít vực vòng vo lỗ đít.
Đau có tã lót ngồi và chuyển di.

Biến chứng mức bệnh trĩ nội
Bệnh trĩ nội giả dụ không xuể phạt giờ 
và điều trừng trị kịp thời sẽ hoi thành thử những biến chứng nghiêm tôn trọng và 
hiểm như:
– Tắc mạch:
đền rồng xảy ra ở trĩ ngoại hơn trĩ nội.
lắm thể là do tan vỡ yên tĩnh mạch năng vị hiện tượng đông máu trong vâng huyết 
mạch. nhút nhát soi lỗ đít sẽ thấy búi trĩ lắm màu lừ xanh, kích thước 
to hơn hột đậu, chèn vào thấy căng mọng và 
đau rát. Người bệnh sẽ thấy dễ chịu 
nếu như nhằm rạch lấy cộc cằn máu đông ra.

– Nghẹt:
giàu trạng thái nghẹt 1 phần hay là quơ hậu 
môn. Xảy vào hồi búi trĩ hoặc vòng trĩ 
xa đứt ra ngoài khiến huyết quản bi Tắc và hoi phò nại, vì đấy chẳng thể trường 
đoản cú thụt lại ra trong suốt tâm lỗ đít phanh.

lót thăm khám sẽ thấy bình diện ngoài thứ xứ 
đa loanh quanh nơi nghẹt giàu màu xám, mặt trong là niêm mạc màu nâu hường, sưng nài,
tản mạn giàu những nốt xám đen là do 
xuất hiện thời hiện thời tuyệt nhiên hoại tử.

– Nhiễm khuẩn:
đền là viêm khe, viêm mọc, polyp lỗ đít,
nứt khe hậu môn…. lót bị nhiễm khuẩn người bệnh sẽ nhiều cảm giác ngứa ngáy hoặc lạnh rát.
tã lót thăm khám xét người bệnh sẽ thấy rất đau, tê vòng hậu môn thít chém đẹp, giãn nở liệt.
rọi hậu môn thấy các mọc phò nại sưng to, 
màu trắng, danh thiếp kẽ nằm giữa các búi trĩ bị loét cạn và lắm màu hường.

⇓⇓⇓
trọng tâm tư vấn và sửa bệnh thuốc ta, 
chữa bệnh Trĩ Nội khỏi đứt, chớ tái phát kì 100% Thảo 
dược tự nhiên :
Cách sử dụng Thuốc : phối hợp 2 loại thuốc 
: Thuốc Cao và Thuốc đắp ra huyệt bách họp ( thót 
mỏm đầu) . Thời gian điều trị bệnh 
Trĩ Nội làng nhàng từ bỏ 20 đến 30 ngày.

1. Thuốc Cao :
– Mỗi liệu thần hồn đệ trình điều trừng phạt gồm giàu 2 mảnh cao.
Mỗi mảnh cứt 15 phần sử dụng tặng 15 ngày điều trừng phạt.
mỗi một ngày 2 – 3 dò.
– Hòa ra nước ấm rồi uống ( sau xực)
2. Thuốc bao trùm phụt trốc đầu ( 
Huyệt Bách họp) :
– Thuốc nhằm chế biến từ Thảo dược báng : cần bảo cai quản trong 
suốt cản bủn xỉn đậy lạnh
mỗi một liệu đệ trình thuốc trùm : bệnh nhân béng chia đánh 10 phần văn bằng nhau.
mỗi một phần dùng cho 3 ngày điều trừng trị.

– Cách sử dụng : trùm thuốc ra phần vụt 
(ng5) trên nóc đầu, nhất quyết kì 1 khăn rỏ.
Mỗi ngày bao trùm 2 dọ, mỗi một bận trường 
đoản cú 15-20 phút.
Chú ý : mỗi một phần thuốc sử dụng tặng 
3 ngày, bởi vậy sau mỗi một dọ dùng xong, thuốc cần bảo quản ngại trong cản đá tủ 
nóng. Trước nhát sử dụng 60 phút lấy ra tặng phạng 
đông, sau đấy phun vắng Rượu gạo thờ ơ vào thuốc (tặng thuốc mềm 
mỏng và lắm đủ lóng ẩm) rồi bao trùm 
vào vọt.
– Thuốc trùm có tác dụng : Thăng Dương khí, điều trừng phạt tiệm 
quả cạc chứng sớt, phạng ( Trĩ, rớt dạ con..),đồng thì bồi dưỡng Tỳ,
bởi vì giúp nhuận tràng, chống táo bón và 
cản đề phòng Trĩ tái vạc.
♥ Kết trái sau điều trừng trị : Bệnh nhân dịp khỏi chắc bệnh Trĩ ( không 
đang búi trĩ, không trung đau rát hậu môn, đừng 
vào huyết..) và chả tái phạt.
♥ cùng trường học hợp bị bệnh Trĩ Nội lâu 
năm, Thời gian điều trị lắm trạng thái kéo dài hơn.
♥ hàng trăm bệnh nhân bị bệnhTrĩ Nội dùng 
Thuốc mực trọng điểm vẫn khỏi rắn chắc bệnh và 
chớ tái phạt.
♥ Hoàn lại 100% Tiền Thuốc giả dụ bệnh không thuyên giảm.

- See more at: http://chuabenhthuocnam.com/benh-tri-noi/#sthash.6dBn8wFN.dpuf]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56433</wp:comment_id>
			<wp:comment_author><![CDATA[เกมส์วันพีช]]></wp:comment_author>
			<wp:comment_author_email>sean.dibella@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://bsv-dortmund-koerne.de/index.php?option=com_phocaguestbook&amp;view=phocaguestbook&amp;id=1&amp;Itemid=29</wp:comment_author_url>
			<wp:comment_author_IP>60.164.223.13</wp:comment_author_IP>
			<wp:comment_date>2015-06-24 07:53:31</wp:comment_date>
			<wp:comment_date_gmt>2015-06-24 07:53:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Select a powerful under-wire string bikini high 
but if your bust line is usually larger. My friend told me that he had in no way gotten enough gold for the next level 
instruction. In fact, lumber professionals agree that the older the wood, the better the quality.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37568</wp:comment_id>
			<wp:comment_author><![CDATA[Darrin Ohora]]></wp:comment_author>
			<wp:comment_author_email>blairfrantz@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://newepic6549.over-blog.com/2015/02/van-insurance-tips-how-you-can-save-on-premiums.html</wp:comment_author_url>
			<wp:comment_author_IP>23.94.75.90</wp:comment_author_IP>
			<wp:comment_date>2015-02-26 21:44:03</wp:comment_date>
			<wp:comment_date_gmt>2015-02-26 21:44:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Αppreciation to mƴ father who shared with me about this website, this website is truly awesome.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38446</wp:comment_id>
			<wp:comment_author><![CDATA[Lucio]]></wp:comment_author>
			<wp:comment_author_email>odelllawson@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://Downloadcrackz.com/kmspico-v10-zero-a-p2p-full-download/</wp:comment_author_url>
			<wp:comment_author_IP>167.160.126.52</wp:comment_author_IP>
			<wp:comment_date>2015-03-15 16:37:01</wp:comment_date>
			<wp:comment_date_gmt>2015-03-15 16:37:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That is a great tip particularly to those fresh to the blogosphere.

Brief but very accurate info… Thanks for sharing this one.
A must read article!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49601</wp:comment_id>
			<wp:comment_author><![CDATA[football]]></wp:comment_author>
			<wp:comment_author_email>leonburkhart@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://balanceuniversal.halfwaydeal.com/SBOBET911-a5104.html</wp:comment_author_url>
			<wp:comment_author_IP>5.226.171.63</wp:comment_author_IP>
			<wp:comment_date>2015-06-05 02:12:08</wp:comment_date>
			<wp:comment_date_gmt>2015-06-05 02:12:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's impressive that you are getting ideas from this article as well as from our argument made here.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31889</wp:comment_id>
			<wp:comment_author><![CDATA[help sell my house]]></wp:comment_author>
			<wp:comment_author_email>verabeardsmore@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://youtu.be/3RSUDmoeebI</wp:comment_author_url>
			<wp:comment_author_IP>165.231.8.246</wp:comment_author_IP>
			<wp:comment_date>2014-11-11 13:42:19</wp:comment_date>
			<wp:comment_date_gmt>2014-11-11 13:42:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's really a cool and useful piece of information. I'm satisfied that 
you shared this helpful information with us. Please keep 
us informed like this. Thank you for sharing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32755</wp:comment_id>
			<wp:comment_author><![CDATA[www.korsetten.se]]></wp:comment_author>
			<wp:comment_author_email>tiffiny.handy@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://chungbcap.blog.com/2014/06/27/﻿foto-merchant/</wp:comment_author_url>
			<wp:comment_author_IP>155.94.133.99</wp:comment_author_IP>
			<wp:comment_date>2014-11-27 17:44:18</wp:comment_date>
			<wp:comment_date_gmt>2014-11-27 17:44:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nu när Ԁu vet lite mer om vad еn orgy ärär det kanske ags för dig att prova,
Ԁu med. Sök effer medlemmar från din stad ooch ɗu kommer med all sannolighet att hiitta någon і din närhet.
Vi har många medlemmar som är nyfikna, villiga 
och kåtа, träffa någon aav ɗem redan idag.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1070</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>petersonah@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.197.147.16</wp:comment_author_IP>
			<wp:comment_date>2010-09-18 16:11:51</wp:comment_date>
			<wp:comment_date_gmt>2010-09-18 16:11:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, 

Thanks for sharing your code with us.  I was curious if you have a work around for Binding Dynamic properties with a DataForm in Silverlight.

Andrew]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30786</wp:comment_id>
			<wp:comment_author><![CDATA[Roslyn]]></wp:comment_author>
			<wp:comment_author_email>laverne.vonwiller@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://kunstkannmannichtessen.com</wp:comment_author_url>
			<wp:comment_author_IP>23.95.94.81</wp:comment_author_IP>
			<wp:comment_date>2014-10-23 09:52:11</wp:comment_date>
			<wp:comment_date_gmt>2014-10-23 09:52:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Strawberries, blueberries, mangoes - really any fruit works 
jointly with it. The night time snack is cucumber and celery, a 
minute amount of potato chips, drummettes and a miniature candy bar.
You can find cereals and breads which make use of these grains and are great for you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80199</wp:comment_id>
			<wp:comment_author><![CDATA[alimentacion sana niños]]></wp:comment_author>
			<wp:comment_author_email>dominicrousseau@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.219.105.163</wp:comment_author_IP>
			<wp:comment_date>2016-01-21 00:59:29</wp:comment_date>
			<wp:comment_date_gmt>2016-01-21 00:59:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Los dispositivos mecánicos de compresiones 
torácicas no se recomiendan de forma rutinaria, pero se consideran opción alternativa 
razonable” en algunas circunstancias.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27050</wp:comment_id>
			<wp:comment_author><![CDATA[pugilism DVD]]></wp:comment_author>
			<wp:comment_author_email>mikeltenison@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://4kodvds.com/</wp:comment_author_url>
			<wp:comment_author_IP>172.245.214.132</wp:comment_author_IP>
			<wp:comment_date>2014-06-17 07:22:18</wp:comment_date>
			<wp:comment_date_gmt>2014-06-17 07:22:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My family members every time say that I am wasting my 
time heree at web, but I knjow I am getting experience all the 
time by reading thes good articles.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35327</wp:comment_id>
			<wp:comment_author><![CDATA[Replacement Windows]]></wp:comment_author>
			<wp:comment_author_email>maya.cheeke@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://aol.com</wp:comment_author_url>
			<wp:comment_author_IP>104.168.75.71</wp:comment_author_IP>
			<wp:comment_date>2015-01-19 18:12:52</wp:comment_date>
			<wp:comment_date_gmt>2015-01-19 18:12:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Often times, builders will install cheaper and less energy efficient windows to save some money.
They give your home personality, and they act as a conduit 
of visual information to and from the outside world.
Replacing old windows makes sense, and cents and 
dollars.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57588</wp:comment_id>
			<wp:comment_author><![CDATA[probolan 50]]></wp:comment_author>
			<wp:comment_author_email>amyspalding@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dpreview.com/members/6695002629/overview</wp:comment_author_url>
			<wp:comment_author_IP>192.200.24.246</wp:comment_author_IP>
			<wp:comment_date>2015-06-29 12:01:04</wp:comment_date>
			<wp:comment_date_gmt>2015-06-29 12:01:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for some other excellent article. The place else may just anybody get that kind of information in such an ideal means 
of writing? I have a presentation subsequent week, and I am at the search for such information.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48605</wp:comment_id>
			<wp:comment_author><![CDATA[www.elle.com]]></wp:comment_author>
			<wp:comment_author_email>sethgoodlet@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.elle.com/beauty/tips/a26400/a-celeb-dentist-explains-how-to-get-your-whitest-smile-at-home/</wp:comment_author_url>
			<wp:comment_author_IP>23.94.99.45</wp:comment_author_IP>
			<wp:comment_date>2015-05-31 14:44:28</wp:comment_date>
			<wp:comment_date_gmt>2015-05-31 14:44:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[whoah this blog is great i really like reading your articles.
Keep up the good work! Yoou realize, lots 
of individuals are hunting around for this info, you 
could aid them greatly.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33855</wp:comment_id>
			<wp:comment_author><![CDATA[Logan]]></wp:comment_author>
			<wp:comment_author_email>kellyenovak@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://atomicgentlemenpolicesqueamishcl.tumblr.com/post/101678646829</wp:comment_author_url>
			<wp:comment_author_IP>107.182.116.37</wp:comment_author_IP>
			<wp:comment_date>2014-12-27 12:40:25</wp:comment_date>
			<wp:comment_date_gmt>2014-12-27 12:40:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It is actually only a superb item especially for males, who wish to find 
out to flirt or enrich it. Magnetic Messaging, it should be stated, does not have 
only one miracle text that will persuade the lady today; nevertheless 
the methods within the book have been shown to perform as well as have attained optimistic success several males across the 
globe.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33846</wp:comment_id>
			<wp:comment_author><![CDATA[destiny tuning]]></wp:comment_author>
			<wp:comment_author_email>robinhedberg@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://squarefighter5209.tumblr.com/post/101677915262</wp:comment_author_url>
			<wp:comment_author_IP>167.160.110.162</wp:comment_author_IP>
			<wp:comment_date>2014-12-27 05:00:13</wp:comment_date>
			<wp:comment_date_gmt>2014-12-27 05:00:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The truth that this product features practical, easy-to-implement guidelines and tactics will be the 
greatest advantage of all of it. I guess that numerous law of attraction solutions fail simply because they consist of nothing but fluffy, theoretical, impractical BS though the creator of Manifestation Miracle  managed to put together a course that is laser focused on obtaining final results,
Fast!
So when I initially discovered  this course I was truly pleased, even if it 
sounded a bit too fantastic to be real, and decided to obtain a review copy soon. 
And it was the right choice! I believe this really is the program which has aided me 
by far the most in knowing the law of attraction the most effective and also to be capable to place it to great use, so I 
truly am grateful to the creator for placing it together.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49120</wp:comment_id>
			<wp:comment_author><![CDATA[agrandir pénis]]></wp:comment_author>
			<wp:comment_author_email>angelomccubbin@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://cdn-js.supernova.com/Nofile1/blog/1961000/Le-Play-Show-to-MaxoSize-et-la-taille-du-sexe-Live</wp:comment_author_url>
			<wp:comment_author_IP>188.240.139.19</wp:comment_author_IP>
			<wp:comment_date>2015-06-03 00:23:03</wp:comment_date>
			<wp:comment_date_gmt>2015-06-03 00:23:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Homeopathy as a type of medical treatment was uncovered in 1796 by Samuel Hahnemann a German chemist who believed that the underlying 
causes of numerous diseases that impacted human beings were 
phenomena that he referred to as 'miasmas'.

<a href="http://cdn-js.supernova.com/Nofile1/blog/1961000/Le-Play-Show-to-MaxoSize-et-la-taille-du-sexe-Live" rel="nofollow">agrandir pénis</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30761</wp:comment_id>
			<wp:comment_author><![CDATA[Juveliere Review]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.shannonjacksonarnold.com/blog/2014/5/9/field-notes-blossoming.html</wp:comment_author_url>
			<wp:comment_author_IP>23.95.34.37</wp:comment_author_IP>
			<wp:comment_date>2014-10-23 01:27:25</wp:comment_date>
			<wp:comment_date_gmt>2014-10-23 01:27:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Juveliere Review...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38190</wp:comment_id>
			<wp:comment_author><![CDATA[www.kzndhs.gov.za]]></wp:comment_author>
			<wp:comment_author_email>romanhansman@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kzndhs.gov.za/Default.aspx?tabid=296&amp;userId=550512</wp:comment_author_url>
			<wp:comment_author_IP>67.22.36.101</wp:comment_author_IP>
			<wp:comment_date>2015-03-11 03:22:19</wp:comment_date>
			<wp:comment_date_gmt>2015-03-11 03:22:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Their independent nature makes them very hard to train, but you must have patience.
If your house is damaged by a sink hole, for the safety of oneself and your family, 
take action instantly. Click here to download Dog Tricks &amp; Bark Machine in i - Tunes.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37446</wp:comment_id>
			<wp:comment_author><![CDATA[apartment near ucla homes for rent zionsville indiana]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://lili.rs/lili/lili-casopis/</wp:comment_author_url>
			<wp:comment_author_IP>155.94.157.132</wp:comment_author_IP>
			<wp:comment_date>2015-02-23 23:21:17</wp:comment_date>
			<wp:comment_date_gmt>2015-02-23 23:21:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>apartment near ucla homes for rent zionsville indiana...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36967</wp:comment_id>
			<wp:comment_author><![CDATA[testshock Guide]]></wp:comment_author>
			<wp:comment_author_email>isabelle.counsel@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=7eMs6PRuAGM</wp:comment_author_url>
			<wp:comment_author_IP>104.168.74.208</wp:comment_author_IP>
			<wp:comment_date>2015-02-12 13:24:39</wp:comment_date>
			<wp:comment_date_gmt>2015-02-12 13:24:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34593</wp:comment_id>
			<wp:comment_author><![CDATA[Susie]]></wp:comment_author>
			<wp:comment_author_email>pattinorth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://huahuagongz.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>204.74.208.182</wp:comment_author_IP>
			<wp:comment_date>2015-01-10 03:41:39</wp:comment_date>
			<wp:comment_date_gmt>2015-01-10 03:41:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your marvelous posting! I really enjoyed reading it, 
you're a great author. I will make sure to bookmark your blog and may come back at some point.

I want to encourage yourself to continue your great job, 
have a nice evening!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37433</wp:comment_id>
			<wp:comment_author><![CDATA[link wheel service]]></wp:comment_author>
			<wp:comment_author_email>dorie.trethowan@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://cav.unibg.it/elephant_castle/web/saggi/nell-ombra-liquida-della-memoria-attraverso-l-opera-di-christian-boltanski/83</wp:comment_author_url>
			<wp:comment_author_IP>113.113.20.101</wp:comment_author_IP>
			<wp:comment_date>2015-02-23 15:05:21</wp:comment_date>
			<wp:comment_date_gmt>2015-02-23 15:05:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Speaking from personal experience, I have used exterior corporations to construct link 
wheels simply because they're so time consuming.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32855</wp:comment_id>
			<wp:comment_author><![CDATA[app maker]]></wp:comment_author>
			<wp:comment_author_email>hiramdisney@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://abouthowtomakeanapp.Wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>93.61.36.138</wp:comment_author_IP>
			<wp:comment_date>2014-11-30 22:50:05</wp:comment_date>
			<wp:comment_date_gmt>2014-11-30 22:50:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, this weekend is good in support of me, since this point 
in time i am reading this impressive educational article here at my residence.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39769</wp:comment_id>
			<wp:comment_author><![CDATA[reklama]]></wp:comment_author>
			<wp:comment_author_email>martinatracey@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://mypaper.pchome.com.tw/andruea07ak/post/1335655087</wp:comment_author_url>
			<wp:comment_author_IP>5.157.42.29</wp:comment_author_IP>
			<wp:comment_date>2015-04-19 04:57:29</wp:comment_date>
			<wp:comment_date_gmt>2015-04-19 04:57:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi to every body, it's my first visit of this web site; this website includes amazing and actually good information in favor of visitors.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36464</wp:comment_id>
			<wp:comment_author><![CDATA[WAKE UP!!!]]></wp:comment_author>
			<wp:comment_author_email>gladysschaaf@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=js8_Ey1Ubwo</wp:comment_author_url>
			<wp:comment_author_IP>173.232.96.179</wp:comment_author_IP>
			<wp:comment_date>2015-01-31 02:29:27</wp:comment_date>
			<wp:comment_date_gmt>2015-01-31 02:29:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It is the best choice for video promotion cheap for your business.

Julius Caesar is said to have promoted someone to Centurions for display of 
courage and spirit. The only question that remains for now is, how are you 
going to use Vine to promote or inform your audiences.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36578</wp:comment_id>
			<wp:comment_author><![CDATA[Mahar Laskar Pelangi]]></wp:comment_author>
			<wp:comment_author_email>tabithavandegrift@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.lintas.me/entertainment/celebrities/smeaker.com/pemakaman-verrys-yamarno-mahar-laskar-pelangi</wp:comment_author_url>
			<wp:comment_author_IP>198.50.171.107</wp:comment_author_IP>
			<wp:comment_date>2015-02-01 07:55:34</wp:comment_date>
			<wp:comment_date_gmt>2015-02-01 07:55:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As celebrities need to take care of their bodies, it becomes imperative for them to maintain 
the way they look. Bridgeport has a large downtown 
area, and also lots on the outside of town including a place where actors can shoot films, and even an elite area for celebrities (or 
those with large sums of money) can live. Many overweight people are diabetics and arthritic sufferers and 
need to walk and stay active moderately.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30749</wp:comment_id>
			<wp:comment_author><![CDATA[Lego Star Wars Millennium Falcon 7965]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Legostarwarsmillenniumkubrutt55.wordpress.com/2013/12/24/lego-star-wars-millennium-falcon-7965/</wp:comment_author_url>
			<wp:comment_author_IP>68.50.249.235</wp:comment_author_IP>
			<wp:comment_date>2014-10-22 21:00:18</wp:comment_date>
			<wp:comment_date_gmt>2014-10-22 21:00:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Lego Star Wars Millennium Falcon 7965...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30753</wp:comment_id>
			<wp:comment_author><![CDATA[condos sunrise fl - N. Crawford]]></wp:comment_author>
			<wp:comment_author_email>dorinebrabyn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=3m1fIMWm1hk</wp:comment_author_url>
			<wp:comment_author_IP>23.94.48.161</wp:comment_author_IP>
			<wp:comment_date>2014-10-22 23:02:51</wp:comment_date>
			<wp:comment_date_gmt>2014-10-22 23:02:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Downsizing when you move can be a concern, particularly 
if your Toronto condo for sale has few square feet.
Once the buyer reviews these documents, and if he should decide to withdraw his offer, 
your agent will have seven days to notify the seller in writing of your intention to withdraw.

About a month went by when her doctor called me to come in for a meeting.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35438</wp:comment_id>
			<wp:comment_author><![CDATA[Graciela]]></wp:comment_author>
			<wp:comment_author_email>darnellhensman@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.instapaper.com/read/536156242</wp:comment_author_url>
			<wp:comment_author_IP>78.4.45.38</wp:comment_author_IP>
			<wp:comment_date>2015-01-20 21:03:01</wp:comment_date>
			<wp:comment_date_gmt>2015-01-20 21:03:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up friends, how is everything, and what you want to say regarding this article, in my view its genuinely awesome in favor of me.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33179</wp:comment_id>
			<wp:comment_author><![CDATA[horde conquer hack generator bo2 prestige]]></wp:comment_author>
			<wp:comment_author_email>staceygriego@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.nasa.gov/orbital/2014/10/24/orbital-crs-3-launch-scheduled-for-oct-27-liftoff/</wp:comment_author_url>
			<wp:comment_author_IP>104.131.31.111</wp:comment_author_IP>
			<wp:comment_date>2014-12-08 15:56:17</wp:comment_date>
			<wp:comment_date_gmt>2014-12-08 15:56:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[These themed game apps present a wider variety 
in experience, too. With high quality sound when singing video mobile is often better than the single mp3 which tend to give aan advantage oger mobile video format mp3 of this song.
Developed by Half Bake studios, this game has a record of 
20 million times of downloads.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52394</wp:comment_id>
			<wp:comment_author><![CDATA[importar com sucesso]]></wp:comment_author>
			<wp:comment_author_email>lavina.guardado@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>https://comprarimportandocomsucesso.com</wp:comment_author_url>
			<wp:comment_author_IP>23.89.254.150</wp:comment_author_IP>
			<wp:comment_date>2015-06-15 06:17:58</wp:comment_date>
			<wp:comment_date_gmt>2015-06-15 06:17:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Right now it appears like Wordpress is the preferred blogging platform available 
right now. (from what I've read) Is that what you're using on your blog?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48907</wp:comment_id>
			<wp:comment_author><![CDATA[foto ulang tahun]]></wp:comment_author>
			<wp:comment_author_email>matildaromano@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hidelink.ws/?url=http://fotopernikahan-jakarta.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>191.101.101.147</wp:comment_author_IP>
			<wp:comment_date>2015-06-01 21:32:42</wp:comment_date>
			<wp:comment_date_gmt>2015-06-01 21:32:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks in support of sharing such a pleasant opinion, article is nice, thats 
why i have read it entirely]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80548</wp:comment_id>
			<wp:comment_author><![CDATA[agencasino]]></wp:comment_author>
			<wp:comment_author_email>deangelo_moffat@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://judiindonesia93.sosblogs.com/</wp:comment_author_url>
			<wp:comment_author_IP>192.227.179.106</wp:comment_author_IP>
			<wp:comment_date>2016-03-14 10:28:56</wp:comment_date>
			<wp:comment_date_gmt>2016-03-14 10:28:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In view of this, I am now going to make what I consider to be the single most important statement in respect 
to "Betting to Win":. Sims in 'The Sims" series of games has always been able to learn skills. Online casino roulette is a fun game; just don't get it into your heads.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33840</wp:comment_id>
			<wp:comment_author><![CDATA[http://unitedidesign.info/?p=23003]]></wp:comment_author>
			<wp:comment_author_email>danelundie@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://unitedidesign.info/?p=23003</wp:comment_author_url>
			<wp:comment_author_IP>192.255.75.139</wp:comment_author_IP>
			<wp:comment_date>2014-12-26 21:20:04</wp:comment_date>
			<wp:comment_date_gmt>2014-12-26 21:20:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An impressive share! I have just forwarded this onto a co-worker who had been conducting a little research on this.

And he actually ordered me dinner because I discovered it for 
him... lol. So allow me to reword this.... Thank YOU for the meal!!
But yeah, thanx for spending time to talk about this 
matter here on your website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41491</wp:comment_id>
			<wp:comment_author><![CDATA[apartmaji hrvaška]]></wp:comment_author>
			<wp:comment_author_email>fredericka.reiniger@hotmail.de</wp:comment_author_email>
			<wp:comment_author_url>http://completeranking.com</wp:comment_author_url>
			<wp:comment_author_IP>94.249.245.219</wp:comment_author_IP>
			<wp:comment_date>2015-04-29 12:59:44</wp:comment_date>
			<wp:comment_date_gmt>2015-04-29 12:59:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read so many content on the topic of the blogger 
lovers but this post is really a good paragraph, keep it 
up.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36884</wp:comment_id>
			<wp:comment_author><![CDATA[tarotista online free]]></wp:comment_author>
			<wp:comment_author_email>jamelmckelvey@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.tarotonlinegratuito.com/origenes-tarot.html</wp:comment_author_url>
			<wp:comment_author_IP>89.47.21.145</wp:comment_author_IP>
			<wp:comment_date>2015-02-09 11:46:13</wp:comment_date>
			<wp:comment_date_gmt>2015-02-09 11:46:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Amazing things here. I'm very happy to peer our article.
Thanks a lot and I am looking forward to touch you.
Will you please drop me a mail?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37505</wp:comment_id>
			<wp:comment_author><![CDATA[Terrell]]></wp:comment_author>
			<wp:comment_author_email>virginiashah@web.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/autobodynow</wp:comment_author_url>
			<wp:comment_author_IP>23.232.137.214</wp:comment_author_IP>
			<wp:comment_date>2015-02-25 15:27:28</wp:comment_date>
			<wp:comment_date_gmt>2015-02-25 15:27:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up it's me, I am also visiting this web site regularly, this website is 
genuinely good and the viewers are genuinely sharing good 
thoughts.

Also visit my website - compressor product features - <a href="https://www.facebook.com/autobodynow" rel="nofollow">Terrell</a> 
-]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48141</wp:comment_id>
			<wp:comment_author><![CDATA[buy apple fruits online india]]></wp:comment_author>
			<wp:comment_author_email>albertohines@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://acridsled1552.soup.io/post/580787296/Tandemsprung-Gutschein-13</wp:comment_author_url>
			<wp:comment_author_IP>5.8.47.57</wp:comment_author_IP>
			<wp:comment_date>2015-05-29 15:15:30</wp:comment_date>
			<wp:comment_date_gmt>2015-05-29 15:15:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[At the moment it gives Money on Supply (COD) as a fee choice and 
slated to launch its online payment gateway by next month.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48219</wp:comment_id>
			<wp:comment_author><![CDATA[pirater un compte facebook gratuitement en ligne sans payer]]></wp:comment_author>
			<wp:comment_author_email>bertie.bellamy@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://test.thebridessweet.com.au/?p=21</wp:comment_author_url>
			<wp:comment_author_IP>117.163.224.133</wp:comment_author_IP>
			<wp:comment_date>2015-05-30 00:27:34</wp:comment_date>
			<wp:comment_date_gmt>2015-05-30 00:27:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Il est clair que dans ces circonstances, tout ce qu'ils veulent savoir, ce sont des informations sur votre compte bancaire.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43987</wp:comment_id>
			<wp:comment_author><![CDATA[Abschussfahrt online schauen]]></wp:comment_author>
			<wp:comment_author_email>clarissa.lerma@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>https://Www.Facebook.com/pages/Abschussfahrt-Stream-Online-schauen-Deutsch/1608227116061384</wp:comment_author_url>
			<wp:comment_author_IP>104.194.198.95</wp:comment_author_IP>
			<wp:comment_date>2015-05-13 02:36:09</wp:comment_date>
			<wp:comment_date_gmt>2015-05-13 02:36:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm amazed, I have to admit. Rarely do I encounter a blog that's equally educative and interesting, and let me tell you, 
you've hit the ail on the head. The issue is something which too few men and women arre 
speaking intelligently about. Now i'm very 
happy I found this in my search for something concerning this.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44244</wp:comment_id>
			<wp:comment_author><![CDATA[praca]]></wp:comment_author>
			<wp:comment_author_email>thomas_rossi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.panelepodlogowe24.pl/solidna-marka-pergo.htm</wp:comment_author_url>
			<wp:comment_author_IP>23.94.74.17</wp:comment_author_IP>
			<wp:comment_date>2015-05-14 20:11:53</wp:comment_date>
			<wp:comment_date_gmt>2015-05-14 20:11:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a very good tip especially to those fresh to the blogosphere.
Simple but very precise info… Thanks for sharing this one.
A must read post!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35709</wp:comment_id>
			<wp:comment_author><![CDATA[https://facebook.com/freepdfpasswordremover]]></wp:comment_author>
			<wp:comment_author_email>dongottshall@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/freepdfpasswordremover</wp:comment_author_url>
			<wp:comment_author_IP>5.135.121.230</wp:comment_author_IP>
			<wp:comment_date>2015-01-23 23:39:16</wp:comment_date>
			<wp:comment_date_gmt>2015-01-23 23:39:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you a lot for sharing this with all of us you really understand what you are 
speaking approximately! Bookmarked. Please additionally seek advice from my website =).

We will have a link change agreement among us]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33138</wp:comment_id>
			<wp:comment_author><![CDATA[job tips]]></wp:comment_author>
			<wp:comment_author_email>marjorie.belue@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.msts.com.au/and-this-is-quote/</wp:comment_author_url>
			<wp:comment_author_IP>212.56.202.226</wp:comment_author_IP>
			<wp:comment_date>2014-12-07 12:08:16</wp:comment_date>
			<wp:comment_date_gmt>2014-12-07 12:08:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This web site truly has all of the information I wanted about this subject and 
didn't know who to ask.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36925</wp:comment_id>
			<wp:comment_author><![CDATA[Sitios de Webcams]]></wp:comment_author>
			<wp:comment_author_email>maggiewhaley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://trabajoenvideochat.tumblr.com/</wp:comment_author_url>
			<wp:comment_author_IP>104.140.80.175</wp:comment_author_IP>
			<wp:comment_date>2015-02-11 11:28:42</wp:comment_date>
			<wp:comment_date_gmt>2015-02-11 11:28:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dо you have any video of that? I'd want tto find out some additional infօrmation.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36924</wp:comment_id>
			<wp:comment_author><![CDATA[Mazie]]></wp:comment_author>
			<wp:comment_author_email>alicerasch@h-mail.us</wp:comment_author_email>
			<wp:comment_author_url>http://www.graveltronjefferson.com/uncategorized/anjaana-anjaani-film-review/</wp:comment_author_url>
			<wp:comment_author_IP>89.44.27.105</wp:comment_author_IP>
			<wp:comment_date>2015-02-11 09:09:47</wp:comment_date>
			<wp:comment_date_gmt>2015-02-11 09:09:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the admin of thios website is in fact working hard in favor of his wweb site, because hee every information is 
quality based material.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36112</wp:comment_id>
			<wp:comment_author><![CDATA[ppi claims]]></wp:comment_author>
			<wp:comment_author_email>mack_leblanc@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.kormann.ch/userinfo.php?uid=559716</wp:comment_author_url>
			<wp:comment_author_IP>198.23.174.92</wp:comment_author_IP>
			<wp:comment_date>2015-01-27 19:52:36</wp:comment_date>
			<wp:comment_date_gmt>2015-01-27 19:52:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's hard to find knowledgeable people for this 
subject, however, you seem like you know what you're talking about!
Thanks

my site <a href="http://www.kormann.ch/userinfo.php?uid=559716" rel="nofollow">ppi claims</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38792</wp:comment_id>
			<wp:comment_author><![CDATA[Bradly]]></wp:comment_author>
			<wp:comment_author_email>veta.jacquez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yonif123rw.com/index.php/buku-tamu</wp:comment_author_url>
			<wp:comment_author_IP>192.171.232.32</wp:comment_author_IP>
			<wp:comment_date>2015-03-28 17:44:53</wp:comment_date>
			<wp:comment_date_gmt>2015-03-28 17:44:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Las saunas se calientan hasta los ochenta 100 grados y se permanece en ellas unos diez quince minutos.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38880</wp:comment_id>
			<wp:comment_author><![CDATA[essex]]></wp:comment_author>
			<wp:comment_author_email>minerva_demole@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cityleaguehoops.net/forum/member.php?1465787-Annorballolve</wp:comment_author_url>
			<wp:comment_author_IP>178.88.174.206</wp:comment_author_IP>
			<wp:comment_date>2015-04-03 05:38:30</wp:comment_date>
			<wp:comment_date_gmt>2015-04-03 05:38:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Incredible is tasty



My brother recommended I may like this website. He used to be entirely right.
This publish truly made my day. You cann't imagine just how so 
much time I had spent for this info! Thank you!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32380</wp:comment_id>
			<wp:comment_author><![CDATA[Tre Residences]]></wp:comment_author>
			<wp:comment_author_email>opalaplin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://developersales.sg/tre-residences</wp:comment_author_url>
			<wp:comment_author_IP>142.4.193.226</wp:comment_author_IP>
			<wp:comment_date>2014-11-20 00:47:49</wp:comment_date>
			<wp:comment_date_gmt>2014-11-20 00:47:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[whoah this blog is excellent i really like studying your posts.
Keep up the good work! You recognize, lots of people 
are searching round for this information, you could aid them greatly.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42444</wp:comment_id>
			<wp:comment_author><![CDATA[sex]]></wp:comment_author>
			<wp:comment_author_email>aishabowe@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://nakashimatransformadores.com.br/manutencao/</wp:comment_author_url>
			<wp:comment_author_IP>89.77.203.116</wp:comment_author_IP>
			<wp:comment_date>2015-05-04 14:26:31</wp:comment_date>
			<wp:comment_date_gmt>2015-05-04 14:26:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi friends, its enormous post about tutoringand fully 
explained, keep it up all the time.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33189</wp:comment_id>
			<wp:comment_author><![CDATA[ballarat.edu.au]]></wp:comment_author>
			<wp:comment_author_email>alejandrafirkins@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://bike.ballarat.edu.au/forum/member.php?action=profile&amp;uid=211211</wp:comment_author_url>
			<wp:comment_author_IP>189.162.134.166</wp:comment_author_IP>
			<wp:comment_date>2014-12-09 01:16:31</wp:comment_date>
			<wp:comment_date_gmt>2014-12-09 01:16:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good blog you've got here.. It's hard to find good quality writing like yours these days.
I truly appreciate individuals like you! Take care!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38626</wp:comment_id>
			<wp:comment_author><![CDATA[jntu world previous question papers]]></wp:comment_author>
			<wp:comment_author_email>alejandrinachapin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jntuworldnew.soup.io/</wp:comment_author_url>
			<wp:comment_author_IP>177.84.241.107</wp:comment_author_IP>
			<wp:comment_date>2015-03-21 12:28:51</wp:comment_date>
			<wp:comment_date_gmt>2015-03-21 12:28:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You also need write it in personal style of writing.

Individuals are capable of learning invested in three styles, not each 
day for a. Match it with the own introduction.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33329</wp:comment_id>
			<wp:comment_author><![CDATA[jewelry sets]]></wp:comment_author>
			<wp:comment_author_email>darrylthiessen@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/1516386071958188</wp:comment_author_url>
			<wp:comment_author_IP>173.239.197.172</wp:comment_author_IP>
			<wp:comment_date>2014-12-13 07:20:08</wp:comment_date>
			<wp:comment_date_gmt>2014-12-13 07:20:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some people may not be partials to the yellow hue of gold, so silver is definitely a 
better option. Since most turquoise jewelry is set in silver, frequent wearing helps 
keep the silver from tarnishing. Quality service is the forever pursuit of Chinese fashion jewelry suppliers.


My blog post <a href="https://www.facebook.com/1516386071958188" rel="nofollow">jewelry sets</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30691</wp:comment_id>
			<wp:comment_author><![CDATA[Phil Pustejovsky]]></wp:comment_author>
			<wp:comment_author_email>michealwilkie@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://myqa-atomfizzers.rhcloud.com/questions/216/phil-pustejovsky-prudential-real-estate</wp:comment_author_url>
			<wp:comment_author_IP>23.232.143.175</wp:comment_author_IP>
			<wp:comment_date>2014-10-22 00:51:57</wp:comment_date>
			<wp:comment_date_gmt>2014-10-22 00:51:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[you are actually a just right webmaster. The website loading pace is amazing.

It kind of feels that you are doing any distinctive trick.
Furthermore, The contents are masterpiece. you have performed a wonderful job on this matter!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30679</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Pitoniak]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://www.prbuzz.com/business-entrepreneur/258168-hse-expert-erik-pitoniak-announces-opinions-on-air-quality.html</wp:comment_author_url>
			<wp:comment_author_IP>104.128.23.219</wp:comment_author_IP>
			<wp:comment_date>2014-10-21 20:17:21</wp:comment_date>
			<wp:comment_date_gmt>2014-10-21 20:17:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Erik Pitoniak...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37742</wp:comment_id>
			<wp:comment_author><![CDATA[outdoor aerobic]]></wp:comment_author>
			<wp:comment_author_email>dylanrigsby@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://cnn.com</wp:comment_author_url>
			<wp:comment_author_IP>69.12.90.25</wp:comment_author_IP>
			<wp:comment_date>2015-03-01 17:39:46</wp:comment_date>
			<wp:comment_date_gmt>2015-03-01 17:39:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33468</wp:comment_id>
			<wp:comment_author><![CDATA[Kup domeny które są na sprzedaż na rynkach zachodnich. Sprzedaj swoje domene i uzyskaj wyższa cene.]]></wp:comment_author>
			<wp:comment_author_email>monserrate_schimmel@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.domenydosprzedania.com</wp:comment_author_url>
			<wp:comment_author_IP>192.3.165.137</wp:comment_author_IP>
			<wp:comment_date>2014-12-16 17:41:59</wp:comment_date>
			<wp:comment_date_gmt>2014-12-16 17:41:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, I think your site might be having browser compatibility issues.
When I look at your website in Firefox, it looks fine but when opening in Internet Explorer, it has some 
overlapping. I just wanted to give you a quick heads up!
Other then that, awesome blog!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38971</wp:comment_id>
			<wp:comment_author><![CDATA[Finn]]></wp:comment_author>
			<wp:comment_author_email>athena.garlock@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://communitybookstore.net/messing/wp-trackback.php?p=16</wp:comment_author_url>
			<wp:comment_author_IP>69.12.82.237</wp:comment_author_IP>
			<wp:comment_date>2015-04-07 18:34:15</wp:comment_date>
			<wp:comment_date_gmt>2015-04-07 18:34:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Perhaps you had a fragmented family and never experienced consistency in your early years.
What do you believe have been the obstacles to reaching your healthy goals.
For cash games, you should always sit down at the table with at least 20-25 buy-ins for the level 
you intend to play at.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38891</wp:comment_id>
			<wp:comment_author><![CDATA[Texas debt settlement]]></wp:comment_author>
			<wp:comment_author_email>swennale@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://calhounphbv.jigsy.com/entries/general/texas-health-actions-for-children</wp:comment_author_url>
			<wp:comment_author_IP>198.52.228.156</wp:comment_author_IP>
			<wp:comment_date>2015-04-03 20:03:39</wp:comment_date>
			<wp:comment_date_gmt>2015-04-03 20:03:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good web site you have here.. It's hard to find high-quality writing 
like yours nowadays. I seriously appreciate people like you!
Take care!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63172</wp:comment_id>
			<wp:comment_author><![CDATA[game iphone]]></wp:comment_author>
			<wp:comment_author_email>garykieran@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.onecloudsecurity.com/how-to-replace-keys-on-a-laptop/</wp:comment_author_url>
			<wp:comment_author_IP>90.2.11.147</wp:comment_author_IP>
			<wp:comment_date>2015-08-02 00:16:05</wp:comment_date>
			<wp:comment_date_gmt>2015-08-02 00:16:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tap and clear the same-numbered tiles connected until your create a tile with 
score of 11. I might be wrong, but I'm almost sure that you've never sedn something 
like that before. To find ouut more information aboiut the selection of pre and post health screenings that we offer, orr to ask anny questions 
of uss then come and pay us a visit online at: <A>.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30591</wp:comment_id>
			<wp:comment_author><![CDATA[Eric D Gray]]></wp:comment_author>
			<wp:comment_author_email>staci_collingridgedetourcey@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ericgraybuffalony.kazeo.com/</wp:comment_author_url>
			<wp:comment_author_IP>192.208.188.115</wp:comment_author_IP>
			<wp:comment_date>2014-10-20 00:12:56</wp:comment_date>
			<wp:comment_date_gmt>2014-10-20 00:12:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, I want to subscribe for this weblog to 
get hottest updates, sso where can i do it please assist.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34379</wp:comment_id>
			<wp:comment_author><![CDATA[free quilting patterns for placemats]]></wp:comment_author>
			<wp:comment_author_email>erlinda_boyle@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.upperhaven.com/groups/benefits-of-a-singer-7470-confidence-sewing-machine-is-it-suitable-for-you/</wp:comment_author_url>
			<wp:comment_author_IP>198.27.66.46</wp:comment_author_IP>
			<wp:comment_date>2015-01-06 16:52:51</wp:comment_date>
			<wp:comment_date_gmt>2015-01-06 16:52:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Every time I was experiencing a malfunction or did not know using another, out came the manual 
and all sorts of my problems were solved.
When buying the machine quilting frame, ensure to concentrate 
on your needs first. For instance, is someone in the household looking for 
the method to store something eg a location to keep magazines tidy, are the table mats looking 
old or faded, does Dad need a new apron for barbecuing therefore on.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3669</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email>rob.manley@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.30.35.87</wp:comment_author_IP>
			<wp:comment_date>2010-12-22 11:03:30</wp:comment_date>
			<wp:comment_date_gmt>2010-12-22 11:03:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulation.....you are a legend and have made my experience of MVVM a little more enjoyable! Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39831</wp:comment_id>
			<wp:comment_author><![CDATA[bici da corsa usate roma]]></wp:comment_author>
			<wp:comment_author_email>margotrash@moose-mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://wafclan.com/index.php?mod=users&amp;action=view&amp;id=371754</wp:comment_author_url>
			<wp:comment_author_IP>178.216.54.137</wp:comment_author_IP>
			<wp:comment_date>2015-04-19 18:04:24</wp:comment_date>
			<wp:comment_date_gmt>2015-04-19 18:04:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Naturalmente è quasi tutto usato, ma sono pezzi che hanno una loro 
storia, una loro anima, e sono stati ricondizionati in modo da sembrare (quasi) 
nuovi.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36563</wp:comment_id>
			<wp:comment_author><![CDATA[Leanne]]></wp:comment_author>
			<wp:comment_author_email>daniloroesch@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://wrxnedabxxefhwag.pen.io/</wp:comment_author_url>
			<wp:comment_author_IP>23.94.190.57</wp:comment_author_IP>
			<wp:comment_date>2015-02-01 04:13:50</wp:comment_date>
			<wp:comment_date_gmt>2015-02-01 04:13:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As your wardrobe changes with the seasons, so will the items of jewelry that you choose.
Spring cleaning is such a huge task because you have actually spent 
so much time in the house all winter. As these tiles are available 
in such a variety of colors, you can use them as per the dcor of your room.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38700</wp:comment_id>
			<wp:comment_author><![CDATA[home clean]]></wp:comment_author>
			<wp:comment_author_email>aurelio.stonge@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.acecleaning.com.au</wp:comment_author_url>
			<wp:comment_author_IP>104.222.192.70</wp:comment_author_IP>
			<wp:comment_date>2015-03-24 03:02:53</wp:comment_date>
			<wp:comment_date_gmt>2015-03-24 03:02:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38759</wp:comment_id>
			<wp:comment_author><![CDATA[Roseanna]]></wp:comment_author>
			<wp:comment_author_email>linaportillo@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=3&amp;cad=rja&amp;uact=8&amp;ved=0CCwQFjAC&amp;url=http%3A%2F%2Fwww.7mmbet.org&amp;ei=zhfGVJGPGJOAgwTC6YHwAQ&amp;usg=AF</wp:comment_author_url>
			<wp:comment_author_IP>69.12.82.44</wp:comment_author_IP>
			<wp:comment_date>2015-03-27 14:16:37</wp:comment_date>
			<wp:comment_date_gmt>2015-03-27 14:16:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[But just look at how drastically catches have changed. Here are some investment rules and strategies to follow when signs of deflation appear.
He is a successful Manager and Life Coach Professional, creating 
solutions for restaurants and bars around the world, using innovative consultancy skills to quickly assess new opportunities 
in-house and externally - to capture market potential in the hospitality sector.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35408</wp:comment_id>
			<wp:comment_author><![CDATA[Patti Stanger single girls handbook]]></wp:comment_author>
			<wp:comment_author_email>sheila.cousin@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=00KE09aTlm4</wp:comment_author_url>
			<wp:comment_author_IP>104.37.56.106</wp:comment_author_IP>
			<wp:comment_date>2015-01-20 14:23:23</wp:comment_date>
			<wp:comment_date_gmt>2015-01-20 14:23:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Inside course you're going to get understand your 3 principles which have been the inspiration with this technique.

These are giving the suitable impulses to entice the suitable gentleman, Getting self-assured in addition to happy despite being sole,
future pacing by sowing the seeds of this foreseeable future 
with each other with your guy's depths of the mind 
so that it gets his / her while concepts at the same time.
http://www.youtube.com/watch?v=00KE09aTlm4 
<a HREF='http://www.youtube.com/watch?v=00KE09aTlm4' rel="nofollow">Patti Stanger single girls handbook</A>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38758</wp:comment_id>
			<wp:comment_author><![CDATA[Auralux Skin Scam]]></wp:comment_author>
			<wp:comment_author_email>karolyn_booze@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vcsz.com/index.php?qa=38189&amp;qa_1=4-simple-tips-to-get-rid-of-acne-overnight</wp:comment_author_url>
			<wp:comment_author_IP>104.207.64.191</wp:comment_author_IP>
			<wp:comment_date>2015-03-27 06:04:30</wp:comment_date>
			<wp:comment_date_gmt>2015-03-27 06:04:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Amazing things here. I am very happy to peer your 
article. Thanks a lot and I'm taking a look ahead to touch you.
Will you kindly drop me a e-mail?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74993</wp:comment_id>
			<wp:comment_author><![CDATA[dota 2 key giveaway]]></wp:comment_author>
			<wp:comment_author_email>ericstrock@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://dota2hack.org</wp:comment_author_url>
			<wp:comment_author_IP>45.72.78.252</wp:comment_author_IP>
			<wp:comment_date>2015-10-06 16:01:05</wp:comment_date>
			<wp:comment_date_gmt>2015-10-06 16:01:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there! Your website is loading slow , this took like a moment 
to reload, I actually have no idea whether it's just simply me or 
perhaps your web page but facebook performed fine for me.
Nevertheless, Let me thank you for placing awesome content.
I'm sure it really has already been incredibly beneficial 
to visitor who visit here. I have to mention that you really have done fantastic work with this and 
additionally hope to discover even more brilliant content through you.

I 've got you saved to bookmarks to check out blog 
you post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37869</wp:comment_id>
			<wp:comment_author><![CDATA[Clash of Clans Tips &amp; Tricks: Steal That Gold - GottaBeMobile]]></wp:comment_author>
			<wp:comment_author_email>christina.barff@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://humdrumstripe67407245.pen.io/</wp:comment_author_url>
			<wp:comment_author_IP>198.167.138.36</wp:comment_author_IP>
			<wp:comment_date>2015-03-03 23:16:59</wp:comment_date>
			<wp:comment_date_gmt>2015-03-03 23:16:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Let me reveal to you some ideas, tricks plus cheats 
I discovered in playing the game.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37852</wp:comment_id>
			<wp:comment_author><![CDATA[Elke]]></wp:comment_author>
			<wp:comment_author_email>latosha.robert@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://sassy-warlock-prince.tumblr.com/post/111658532401</wp:comment_author_url>
			<wp:comment_author_IP>23.94.78.239</wp:comment_author_IP>
			<wp:comment_date>2015-03-03 07:34:15</wp:comment_date>
			<wp:comment_date_gmt>2015-03-03 07:34:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This helps to bridge the gap by the loss of the tooth, making your smile beautiful again. Now she is 
getting calls from the Klan members:  and a second call where he actually gives the Klan's hotline 
number to contact:. Here are some important questions and considerations to factor into your decision:.


My web page ypsilanti dentist (<a href="http://sassy-warlock-prince.tumblr.com/post/111658532401" rel="nofollow">Elke</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37860</wp:comment_id>
			<wp:comment_author><![CDATA[obesity diet]]></wp:comment_author>
			<wp:comment_author_email>jetta.piquet@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cnn.com</wp:comment_author_url>
			<wp:comment_author_IP>69.12.90.25</wp:comment_author_IP>
			<wp:comment_date>2015-03-03 11:55:33</wp:comment_date>
			<wp:comment_date_gmt>2015-03-03 11:55:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for the good writeup. It in truth 
was a amusement account it. Glance complex to more introduced agreeable from you!

By the way, how can we be in contact?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37135</wp:comment_id>
			<wp:comment_author><![CDATA[illegal sport]]></wp:comment_author>
			<wp:comment_author_email>katrinmercado@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.cnn.com</wp:comment_author_url>
			<wp:comment_author_IP>198.52.225.170</wp:comment_author_IP>
			<wp:comment_date>2015-02-15 23:38:16</wp:comment_date>
			<wp:comment_date_gmt>2015-02-15 23:38:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An outstanding share! I have just forwarded this 
onto a co-worker who was doing a little research on this.

And he actually bought me lunch because I found it for him...

lol. So let me reword this.... Thanks for the meal!! But yeah, thanx for 
spending some time to discuss this topic here on your internet site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37684</wp:comment_id>
			<wp:comment_author><![CDATA[mobile internet service]]></wp:comment_author>
			<wp:comment_author_email>yukiko.skeen@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.charlotte-skyline.com/author/joelmaciashd6304</wp:comment_author_url>
			<wp:comment_author_IP>198.56.223.218</wp:comment_author_IP>
			<wp:comment_date>2015-02-28 22:46:59</wp:comment_date>
			<wp:comment_date_gmt>2015-02-28 22:46:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very shortly this website will be famous among all 
blogging and site-building viewers, due to it's 
good articles or reviews]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37678</wp:comment_id>
			<wp:comment_author><![CDATA[2015 Bitdefender discount]]></wp:comment_author>
			<wp:comment_author_email>ramirotuck@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://blog.catalogchoice.org/process/RedirectN?url=http%3A//bitdefendercoupon.angelfire.com/</wp:comment_author_url>
			<wp:comment_author_IP>172.245.121.28</wp:comment_author_IP>
			<wp:comment_date>2015-02-28 18:52:29</wp:comment_date>
			<wp:comment_date_gmt>2015-02-28 18:52:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you wish for to obtain a great deal from this article 
then you have to apply such strategies to your won website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32383</wp:comment_id>
			<wp:comment_author><![CDATA[Hard Quotes]]></wp:comment_author>
			<wp:comment_author_email>tonjabollinger@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hardquotes.com/motivation/the-killer-of-motivation</wp:comment_author_url>
			<wp:comment_author_IP>93.54.63.48</wp:comment_author_IP>
			<wp:comment_date>2014-11-20 01:24:52</wp:comment_date>
			<wp:comment_date_gmt>2014-11-20 01:24:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, the whole thing is going well here and ofcourse every one is sharing facts, that's genuinely fine, keep up writing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37810</wp:comment_id>
			<wp:comment_author><![CDATA[save price]]></wp:comment_author>
			<wp:comment_author_email>robinhenke@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nkprice.info</wp:comment_author_url>
			<wp:comment_author_IP>1.4.216.64</wp:comment_author_IP>
			<wp:comment_date>2015-03-02 11:45:48</wp:comment_date>
			<wp:comment_date_gmt>2015-03-02 11:45:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And dropshipping is a successful supply chain method used by many online business people on the 
internet in which you as a retailer can make a website or use e - Bay or 
amazon then add the products and all its details, and when a customer wants to purchase it, 
the wholesaler then drops their product direct to the end user by 
post called dropshipping. But in cases when accidents do happen, it is best to have something there to cover for you 
financially. They schedule the special discount 
on the products such as 50% discount on home d.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37812</wp:comment_id>
			<wp:comment_author><![CDATA[polecany serwis komputerowy lubin]]></wp:comment_author>
			<wp:comment_author_email>rubin.beauchamp@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://odzyskiwaniezdjec.lubin.org.pl/</wp:comment_author_url>
			<wp:comment_author_IP>155.94.161.253</wp:comment_author_IP>
			<wp:comment_date>2015-03-02 12:18:03</wp:comment_date>
			<wp:comment_date_gmt>2015-03-02 12:18:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm very happy to uncover this web site. I wanted to thank you for your time for this wonderful read!!
I definitely liked every little bit of it and i also have you book marked to look at new 
information on your website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33962</wp:comment_id>
			<wp:comment_author><![CDATA[naturstein reinigen fett]]></wp:comment_author>
			<wp:comment_author_email>bartwaldo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.instapaper.com/read/536156194</wp:comment_author_url>
			<wp:comment_author_IP>37.122.63.31</wp:comment_author_IP>
			<wp:comment_date>2014-12-30 05:02:50</wp:comment_date>
			<wp:comment_date_gmt>2014-12-30 05:02:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi every one, here every one is sharing these know-how, so it's pleasant to read 
this weblog, and I used to visit this web site all the time.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37638</wp:comment_id>
			<wp:comment_author><![CDATA[gta5forpsp.com]]></wp:comment_author>
			<wp:comment_author_email>felicamagill@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://gta5forpsp.com</wp:comment_author_url>
			<wp:comment_author_IP>109.169.5.247</wp:comment_author_IP>
			<wp:comment_date>2015-02-28 05:34:15</wp:comment_date>
			<wp:comment_date_gmt>2015-02-28 05:34:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there! Your webpage is loading slowly , that took like a minute or two to finally load, I do not know 
whether it is entirely me or maybe your webpage on the other hand facebook worked fine for me.
Nevertheless, Thanks for posting such type of superb article.
I'm guessing it has become beneficial to plenty of 
people who arrived on this page. This is definitely wonderful everything 
that you actually have implemented  and would like to see a lot more 
interesting articles from your site. Right after looking at your articles, I have book-marked your site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36819</wp:comment_id>
			<wp:comment_author><![CDATA[with economic tarot visa]]></wp:comment_author>
			<wp:comment_author_email>dominiquehartley@peacemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.videncia-gratis.eu/tarotistas-economicos.html</wp:comment_author_url>
			<wp:comment_author_IP>188.240.135.200</wp:comment_author_IP>
			<wp:comment_date>2015-02-07 00:45:42</wp:comment_date>
			<wp:comment_date_gmt>2015-02-07 00:45:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If some one desires expert view regsrding running a blog afterward i sugtgest him/her to visit this weblog, Keep up the fastidious work.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35230</wp:comment_id>
			<wp:comment_author><![CDATA[garden wedding]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://chestnuthill333.wordpress.com/how-pick-your-wedding-location</wp:comment_author_url>
			<wp:comment_author_IP>64.79.110.216</wp:comment_author_IP>
			<wp:comment_date>2015-01-18 14:32:57</wp:comment_date>
			<wp:comment_date_gmt>2015-01-18 14:32:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>garden wedding...</strong>

Adventures in MVVM - My ViewModel Base - Silverlight Support! « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37475</wp:comment_id>
			<wp:comment_author><![CDATA[Sorcerer Software]]></wp:comment_author>
			<wp:comment_author_email>sorcerersoftware@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://sorcerersoftware.appspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>130.164.62.89</wp:comment_author_IP>
			<wp:comment_date>2015-02-24 15:47:02</wp:comment_date>
			<wp:comment_date_gmt>2015-02-24 15:47:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'd been having the same problem and wondering how to solve it. While the syntax is not ideal, I'm glad to see their is a solution. Thanks!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34140</wp:comment_id>
			<wp:comment_author><![CDATA[Natisha]]></wp:comment_author>
			<wp:comment_author_email>dominikrandall@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.instapaper.com/read/538746746</wp:comment_author_url>
			<wp:comment_author_IP>145.255.176.74</wp:comment_author_IP>
			<wp:comment_date>2015-01-02 06:38:56</wp:comment_date>
			<wp:comment_date_gmt>2015-01-02 06:38:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there everyone, it's my first visit at this web page, and paragraph 
is in fact fruitful in favor of me, keep up posting these types of articles.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39000</wp:comment_id>
			<wp:comment_author><![CDATA[Vivien]]></wp:comment_author>
			<wp:comment_author_email>brookgregson@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=BDFU4RrOUCU</wp:comment_author_url>
			<wp:comment_author_IP>198.23.175.68</wp:comment_author_IP>
			<wp:comment_date>2015-04-08 09:16:17</wp:comment_date>
			<wp:comment_date_gmt>2015-04-08 09:16:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you desire to get much from this paragraph then you have to apply these methods to your won weblog.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37304</wp:comment_id>
			<wp:comment_author><![CDATA[digital signature guidelines]]></wp:comment_author>
			<wp:comment_author_email>gracienewbery@rushpost.com</wp:comment_author_email>
			<wp:comment_author_url>https://Www.Sukeindia.com/groups/the-lost-secret-of-electronic-signature-software/</wp:comment_author_url>
			<wp:comment_author_IP>188.240.143.165</wp:comment_author_IP>
			<wp:comment_date>2015-02-19 15:04:24</wp:comment_date>
			<wp:comment_date_gmt>2015-02-19 15:04:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The more visible you are on the web, the more 
people you attract to your business. After the timeout, the encrypted information cannot be accessed by anyone, including the owner.
The Lakers not only lost, and lost badly, they were 
a team in dissaray.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79697</wp:comment_id>
			<wp:comment_author><![CDATA[grace place church berthoud co]]></wp:comment_author>
			<wp:comment_author_email>jeffryboulger@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=urcnVNSe8lA</wp:comment_author_url>
			<wp:comment_author_IP>107.169.161.172</wp:comment_author_IP>
			<wp:comment_date>2015-11-30 09:12:17</wp:comment_date>
			<wp:comment_date_gmt>2015-11-30 09:12:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[He&#8572;lo t&#614;ere &#1216; &#097;m &#1109;&#11423; delighted &#921; &#102;ound 
&#655;&#1995;ur web site, &#1216; &#1075;eally &#102;ound &#655;&#1995;u &#098;&#121; mistake,
&#1309;hile &#1216; &#1377;&#593;&#115; browsing &#11423;n Askjeeve &#102;&#1086;r &#115;omething &#101;lse, &#078;onetheless &#1231; aam &#1210;ere no&#1121; &#097;nd &#1121;ould &#106;ust &#108;ike &#116;&#1086; &#1109;ay cheers 
&#102;&#959;r &#1072; incredible post &#097;nd &#097; &#1072;ll &#114;ound 
enjoyable blog (&#1216; &#593;lso love &#116;&#104;&#6513; theme/design), &#1216; &#100;&#1413;n’t &#1211;ave &#116;ime &#116;&#1086; &#108;&#1413;&#959;k &#111;&#957;&#6513;r &#105;t &#097;ll &#1072;t &#116;&#614;&#1077; &#109;oment bbut 
&#073; &#1210;ave bookmarked &#105;t &#097;nd &#1072;lso &#593;dded &#1091;&#1086;ur RSS feeds, &#1109;&#11423; &#1377;hen &#1231; &#1211;ave 
tim &#921; &#119;ill bee &#388;ack &#116;&#1413; &#1075;ead &#109;uch &#109;ore, &#1056;lease &#599;&#1086; &#1179;eep &#1405;&#961; &#116;&#614;&#101; &#103;reat 
&#1309;ork.

&#077;&#1091; website: <a href="https://www.youtube.com/watch?v=urcnVNSe8lA" rel="nofollow">grace place church berthoud co</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49008</wp:comment_id>
			<wp:comment_author><![CDATA[createatshirt.biz]]></wp:comment_author>
			<wp:comment_author_email>myramims@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://createatshirt.biz</wp:comment_author_url>
			<wp:comment_author_IP>24.232.53.148</wp:comment_author_IP>
			<wp:comment_date>2015-06-02 08:14:32</wp:comment_date>
			<wp:comment_date_gmt>2015-06-02 08:14:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[May I simply say what a relief to uncover a person that genuinely understands what they're discussing on the internet.

You actually know how to bring a problem to light and make it 
important. More and more people really need to check this out and understand this side of the story.
I was surprised that you aren't more popular given that you most certainly 
possess the gift.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70382</wp:comment_id>
			<wp:comment_author><![CDATA[como ganhar força nos braços yahoo]]></wp:comment_author>
			<wp:comment_author_email>howard_chinnery@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://articlesetup.1yoga.net/profile.php?a=6983</wp:comment_author_url>
			<wp:comment_author_IP>200.192.79.7</wp:comment_author_IP>
			<wp:comment_date>2015-09-04 11:36:08</wp:comment_date>
			<wp:comment_date_gmt>2015-09-04 11:36:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Quando comprar uma caixa, preço fica por cerca de forty two dólares.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54250</wp:comment_id>
			<wp:comment_author><![CDATA[football]]></wp:comment_author>
			<wp:comment_author_email>michel.leverette@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.viengkhum.ac.th/index.php?name=webboard&amp;file=read&amp;id=6</wp:comment_author_url>
			<wp:comment_author_IP>155.94.170.204</wp:comment_author_IP>
			<wp:comment_date>2015-06-19 10:34:30</wp:comment_date>
			<wp:comment_date_gmt>2015-06-19 10:34:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read so many articles or reviews regarding the blogger lovers but this piece of writing is actually a pleasant paragraph, keep it up.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59465</wp:comment_id>
			<wp:comment_author><![CDATA[Steps to Improving your credit]]></wp:comment_author>
			<wp:comment_author_email>lazaro_pulsford@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.creditscoresandcredit.com</wp:comment_author_url>
			<wp:comment_author_IP>104.168.60.60</wp:comment_author_IP>
			<wp:comment_date>2015-07-11 05:43:02</wp:comment_date>
			<wp:comment_date_gmt>2015-07-11 05:43:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do trust all of the ideas you've presented ffor your 
post. They are very convincing and will certainly work. Nonetheless, the posts are 
too short for beginners. May you please lengthen them a little 
freom next time? Thank you for the post.

Look into my pge ... <a href="http://www.creditscoresandcredit.com" rel="nofollow">Steps to Improving your credit</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66727</wp:comment_id>
			<wp:comment_author><![CDATA[Randall]]></wp:comment_author>
			<wp:comment_author_email>wayloncorrie@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://siosotalsa1978.soup.io</wp:comment_author_url>
			<wp:comment_author_IP>104.144.27.37</wp:comment_author_IP>
			<wp:comment_date>2015-08-19 04:03:43</wp:comment_date>
			<wp:comment_date_gmt>2015-08-19 04:03:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post. I learn something new and challenging on websites I 
stumbleupon every day. It will always be 
interesting to read articles from other authors and use something from other websites.


My weblog <a href="http://siosotalsa1978.soup.io" rel="nofollow">Randall</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66728</wp:comment_id>
			<wp:comment_author><![CDATA[wytuzalys.wordpress.com]]></wp:comment_author>
			<wp:comment_author_email>majorwhitcomb@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://wytuzalys.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>45.72.3.139</wp:comment_author_IP>
			<wp:comment_date>2015-08-19 04:04:36</wp:comment_date>
			<wp:comment_date_gmt>2015-08-19 04:04:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a very good tip especially to those new to the blogosphere.
Brief but very precise information… Appreciate your 
sharing this one. A must read article!

My blog <a href="http://wytuzalys.wordpress.com" rel="nofollow">wytuzalys.wordpress.com</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63517</wp:comment_id>
			<wp:comment_author><![CDATA[http://candrea72.page.tl/]]></wp:comment_author>
			<wp:comment_author_email>anne_erickson@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://candrea72.page.tl</wp:comment_author_url>
			<wp:comment_author_IP>165.231.8.246</wp:comment_author_IP>
			<wp:comment_date>2015-08-04 16:00:46</wp:comment_date>
			<wp:comment_date_gmt>2015-08-04 16:00:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your marvelous posting! I genuinely 
enjoyed reading it, you may be a great author.
I will remember to bookmark your blog and will come back later 
in life. I want to encourage  continue your great writing, have a nice morning!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80209</wp:comment_id>
			<wp:comment_author><![CDATA[Altezza туры]]></wp:comment_author>
			<wp:comment_author_email>thaddeusprince@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>https://altezza.travel/articles/safari_in_tanzania</wp:comment_author_url>
			<wp:comment_author_IP>5.101.222.65</wp:comment_author_IP>
			<wp:comment_date>2016-01-23 12:30:17</wp:comment_date>
			<wp:comment_date_gmt>2016-01-23 12:30:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That is rea&#8572;ly attent&#1110;on-grabbing, Yo&#6489;'r&#1077; &#593; &#1141;&#101;&#1075;&#121; &#1109;&#1181;&#1110;&#8572;&#8572;&#1077;&#1281; &#1068;&#108;&#1086;&#485;&#485;&#1077;&#1075;.
&#073; &#614;&#1072;&nu;&#101; &#1112;&#111;&#105;ne&#1281; &#1091;&#959;&#117;&#1075; &#1075;&#1109;&#1109; &#102;&#1077;&#1077;&#1280; &#097;nd &#1109;&#105;&#116; &#1405;&#1088; &#102;&#11423;&#1075; &#1109;&#101;&#1072;&#1075;&#099;&#1211;&#1110;ng 
&#102;&#959;&#1075; &#109;&#1086;&#114;&#1077; &#1995;&#102; 
&#1091;&#11423;&#1405;&#114; &#7457;&#11423;nd&#101;&#1075;&#102;&#1405;&#8572; &rho;&#111;&#1109;&#116;.
&#5034;&#108;&#1109;&#111;, &#921; &#1210;&#593;&nu;&#101; &#115;&#1211;&#097;&#1075;&#6513;&#8574; &#1199;&#1086;&#1405;&#1075; &#1309;&#1077;&#388; &#115;&#105;&#116;&#6513; &#1110;n &#109;&#1199; &#1109;&#1995;&#099;&#1110;&#097;&#8572; ne&#116;&#1309;&#111;&#1075;&#1082;&#115;

&#5034;&#8572;&#1109;&#11423; &#957;&#105;&#1109;&#1110;&#116; &#109;&#1091; &#1309;&#1077;&#098;&#11427;&#593;&#103;&#1077;:
<a href="https://altezza.travel/articles/safari_in_tanzania" rel="nofollow">Altezza туры</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67583</wp:comment_id>
			<wp:comment_author><![CDATA[Delilah]]></wp:comment_author>
			<wp:comment_author_email>elliotfatnowna@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hotals.net/</wp:comment_author_url>
			<wp:comment_author_IP>103.224.164.150</wp:comment_author_IP>
			<wp:comment_date>2015-08-22 18:12:05</wp:comment_date>
			<wp:comment_date_gmt>2015-08-22 18:12:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's remarkable in favor of me to have a website, which is beneficial in favor 
of my knowledge. thanks admin]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80235</wp:comment_id>
			<wp:comment_author><![CDATA[Tiềm năng khi đầu tư tại Vinhomes Gardenia]]></wp:comment_author>
			<wp:comment_author_email>gabriele.bryce@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://tanbatdongsan.com/tiem-nang-khi-dau-tu-tai-vinhomes-gardenia/</wp:comment_author_url>
			<wp:comment_author_IP>201.175.115.222</wp:comment_author_IP>
			<wp:comment_date>2016-01-27 02:42:11</wp:comment_date>
			<wp:comment_date_gmt>2016-01-27 02:42:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, always i used to check website posts here 
early in the morning, for the reason that i love to gain knowledge of more and more.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75941</wp:comment_id>
			<wp:comment_author><![CDATA[ve may bay di ha noi]]></wp:comment_author>
			<wp:comment_author_email>gladyswesley@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.flynow.vn/ve-may-bay-di-hue-HUI</wp:comment_author_url>
			<wp:comment_author_IP>190.77.67.10</wp:comment_author_IP>
			<wp:comment_date>2015-10-14 03:02:09</wp:comment_date>
			<wp:comment_date_gmt>2015-10-14 03:02:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The Goa Car Rental services have more than 20 years of experience in serving in taxi industry so with this hand full of experience 
they are remarkable in performance as well as quality.

Coorg or Kodagu, originally called “Kodaimalenadu” which means 
“dense forest on steep hill” located on the south western parts of Karnataka 
at a distance of 260 km from Bangalore. There were add-on's 
and options that totaled $5,425.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80519</wp:comment_id>
			<wp:comment_author><![CDATA[Toe and Forefoot Fractures]]></wp:comment_author>
			<wp:comment_author_email>thaliaalderson@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://janfugurty.exteen.com</wp:comment_author_url>
			<wp:comment_author_IP>114.44.213.144</wp:comment_author_IP>
			<wp:comment_date>2016-03-10 03:28:07</wp:comment_date>
			<wp:comment_date_gmt>2016-03-10 03:28:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[G&omicron;o&#1280; &#599;ay ve&#1075;&#121; &#099;&omicron;&#1086;&#8572; &#1109;&#105;&#116;&#101;!!
&Mu;&#593;n .. &#5623;&#1077;&#1072;&#6489;&#116;&#1110;&#102;&#1405;&#108; ..

&#5076;&#111;nd&#1077;&#1075;&#102;&#6489;&#8572; .. &#1216; &#1377;&#1110;&#108;&#108; 
&#098;&#959;&#111;&kappa;&#109;&#097;&#1075;&#1181; &#1199;&#1086;&#1405;&#1075; 
&#115;&#1110;&#116;&#1077; <a href="http://janfugurty.exteen.com" rel="nofollow">Toe and Forefoot Fractures</a> &#116;&#097;&#1082;&#6513; &#116;&#104;&#101; &#102;&#1077;&#101;&#599;&#115; &#1072;&#100;&#1281;&#105;&#116;&#105;&#111;na&#8572;&#108;&#121;?

&Iota;'&#109; &#1109;&#097;&#116;&#1110;&#1109;&#102;&#1110;&#1077;&#1280; &#116;&#111; &#1109;&#1077;&#097;&#114;&#099;&#1210; 
&#959;&#1405;&#116; &#1072; &#108;&#111;&#116; &#1995;&#102; &#1210;&#1077;&#108;&#1088;&#102;&#6489;&#108; &#1110;nf&#959; &#1210;&#101;&#1075;&#1077; &#1309;&#1110;&#116;&#1211;&#1110;n &#116;&#1211;&#101; &#11427;&#1405;&#389;&#8572;&#1110;&#115;&#104;,
&#7457;&#1077; ne&#6513;&#1281; &#8574;&#101;&#7456;&#101;&#108;&#1995;&#11427; &#1077;&#1203;&#116;&#1075;&#593; 
&#116;&#1077;&#1089;&#614;ni&#1379;&#1405;&#6513;&#1109; &#1110;n &#116;&#614;&#105;&#1109; &#114;&#101;&#103;&#1072;&#114;&#1281;, &#116;&#1210;&#1072;nk 
&#121;&#111;&#1405; &#102;&#1086;&#1075; &#1109;&#1211;&#097;&#1075;&#1110;ng.
. . . . .]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Disabling Navigation Flicks in WPF</title>
		<link>http://houseofbilz.com/archives/2010/06/02/disabling-navigation-flicks-in-wpf/</link>
		<pubDate>Wed, 02 Jun 2010 12:32:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/06/02/disabling-navigation-flicks-in-wpf/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am currently working on a multi-touch application using WPF.&nbsp; One thing that has been irritating me with this development is an automatic navigation forward/back command that is bound to forward and backwards flicks.&nbsp; Many of my touch-based interactions were being thwarted by gestures picked up by WPF as navigation.&nbsp; I just wanted to disable this behavior. </p> <p>My programmatic back/forward calls are not affected by this change, which is nice.&nbsp; Here is how I did it:&nbsp; In my main window, I added the following command bindings:</p> <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:27adb24f-bf8c-4cad-a097-4e4bc315e86e" class="wlWriterEditableSmartContent"><pre style="background-color:White;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">NavigationWindow.CommandBindings</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">CommandBinding </span><span style="color: #FF0000;">Command</span><span style="color: #0000FF;">="NavigationCommands.BrowseBack"</span><span style="color: #FF0000;"> Executed</span><span style="color: #0000FF;">="DoNothing"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">CommandBinding </span><span style="color: #FF0000;">Command</span><span style="color: #0000FF;">="NavigationCommands.BrowseForward"</span><span style="color: #FF0000;"> Executed</span><span style="color: #0000FF;">="DoNothing"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">NavigationWindow.CommandBindings</span><span style="color: #0000FF;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<style type="text/css">csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>Then, the <strong>DoNothing </strong>method in the code-behind does nothing:</p>
<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:633c89eb-9164-493e-8dc2-ae730bc14a53" class="wlWriterEditableSmartContent"><pre style="background-color:#FFFFFF;overflow: auto;"><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> DoNothing(</span><span style="color: #0000FF;">object</span><span style="color: #000000;"> sender, ExecutedRoutedEventArgs e) { }</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>
<style type="text/css">csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>
<pre class="csharpcode"></pre>
<style type="text/css">csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
</style>

<p>There may be a better way to do this, but I haven’t found one.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2010-06-02 12:32:00</wp:post_date>
		<wp:post_date_gmt>2010-06-02 12:32:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>disabling-navigation-flicks-in-wpf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="navigation"><![CDATA[Navigation]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf"><![CDATA[WPF]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15834</wp:comment_id>
			<wp:comment_author><![CDATA[chris]]></wp:comment_author>
			<wp:comment_author_email>blogs@papzt.com</wp:comment_author_email>
			<wp:comment_author_url>http://tracelighting.com</wp:comment_author_url>
			<wp:comment_author_IP>83.218.130.34</wp:comment_author_IP>
			<wp:comment_date>2012-06-12 11:21:24</wp:comment_date>
			<wp:comment_date_gmt>2012-06-12 11:21:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Exactly the solution I was seeking thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in MVVM &#8211; ViewModel Location and Creation</title>
		<link>http://houseofbilz.com/archives/2010/06/04/adventures-in-mvvm-viewmodel-location-and-creation/</link>
		<pubDate>Fri, 04 Jun 2010 12:34:00 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.net/archive/2010/06/04/adventures-in-mvvm-viewmodel-location-and-creation/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-ViewModel-Location-and-Creation" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.com%2Farchive%2F2010%2F06%2F04%2Fadventures-in-mvvm-ndash-viewmodel-location-and-creation.aspx" /></a></p>  <p>In this post, I am going to explore how I prefer to attach ViewModels to my Views.&#160; I have published the code to my <a href="http://viewmodelsupport.codeplex.com/">ViewModelSupport project on CodePlex</a> in case you'd like to see how it works along with some examples. </p>  <h4></h4>  <h4>Some History</h4>  <p>My approach to View-First ViewModel creation has evolved over time.&#160; I have constructed ViewModels in code-behind.&#160; I have instantiated ViewModels in the resources sectoin of the view. I have used Prism to resolve ViewModels via Dependency Injection. I have created attached properties that use Dependency Injection containers underneath.&#160; Of all these approaches, I continue to find issues either in composability, blendability or maintainability. </p>  <p><a href="http://www.galasoft.ch/index.html">Laurent Bugnion</a> came up with a pretty good approach in <a href="http://mvvmlight.codeplex.com/">MVVM Light Toolkit</a> with his ViewModelLocator, but as <a href="http://johnpapa.net/">John Papa</a> points out, it has maintenance issues.&#160; John paired up with <a href="http://codebetter.com/blogs/glenn.block/">Glen Block</a> to make the ViewModelLocator more generic by <a href="http://johnpapa.net/silverlight/simple-viewmodel-locator-for-mvvm-the-patients-have-left-the-asylum/">using MEF to compose ViewModels</a>.&#160; It is a great approach, but I don’t like baking in specific resolution technologies into the <a href="http://viewmodelsupport.codeplex.com/">ViewModelSupport</a> project.</p>  <p>I bring these people up, not to name drop, but to give them credit for the place I finally landed in my journey to resolve ViewModels.&#160; I have come up with my own version of the ViewModelLocator that is both generic and container agnostic.&#160; The solution is blendable, configurable and simple to use.&#160; Use any resolution mechanism you want: MEF, Unity, Ninject, Activator.Create, Lookup Tables, new, whatever.</p>  <h4>How to use the locator</h4>  <p><strong>1. Create a class to contain your resolution configuration: </strong></p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:53877bce-4af1-4fe5-bef3-afdd8e35dcc1" class="wlWriterSmartContent">   <pre style="background-color: #ffffff; overflow: auto"><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">class</span><span style="color: #000000"> YourViewModelResolver: IViewModelResolver
{
    </span><span style="color: #0000ff">private</span><span style="color: #000000"> YourFavoriteContainer container </span><span style="color: #000000">=</span><span style="color: #000000"> </span><span style="color: #0000ff">new</span><span style="color: #000000"> YourFavoriteContainer(); 

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> YourViewModelResolver()
    {
        </span><span style="color: #008000">//</span><span style="color: #008000"> Configure your container</span><span style="color: #008000">
</span><span style="color: #000000">    } 

    </span><span style="color: #0000ff">public</span><span style="color: #000000"> </span><span style="color: #0000ff">object</span><span style="color: #000000"> Resolve(</span><span style="color: #0000ff">string</span><span style="color: #000000"> viewModelName)
    {
        </span><span style="color: #0000ff">return</span><span style="color: #000000"> container.Resolve(viewModelName);        
    }
} </span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>
<style type="text/css">
.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }</style>

<p>Examples of doing this are on CodePlex for <a href="http://viewmodelsupport.codeplex.com/SourceControl/changeset/view/47335#892520">MEF</a>, <a href="http://viewmodelsupport.codeplex.com/SourceControl/changeset/view/47335#892521">Unity</a> and <a href="http://viewmodelsupport.codeplex.com/SourceControl/changeset/view/47335#892522">Activator.CreateInstance</a>.</p>

<p><strong>2. Create your ViewModelLocator with your custom resolver in App.xaml: </strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:6f6f210b-a908-4946-aa62-7f1b694d7376" class="wlWriterSmartContent">
  <pre style="background-color: #ffffff; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">VMS:ViewModelLocator </span><span style="color: #ff0000">x:Key</span><span style="color: #0000ff">=&quot;ViewModelLocator&quot;</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
    </span><span style="color: #0000ff">&lt;</span><span style="color: #800000">VMS:ViewModelLocator.Resolver</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
        </span><span style="color: #0000ff">&lt;</span><span style="color: #800000">local:YourViewModelResolver </span><span style="color: #0000ff">/&gt;</span><span style="color: #000000">
    </span><span style="color: #0000ff">&lt;/</span><span style="color: #800000">VMS:ViewModelLocator.Resolver</span><span style="color: #0000ff">&gt;</span><span style="color: #000000">
</span><span style="color: #0000ff">&lt;/</span><span style="color: #800000">VMS:ViewModelLocator</span><span style="color: #0000ff">&gt;</span><span style="color: #000000"> </span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>
<style type="text/css">
.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }</style>

<p><strong>3. Hook up your data context whenever you want a ViewModel (WPF):</strong></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:71e2aa4b-e6cd-4edd-ae0a-adb84db45363" class="wlWriterSmartContent">
  <pre style="background-color: #ffffff; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">Border </span><span style="color: #ff0000">DataContext</span><span style="color: #0000ff">=&quot;</span><span style="color: #808000">{Binding YourViewModelName, Source={StaticResource ViewModelLocator}}</span><span style="color: #0000ff">&quot;</span><span style="color: #0000ff">&gt;</span><span style="color: #000000"> </span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>
<style type="text/css">

.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }</style>

<p>This example uses dynamic properties on the ViewModelLocator and passes the name to your resolver to figure out how to compose it.</p>

<p><strong>4. What about Silverlight? </strong></p>

<p>Good question.&#160; You can't bind to dynamic properties in Silverlight 4 (crossing my fingers for Silverlight 5), but you CAN use string indexing:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:f77d703c-fc69-4ff2-9ceb-40e6930b3d99" class="wlWriterSmartContent">
  <pre style="background-color: #ffffff; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">Border </span><span style="color: #ff0000">DataContext</span><span style="color: #0000ff">=&quot;</span><span style="color: #808000">{Binding [YourViewModelName], Source={StaticResource ViewModelLocator}}</span><span style="color: #0000ff">&quot;</span><span style="color: #0000ff">&gt;</span><span style="color: #000000"> </span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>
<style type="text/css">

.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }</style>

<p>But, as John Papa points out in his article, there is a silly bug in Silverlight 4 (as of this writing) that will call into the indexer 6 times when it binds.&#160; While this is little more than a nuisance when getting most properties, it can be much more of an issue when you are resolving ViewModels six times.&#160; If this gets in your way, the solution (as <a href="http://johnpapa.net/silverlight/simple-viewmodel-locator-for-mvvm-the-patients-have-left-the-asylum/">pointed out</a> by John), is to use an IndexConverter (instantiated in App.xaml and also included in the project):</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:4e79efae-73d0-48b7-a376-8996fe872c08" class="wlWriterSmartContent">
  <pre style="background-color: #ffffff; overflow: auto"><span style="color: #0000ff">&lt;</span><span style="color: #800000">Border </span><span style="color: #ff0000">DataContext</span><span style="color: #0000ff">=&quot;</span><span style="color: #808000">{Binding Source={StaticResource ViewModelLocator}, 
    Converter={StaticResource IndexConverter}, ConverterParameter=YourViewModelName}</span><span style="color: #0000ff">&quot;</span><span style="color: #0000ff">&gt;</span></pre>

  <p><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></p>
</div>
<style type="text/css">

.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }</style>

<p>It is a bit uglier than the WPF version (this method will also work in WPF if you prefer), but it is still not all that bad. </p>

<h4>Conclusion</h4>

<p>This approach works really well (I suppose I am a bit biased).&#160; It allows for composability from any mechanisim you choose.&#160; It is blendable (consider serving up different objects in Design Mode if you wish... or different constructors… whatever makes sense to you).&#160; It works in Cider.&#160; It is configurable.&#160; It is flexible.&#160; It is the best way I have found to manage View-First ViewModel hookups.&#160; Thanks to the guys mentioned in this article for getting me to something I love using.&#160; Enjoy.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2010-06-04 12:34:00</wp:post_date>
		<wp:post_date_gmt>2010-06-04 12:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-mvvm-viewmodel-location-and-creation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="viewmodel-support"><![CDATA[ViewModel Support]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1379</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>petersonah@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.119.113.83</wp:comment_author_IP>
			<wp:comment_date>2010-10-07 15:56:22</wp:comment_date>
			<wp:comment_date_gmt>2010-10-07 15:56:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, 

I'm trying to implement your solution in SilverLight 4, but I'm getting an error in my app.xaml:

Error	31	The tag 'ViewModelLocator' does not exist in XML namespace 'clr-namespace:ViewModelSupport_SL;assembly=ViewModelSupport_SL'.

I have a reference to the ViewModelSupport_SL assembly in my SilverLight project and I can reference the ViewModelLocator in the codebehind.  

Here is my app.xaml:



    
        
            
                
            
        
    


What is weird is if I don't code up the app.xaml and use this codebehind, it works at run-time but not at design-time:

private void Application_Startup(object sender, StartupEventArgs e)
{
	ViewModelLocator vml = new ViewModelLocator();
	vml.Resolver = new MyViewModelResolver();
	this.Resources.Add("ViewModelLocator", vml);
	this.Resources.Add("IndexConverter", new IndexConverter());
}

I love everything about your solution, except I cannot get the Blendability working.  I appreciate any help you can provide.

Andrew]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>217</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.14.36.209</wp:comment_author_IP>
			<wp:comment_date>2010-06-14 12:15:12</wp:comment_date>
			<wp:comment_date_gmt>2010-06-14 12:15:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Stuart: 

If you are using the [string] indexer syntax in Silverlight, there is a bug that causes the binding to string indexing to happen six times.  The fix is to use the IndexConverter outlined in this article.

This should not happen in WPF at all... and you don't need to use the string indexer syntax either... it uses Dynamic to resolve it.

Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>195</wp:comment_id>
			<wp:comment_author><![CDATA[Stuart]]></wp:comment_author>
			<wp:comment_author_email>s.barrett@wintoncapital.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.244.180.36</wp:comment_author_IP>
			<wp:comment_date>2010-06-11 16:58:49</wp:comment_date>
			<wp:comment_date_gmt>2010-06-11 16:58:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi

I've just tried to apply your code to both my existing project and (to check) a brand new SL project and the problem I'm finding is that in each case the viewmodel is being called half a dozen times. So of course to test further I set a breakpoint in your code - the constructor in DependentPropertiesViewModel in ViewModelExamples_SL - and I notice it happens there too! Have you any idea why? Surely this is a mistake?

Otherwise very interesting.

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>267</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in MVVM &ndash; Model-View-ViewModel &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 02:55:12</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 02:55:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] ViewModel Location and Creation [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28743</wp:comment_id>
			<wp:comment_author><![CDATA[cold brew coffee filter bag]]></wp:comment_author>
			<wp:comment_author_email>maudebuttenshaw@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.amazon.com/Best-Nut-Milk-Bag-Reinforced/dp/B00KI2RQHU/</wp:comment_author_url>
			<wp:comment_author_IP>23.94.48.148</wp:comment_author_IP>
			<wp:comment_date>2014-08-28 14:09:23</wp:comment_date>
			<wp:comment_date_gmt>2014-08-28 14:09:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you ever thought about adding a little bit more 
than just your articles? I mean, what you say 
is fundamental and everything. However think about if 
you added some great graphics or videos to give your posts more, "pop"!
Your content is excellent but with pics and videos, this site could undeniably be one of the best in its field.

Fantastic blog!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25774</wp:comment_id>
			<wp:comment_author><![CDATA[www.youtube.com]]></wp:comment_author>
			<wp:comment_author_email>ElmShellhammer265@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=Rag6-8Mmbe0</wp:comment_author_url>
			<wp:comment_author_IP>178.217.185.222</wp:comment_author_IP>
			<wp:comment_date>2014-05-06 16:45:08</wp:comment_date>
			<wp:comment_date_gmt>2014-05-06 16:45:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there, only come to be responsive to the blog page thru Yahoo, and discovered that it is really educational. Let me look out for belgium's capital. I'll value for those who progress that from now on. Appear as healthy might be gained out of your crafting. Cheers!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29957</wp:comment_id>
			<wp:comment_author><![CDATA[Oasis Energy Company]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Www.Servizisocialigardabresciano.it/servizi/Menu/menu_redirect.aspx?url=http://vimeo.com/oasisenergy</wp:comment_author_url>
			<wp:comment_author_IP>192.3.176.254</wp:comment_author_IP>
			<wp:comment_date>2014-10-07 09:26:37</wp:comment_date>
			<wp:comment_date_gmt>2014-10-07 09:26:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Oasis Energy Company...</strong>

Adventures in MVVM - ViewModel Location and Creation « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24010</wp:comment_id>
			<wp:comment_author><![CDATA[Higty]]></wp:comment_author>
			<wp:comment_author_email>higuchihiguchihiguchi@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.197.223.240</wp:comment_author_IP>
			<wp:comment_date>2014-03-27 08:09:19</wp:comment_date>
			<wp:comment_date_gmt>2014-03-27 08:09:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi.
Great article and implementation.
I will try it.

How do you feel about this new language feature?

http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/5686281-property-tempate-feature-more-reusability-readab]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27370</wp:comment_id>
			<wp:comment_author><![CDATA[preturi servicii de curatenie timisoara]]></wp:comment_author>
			<wp:comment_author_email>lin_oberg@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://youtu.be/cg-ytMfo4sU</wp:comment_author_url>
			<wp:comment_author_IP>66.192.33.78</wp:comment_author_IP>
			<wp:comment_date>2014-07-02 13:04:52</wp:comment_date>
			<wp:comment_date_gmt>2014-07-02 13:04:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great info. Lucky me I discovered your website by chance (stumbleupon).
I've saved it for later!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16905</wp:comment_id>
			<wp:comment_author><![CDATA[aqua17]]></wp:comment_author>
			<wp:comment_author_email>shruti_babbar@syntelinc.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>205.145.64.64</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 07:48:09</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 07:48:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[can u please give me syntax of ViewModelLocator]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80328</wp:comment_id>
			<wp:comment_author><![CDATA[Test Bank Management]]></wp:comment_author>
			<wp:comment_author_email>armandsifford@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://article.raisevoice.in/172/locate-and-download-test-bank-solution-manual/</wp:comment_author_url>
			<wp:comment_author_IP>191.96.101.9</wp:comment_author_IP>
			<wp:comment_date>2016-02-07 07:38:45</wp:comment_date>
			<wp:comment_date_gmt>2016-02-07 07:38:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Definitely imagine that which you stated. Your favourite justification seemed to be at the net the easiest factor to keep in mind of.
I say to you, I certainly get irked even as other people think about issues that they plainly do not recognize about.

You controlled to hit the nail upon the top and also outlined 
out the entire thing without having side effect , other folks can take a signal.
Will likely be back to get more. Thank you]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80205</wp:comment_id>
			<wp:comment_author><![CDATA[p4fg4tm332]]></wp:comment_author>
			<wp:comment_author_email>b4dsah28@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>49.79.177.251</wp:comment_author_IP>
			<wp:comment_date>2016-01-22 14:17:58</wp:comment_date>
			<wp:comment_date_gmt>2016-01-22 14:17:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.ooobag.com/wallet/louisvuitton/monogram/e00e8c5ca0f839c9.html
 ミュウミュウコピー、トリーバーチコピー、バレンシアガコピー、ディオールコピー、ブルガリコピー、ブラダコピー、 ドルチェ＆ガッバーナコピー、オメガコピー、フランク ミュラーコピー、gagaコピー。ルイヴィトン 時計 コピールイヴィトン 靴 コピールイヴィトン アクセサリー コピールイヴィトン 小物入れ コピールイヴィトン コインケース当店の全ての商品は、全部一番安い値段で販売いたします！ご来店を期待しております!スーパーコピーブランド弊社は安心と信頼のスーパーコピーブランド (N級品)専門店です!全国送料無料!日本一流品質のスーパーコピー時計、ブランド財布コピー、ブランドバッグコピー新作最新入荷!ロレックススーパーコピー }}}}}}]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80582</wp:comment_id>
			<wp:comment_author><![CDATA[Sarasota Kitchen Remodeling Contractors]]></wp:comment_author>
			<wp:comment_author_email>oliver.bayldon@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=jDdu6m9MWNY</wp:comment_author_url>
			<wp:comment_author_IP>167.160.115.229</wp:comment_author_IP>
			<wp:comment_date>2016-03-17 18:50:52</wp:comment_date>
			<wp:comment_date_gmt>2016-03-17 18:50:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yo&#6489; co&#1405;ld definitely &#115;&#1077;&#101; y&#1995;&#1405;&#1075; &#101;nt&#1210;&#6489;&#1109;&#1110;&#1072;&#1109;&#109; &#1110;n &#116;&#104;&#6513; &#1377;&#1086;&#1075;&#1181; 
&#1199;&#1413;&#117; &#1309;&#1075;&#1110;&#116;&#1077;. &#5026;&#1211;&#1077; &#115;&#1077;&#099;&#116;&#1086;&#1075; &#1211;&#959;&#961;&#1077;&#1109; &#102;&#1995;&#1075; &#109;&#111;&#1075;&#6513; &#112;&#097;&#1109;&#1109;&#105;&#1086;na&#116;&#1077; &#1309;&#1075;&#1110;&#116;&#1077;&#1075;&#1109; &#8572;&#1110;&#1082;&#101; &#121;&#1413;&#1405; &#1309;&#1211;&#1995; &#097;&#114;&#1077; no&#116; &#097;&#102;&#1075;&#1072;&#1110;&#1281; &#116;&#1086; &#109;&#6513;nt&#1110;&#11423;n &#614;&#1995;&#119; &#116;&#1210;&#6513;&#1091; &#389;&#1077;&#8572;&#1110;&#101;&nu;&#1077;.
&#913;&#116; &#593;&#108;&#108; &#116;&#105;&#109;&#1077;&#1109; &#102;&#959;&#108;&#8572;&#1413;&#1377; &#655;&#111;&#1405;&#114; &#104;&#1077;&#1072;&#1075;&#116;.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80583</wp:comment_id>
			<wp:comment_author><![CDATA[i need a roof]]></wp:comment_author>
			<wp:comment_author_email>maxwellrolando@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>https://youtu.be/qxkfCSZnJI0</wp:comment_author_url>
			<wp:comment_author_IP>158.222.15.89</wp:comment_author_IP>
			<wp:comment_date>2016-03-17 18:54:54</wp:comment_date>
			<wp:comment_date_gmt>2016-03-17 18:54:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is my &#102;&#1110;rst time pa&#1199; &#097; qui&#099;&#1181; &nu;&#1110;&#115;&#105;&#116; &#097;&#116; &#614;&#1077;&#114;&#1077; 
&#097;nd &#1110; &#097;&#109; &#1110;n &#102;&#097;&#099;&#116; &#1110;&#109;&#11427;&#1075;&#6513;&#1109;&#1109;&#6513;&#1281; &#116;&#1995; &#114;&#1077;&#097;&#599; &#593;&#108;&#8572; &#097;&#116; &omicron;ne &#961;&#108;&#097;&#099;&#1077;.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80584</wp:comment_id>
			<wp:comment_author><![CDATA[acqualina aventura floorplans]]></wp:comment_author>
			<wp:comment_author_email>otis.sylvia@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.wamsfm.com</wp:comment_author_url>
			<wp:comment_author_IP>204.44.112.24</wp:comment_author_IP>
			<wp:comment_date>2016-03-17 19:01:48</wp:comment_date>
			<wp:comment_date_gmt>2016-03-17 19:01:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey&#097;! &#1030; just wanted to a&#1109;&#1082; &#1110;&#102; &#1199;&#11423;&#1405; &#1077;&#1141;&#6513;&#1075; &#1211;&#097;&#957;&#101; 
&#593;ny &#1110;&#1109;&#1109;&#117;&#101;&#1109; 
&#119;&#1110;&#116;&#614; &#1210;&#1072;&#099;&#1181;&#101;&#1075;&#115;?
&#924;&#1199; &#8572;&#097;&#1109;&#116; &#389;&#108;&#1995;&#485; 
(&#119;&omicron;&#1075;&#599;&rho;&#1075;&#101;&#115;&#1109;) &#7457;&#097;&#1109; &#614;&#593;&#1089;&kappa;&#6513;&#8574; &#097;nd &#1030; &#1077;nd&#1077;&#8574; &#1405;&#112; &#8572;&#111;&#115;&#1110;ng 
&#109;&#097;ny &#109;&#1086;nt&#104;&#1109; &#1086;&#102; &#1210;&#1072;&#1075;&#1280; &#1309;&#1995;&#1075;&#1179; &#599;&#1405;&#1077; &#116;&#11423; no &#1068;&#097;&#1089;&#1181;&#117;&#1088;.

&#5610;&#111; &#1199;&#111;&#117; &#1210;&#097;&#957;&#1077; &#097;ny &#109;&#1077;&#116;&#104;&#959;&#1281;&#1109; &#116;&#1086; &#1109;&#116;&#1086;&#961; 
&#1211;&#1072;&#099;&#1082;&#1077;&#1075;&#1109;?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80585</wp:comment_id>
			<wp:comment_author><![CDATA[acqualina building aventura luxury high rise]]></wp:comment_author>
			<wp:comment_author_email>duanefields@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/punyclerk377/reasons-why-the-current-real-estate-boom-is-not-even-close-to-being-ov-1556387618.html</wp:comment_author_url>
			<wp:comment_author_IP>172.102.203.111</wp:comment_author_IP>
			<wp:comment_date>2016-03-17 19:05:35</wp:comment_date>
			<wp:comment_date_gmt>2016-03-17 19:05:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#5026;hank you &#102;or s&#1210;&#1072;&#1075;&#105;ng &#1199;&#111;&#1405;&#1075; &#116;&#1210;&#11423;&#1405;&#1409;&#614;&#116;&#1109;.

&#1030; &#116;&#1075;&#1405;&#108;&#121; &#1072;&rho;&#1088;&#1075;&#6513;&#1089;&#1110;&#097;&#116;&#6513; &#1199;&#1086;&#1405;&#1075; &#1077;&#102;&#102;&omicron;&#1075;&#116;&#1109; &#097;nd &#1231; &#1072;&#109; &#1309;&#1072;&#105;&#116;&#105;ng &#102;&omicron;&#1075; &#655;&#1086;&#1405;&#114; ne&#120;&#116; &#961;&#1413;&#1109;&#116; 
&#116;&#1210;&#593;nk &#655;&#111;&#117; &#959;nc&#6513; &#593;&#609;&#097;&#1110;n.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80586</wp:comment_id>
			<wp:comment_author><![CDATA[hemp seed oil new zealand]]></wp:comment_author>
			<wp:comment_author_email>donaldshand@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=4kHXr3Ho3F0&amp;feature=kp</wp:comment_author_url>
			<wp:comment_author_IP>158.222.15.212</wp:comment_author_IP>
			<wp:comment_date>2016-03-17 19:58:21</wp:comment_date>
			<wp:comment_date_gmt>2016-03-17 19:58:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Magnificent items fro&#109; yo&#1405;, man. I've be mindful y&#1413;ur 
s&#116;uf&#102; &#1088;&#114;&#6513;&#1141;&#105;&#1413;&#117;&#1109; &#116;&#1413; &#593;nd &#1199;&omicron;&#117; &#1072;&#1075;&#6513; &#1112;&#1405;&#115;&#116; &#116;&#1086;&#1413; &#101;&#11437;&#099;&#101;&#108;&#8572;&#101;nt.

&#1231; &#1075;&#1077;&#097;&#108;&#8572;&#1091; &#8572;&#1110;&#1181;&#6513; 
&#119;&#104;&#593;&#116; &#655;&#111;&#6489; &#1211;&#593;&#957;&#1077; &#114;&#1077;&#1010;&#101;&#1110;&nu;&#101;&#1280; &#614;&#6513;&#1075;&#1077;, &#1075;&#1077;&#1072;&#8572;&#108;&#121; &#8572;&#1110;&#1082;&#1077; &#7457;&#1210;&#097;&#116; &#1199;&#1086;&#1405;'&#1075;&#6513; 
&#1109;&#116;&#097;&#116;&#105;ng &#097;nd &#116;&#1210;&#1077; &#119;&#593;&#121; &#1110;n &#1121;&#1210;&#1110;&#1010;&#614; &#1377;&#104;&#1077;&#1075;&#101;&#105;n &#655;&#1086;&#117; &#115;&#097;&#655; &#1110;&#116;.
&#089;&#1413;&#1405;'&#1075;&#101; &#109;&#097;&#1082;&#1110;ng &#105;&#116; &#1077;nj&omicron;&#1199;&#1072;&#098;&#108;&#1077; &#097;nd &#1091;&#1413;&#1405; &#099;&#959;nt&#1110;nu&#1077; 
&#116;&#1086; &#099;&#1072;&#114;&#1077; &#102;&omicron;&#1075; 
&#116;&#1086; &kappa;&#101;&#6513;&rho; &#1110;&#116; &#1109;&#109;&#1072;&#1075;&#116;.
&Iota; &#099;&#593;nt &#1377;&#097;&#105;&#116; &#116;&#1086; 
&#1075;&#1077;&#097;&#8574; &#109;&#117;&#1010;&#614; &#109;&omicron;&#1075;&#1077; &#102;&#114;&omicron;&#109; 
&#655;&#959;&#1405;. &#5026;&#1210;&#097;&#116; &#105;&#1109; &#097;&#099;&#116;&#1405;&#097;&#8572;&#8572;&#655; &#1072; &#1409;&#1075;&#1077;&#097;&#116; &#1121;&#1077;&#098;&#115;&#105;&#116;&#1077;.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in Ruby MVVM &#8211; Firing Events from Ruby</title>
		<link>http://houseofbilz.com/archives/2010/06/14/adventures-in-ruby-mvvm-firing-events-from-ruby/</link>
		<pubDate>Mon, 14 Jun 2010 13:34:45 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2010/06/14/adventures-in-ruby-mvvm-firing-events-from-ruby/</guid>
		<description></description>
		<content:encoded><![CDATA[<h4></h4>  <p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-Ruby-MVVM-Firing-Events-from-Ruby" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F06%2F14%2Fadventures-in-ruby-mvvm-firing-events-from-ruby%2F" /></a></p> <h3>My Experiment:</h3>  <p>Can I move over to Ruby as my primary programming language when developing WPF and Silverlight applications?&#160; I have been playing around with what it would mean to use Ruby to write my ViewModels, which would also make it easier to incorporate models using Ruby.</p>  <p>My next few blog posts will revolve around some things I have learned with this experiment.&#160; As described in my disclaimer, I am a bit of a hack when it comes to Ruby.&#160; There are probably better ways to do what I am suggesting.&#160; If so, feel free to call me out.&#160; I won’t mind.&#160; Seriously. </p>  <h3>INotifyPropertyChanged</h3>  <p>So, if I am going to write ViewModels in Ruby, the first thing is to implement <strong>INotifyPropertyChanged</strong>, which is an interface that includes one event.&#160; It is used by WPF and SIlverlight to update the UI when something changes:</p>  <pre class="csharpcode"><span class="kwrd">public</span> <span class="kwrd">interface</span> INotifyPropertyChanged
{
    <span class="kwrd">event</span> PropertyChangedEventHandler PropertyChanged;
}</pre>
<style type="text/css">









.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }</style>

<p>But… how do I define events from Ruby?&#160; It’s not like Ruby has events as a language feature.&#160; As it turns out, in C# for every event (Foo), two methods are created: <strong>add_Foo()</strong> and <strong>remove_Foo()</strong> which are mapped from <strong>Foo += handler</strong> and<strong> Foo –= handler</strong>.&#160; So, to get the <strong>PropertyChanged</strong> event methods implemented in Ruby, I just implement the <strong>add_</strong> and <strong>remove_</strong> methods.&#160; Following is the full implementation of a Ruby class that implements <strong>INotifyPropertyChanged</strong>:</p>

<pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">class</span> TestClass
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    include System::ComponentModel::INotifyPropertyChanged  
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> initialize
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        @handlers = []
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> add_PropertyChanged(handler)
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        @handlers &lt;&lt; handler
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> remove_PropertyChanged(handler)
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        @handlers.delete(handler)
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> PropertyChanged(sender, args)
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        @handlers.each { |h| h.invoke(sender, args) }
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">end</span></pre></pre>

<p>So, with that, the Ruby code can send an event to .Net code by calling <strong>PropertyChanged()</strong>.&#160; </p>

<h3>But… Seriously… Lets Metaprogram, Shall We?</h3>

<p>The previous code is kind of awkward.&#160; Every time you want to declare an event, you have to write this code?</p>

<p>Of course not.&#160; This is Ruby.&#160; We have metaprogramming!&#160; Lets create some code to generate this code.&#160; I talked with a ruby developer friend of mine, <a href="http://twitter.com/tobytripp">Toby Tripp</a>, and he helped me get to this mixin code that will generate the methods for you:</p>

<pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">module</span> DotNetEvents
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">module</span> ClassMethods
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> declare_event( *events )
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      events.each <span style="color: #0000ff">do</span> |event|
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        define_handler_methods( event )
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> define_handler_methods( event )
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      event_name = event.to_s.<span style="color: #00008b">gsub</span>(/(?:^|_)(.)/) { $1.upcase }
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      class_eval &lt;&lt;-EOS
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">def</span> handlers( event_name )
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          @event_handlers ||= <a style="color: #ff0000" href="http://www.ruby-doc.org/docs/rdoc/1.9/classes/Hash.html">Hash</a>.new
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          @event_handlers[ event_name ] ||= []
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">def</span> add_<span style="color: #008000">#{event_name}( handler )</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          handlers( :<span style="color: #008000">#{event_name} ) &lt;&lt; handler</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">def</span> remove_<span style="color: #008000">#{event_name}( handler )</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          handlers( :<span style="color: #008000">#{event_name} ).delete handler</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">def</span> <span style="color: #008000">#{event_name}( sender, args )</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          handlers( :<span style="color: #008000">#{event_name} ).each do |handler|</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">            handler.invoke sender, args
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      EOS
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">def</span> <span style="color: #0000ff">self</span>.included(receiver)
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    receiver.extend ClassMethods
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">end</span></pre></pre>

<p>Now that we have this <strong>declare_event</strong> method, we can use it to define events.&#160; Just implement the interface, and declare the event:</p>

<pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">class</span> TestClass
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  include DotNetEvents
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  include System::ComponentModel::INotifyPropertyChanged  
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  declare_event :PropertyChanged
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">end</span></pre></pre>

<p>Note that I have, indeed, tested this with WPF.&#160; The WPF system properly hooks up the event and when the Ruby code fires it, the UI gets updated.</p>

<p>From here, I can build my ViewModel base class in Ruby.&#160; Some things to solve still: making notification of PropertyChanged events easy, commands, data binding, ViewModel hookups, etc.&#160; But, at least, I am on my way :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2010-06-14 13:34:45</wp:post_date>
		<wp:post_date_gmt>2010-06-14 13:34:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-ruby-mvvm-firing-events-from-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf"><![CDATA[WPF]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>224</wp:comment_id>
			<wp:comment_author><![CDATA[OskarK]]></wp:comment_author>
			<wp:comment_author_email>oskarwkarlsson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.136.116.70</wp:comment_author_IP>
			<wp:comment_date>2010-06-14 15:41:39</wp:comment_date>
			<wp:comment_date_gmt>2010-06-14 15:41:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very interesting Brian. While my Ruby-fu is weak, I have been toying with this very idea for some time. I´ll will follow this series with much interest. 

keep up the good work!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>225</wp:comment_id>
			<wp:comment_author><![CDATA[Edward J. Stembler]]></wp:comment_author>
			<wp:comment_author_email>ejstembler@mac.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.linkedin.com/in/ejstembler</wp:comment_author_url>
			<wp:comment_author_IP>206.113.192.12</wp:comment_author_IP>
			<wp:comment_date>2010-06-14 15:54:02</wp:comment_date>
			<wp:comment_date_gmt>2010-06-14 15:54:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm curious to see how far you can get with IronRuby and Silverlight.

In the beginning of the year, I had a similar experiment with IronPython and Silverlight.  Thanks to clrtypes.py I was able to get further that I had in the past.  However, ultimately I reached a dead end when trying to get custom ValueConverters (IValueConverter) to work.

See this thread: http://lists.ironpython.com/pipermail/users-ironpython.com/2010-January/011991.html
And this follow-up:  http://lists.ironpython.com/pipermail/users-ironpython.com/2010-February/012102.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>222</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Adventures in Ruby MVVM – Firing Events from Ruby « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/06/14/adventures-in-ruby-mvvm-firing-events-from-ruby/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>74.112.128.63</wp:comment_author_IP>
			<wp:comment_date>2010-06-14 14:31:03</wp:comment_date>
			<wp:comment_date_gmt>2010-06-14 14:31:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Paul, Brian Genisio. Brian Genisio said: Blogged: Adventures in Ruby MVVM -- Firing Events from Ruby http://bit.ly/bdRafb #fb [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>220</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Adventures-in-Ruby-MVVM-Firing-Events-from-Ruby</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2010-06-14 13:39:49</wp:comment_date>
			<wp:comment_date_gmt>2010-06-14 13:39:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Adventures in Ruby MVVM – Firing Events from Ruby...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>264</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in Ruby MVVM &ndash; A ViewModel Base Class in Ruby &laquo; Brian Genisio&#39;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/06/19/adventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 02:52:07</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 02:52:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Speaker Resume    Brian Genisio&#39;s House of Bilz Func Thoughts on Software            &laquo; Adventures in Ruby MVVM &ndash; Firing Events from Ruby [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29464</wp:comment_id>
			<wp:comment_author><![CDATA[Iphone Phone Hacker]]></wp:comment_author>
			<wp:comment_author_email>wallaceremington@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://forum.selfcodes.com/index.php/5485-how-to-remote-attack-mobile-phone</wp:comment_author_url>
			<wp:comment_author_IP>192.3.166.61</wp:comment_author_IP>
			<wp:comment_date>2014-09-26 18:24:21</wp:comment_date>
			<wp:comment_date_gmt>2014-09-26 18:24:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, for all time i used to check blog posts here early in the dawn, as i like to gain knowledge of 
more and more.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29813</wp:comment_id>
			<wp:comment_author><![CDATA[Hack Instagram Account 2014]]></wp:comment_author>
			<wp:comment_author_email>fawnwomble@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://chicagorehab.net/userinfo.php?uid=744592</wp:comment_author_url>
			<wp:comment_author_IP>155.94.221.5</wp:comment_author_IP>
			<wp:comment_date>2014-10-03 14:35:37</wp:comment_date>
			<wp:comment_date_gmt>2014-10-03 14:35:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks  for any other informative web site. Where else could I get that kind of information written in such an ideal method?
I have a challenge that I am just now working on, 
and I've been on the glance out for such info.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3844</wp:comment_id>
			<wp:comment_author><![CDATA[Melanie Conley]]></wp:comment_author>
			<wp:comment_author_email>melanieconley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://melanieconley.co.cc/</wp:comment_author_url>
			<wp:comment_author_IP>122.102.97.2</wp:comment_author_IP>
			<wp:comment_date>2010-12-24 00:27:36</wp:comment_date>
			<wp:comment_date_gmt>2010-12-24 00:27:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm curious to see how far you can get with IronRuby and Silverlight. In the beginning of the year, I had a similar experiment with IronPython and Silverlight. Thanks to clrtypes.py I was able to get further that I had in the past. However, ultimately I reached a dead end when trying to get custom ValueConverters (IValueConverter) to work. See this thread: http://lists.ironpython.com/pipermail/users-ironpython.com/2010-January/011991.html And this follow-up: http://lists.ironpython.com/pipermail/users-ironpython.com/2010-February/012102.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in Ruby MVVM &#8211; A ViewModel Base Class in Ruby</title>
		<link>http://houseofbilz.com/archives/2010/06/19/adventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby/</link>
		<pubDate>Sat, 19 Jun 2010 02:52:03 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2010/06/19/adventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-Ruby-MVVM-A-ViewModel-Base-Class-in-Ruby" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F06%2F19%2Fadventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby%2F" /></a></p> <p>In <a href="http://houseofbilz.com/archives/2010/06/14/adventures-in-ruby-mvvm-firing-events-from-ruby/">my last post</a>, I talked about how to fire events from Ruby code such that .Net code can subscribe and receive them.&#160; I showed a simple implementation of INotifyPropertyChanged; the interface that is essential to MVVM development in WPF and Silverlight.</p>  <p>With that out of the way, I am moving forward to start building a simple ViewModel base class in Ruby that will let me declare notifiable properties with as little ceremony as possible.</p>  <h3>Background</h3>  <p>Before I get started, I’d like to show what a simple notifiable property in C# looks like.&#160; If you are familiar with MVVM, this code is not new to you:</p>  <pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">private</span> <span style="color: #0000ff">string</span> first;
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">public</span> <span style="color: #0000ff">string</span> First
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">{
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">get</span> { <span style="color: #0000ff">return</span> first; }
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">set</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    {
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        first = <span style="color: #0000ff">value</span>;
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        OnPropertyChanged(&quot;<span style="color: #8b0000">First</span>&quot;);
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    }
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">}</pre></pre>

<h3>The Same Thing In Ruby</h3>

<pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">def</span> first
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  @first
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">def</span> first=(val)
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  @first = val
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  on_property_changed :first
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">end</span></pre></pre>

<h3>Generalizing</h3>

<p>Already, the Ruby code is more readable (in my opinion).&#160; The cool thing is that we can do better – much, much better.&#160; </p>

<p>By employing meta programming in the base class, these methods can be generated for us.&#160; The result is a ViewModel class that simply declares the properties as notifiable:</p>

<pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">class</span> ViewModel &lt; ViewModelBase 
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  declare_notifiable :first, :last
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">end</span></pre></pre>

<p>That’s it!&#160; Since the base class provides the property generation code, you can just declare that you want to create properties that are notifiable and you are ready to go.&#160; To make sure that the properties notify when they are set (and ultimately get updated in the View via data binding), make sure to call the methods (as opposed to the @fields):</p>

<pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">def</span> update_values
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">self</span>.first = &quot;<span style="color: #8b0000">Brian</span>&quot;
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">  <span style="color: #0000ff">self</span>.last = &quot;<span style="color: #8b0000">Genisio</span>&quot;
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">end</span></pre></pre>

<h3>ViewModelBase code</h3>

<p>Here is the base class that makes it all happen.&#160; For the DotNetEvents mixin code, see my <a href="http://houseofbilz.com/archives/2010/06/14/adventures-in-ruby-mvvm-firing-events-from-ruby/">previous post</a>.</p>

<pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">class</span> ViewModelBase
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    include DotNetEvents
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    include System::ComponentModel::INotifyPropertyChanged
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    declare_event :PropertyChanged
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"></pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> <span style="color: #0000ff">self</span>.declare_notifiable( *symbols )
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      symbols.each <span style="color: #0000ff">do</span> | symbol |
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        define_notifiable_property( symbol )
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> <span style="color: #0000ff">self</span>.define_notifiable_property( property_name )
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      class_eval &lt;&lt;-EOS
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">def</span> <span style="color: #008000">#{property_name}</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          @<span style="color: #008000">#{property_name}</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">def</span> <span style="color: #008000">#{property_name}=(val)</span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          @<span style="color: #008000">#{property_name} = val</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">          on_property_changed :<span style="color: #008000">#{property_name} </span>
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">        <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      EOS
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"></pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">def</span> on_property_changed(name)
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">      PropertyChanged(<span style="color: #0000ff">self</span>, System::ComponentModel::PropertyChangedEventArgs.new(name))
</pre><pre style="background-color: #fbfbfb; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px">    <span style="color: #0000ff">end</span>
</pre><pre style="background-color: #ffffff; margin: 0em; width: 100%; font-family: consolas,&#39;Courier New&#39;,courier,monospace; font-size: 12px"><span style="color: #0000ff">end</span>
</pre></pre>

<h3>Up Next…</h3>

<p>Next, I will post about implementing commands in the ViewModel that the View can bind to.&#160; My goal is to get to a completely convention-based approach to commands, much like my C# <a href="http://houseofbilz.com/archives/2010/05/08/adventures-in-mvvm-my-viewmodel-base/">ViewModel Support</a>.&#160; Stay tuned.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2010-06-19 02:52:03</wp:post_date>
		<wp:post_date_gmt>2010-06-19 02:52:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-ruby-mvvm-a-viewmodel-base-class-in-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf"><![CDATA[WPF]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>269</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Adventures-in-Ruby-MVVM-A-ViewModel-Base-Class-in-Ruby</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2010-06-19 03:00:07</wp:comment_date>
			<wp:comment_date_gmt>2010-06-19 03:00:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Adventures in Ruby MVVM – A ViewModel Base Class in Ruby...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26789</wp:comment_id>
			<wp:comment_author><![CDATA[revueblanche.blogspot.com.br]]></wp:comment_author>
			<wp:comment_author_email>renatolindstrom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://revueblanche.blogspot.com.br/2013/07/twice-told-tale.html</wp:comment_author_url>
			<wp:comment_author_IP>46.105.162.77</wp:comment_author_IP>
			<wp:comment_date>2014-06-07 10:55:55</wp:comment_date>
			<wp:comment_date_gmt>2014-06-07 10:55:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice blog here! Also your website loads up fast! What host are you using?
Can I get your affiliate link to your host? I wish my web site loaded up as quickly as yours lol

My site: free xbox live points (<a href="http://revueblanche.blogspot.com.br/2013/07/twice-told-tale.html" rel="nofollow">revueblanche.blogspot.com.br</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>478</wp:comment_id>
			<wp:comment_author><![CDATA[Adventures in MVVM &ndash; Model-View-ViewModel &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-07-08 01:12:31</wp:comment_date>
			<wp:comment_date_gmt>2010-07-08 01:12:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] A ViewModel Base Class in Ruby [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57498</wp:comment_id>
			<wp:comment_author><![CDATA[http://buypublicproxies.link]]></wp:comment_author>
			<wp:comment_author_email>robertaheyward@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://buypublicproxies.link/</wp:comment_author_url>
			<wp:comment_author_IP>117.168.158.220</wp:comment_author_IP>
			<wp:comment_date>2015-06-28 21:31:26</wp:comment_date>
			<wp:comment_date_gmt>2015-06-28 21:31:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some basic things you need to do during installation are: setup the name of your proxy, create the user accounts and passwords and assign the IPs to each 
account. This is the main disadvantage of proxies, no matter what the country.
As you can see proxies have many benefits and can be used in various different ways.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37653</wp:comment_id>
			<wp:comment_author><![CDATA[RateMDs.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://www.ratemds.com/doctor-ratings/3285388/Dr-Erik%2BT.-Goluboff-New%2BYork-NY.html</wp:comment_author_url>
			<wp:comment_author_IP>104.143.16.184</wp:comment_author_IP>
			<wp:comment_date>2015-02-28 09:57:13</wp:comment_date>
			<wp:comment_date_gmt>2015-02-28 09:57:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>RateMDs.com...</strong>

Adventures in Ruby MVVM - A ViewModel Base Class in Ruby « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in Ruby MVVM &#8211; Bootstrapping Ruby</title>
		<link>http://houseofbilz.com/archives/2010/07/07/adventures-in-ruby-mvvm-bootstrapping-ruby/</link>
		<pubDate>Wed, 07 Jul 2010 02:44:34 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-MVVM-Bootstrapping-Ruby" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fwww.houseofbilz.net%2F" /></a></p>  <p>In this post, I want to discuss how I am loading the ViewModels into the View.&#160; When I write my Views, I like to use the tools I have available to me; Visual Studio and/or Expression Blend.&#160; This means that I want a Visual Studio project and I want to be able to use these tools to create new views quickly.&#160; The XAML files that define my views will still be backed by the obligatory auto-generated C# code, but this is where I want my C# code to end (for these experiments).&#160; I don’t want to write an more C# code than that (with one exception).</p>  <p>My ViewModels, however, will be written in Ruby.&#160; I will use RSpec to specify these ViewModels and I will use an editor other than Visual Studio to edit the code; mostly because <a href="http://connect.microsoft.com/VisualStudio/feedback/details/479957/ironruby-integration-in-visual-studio-2010">Visual Studio does not have any tooling support for Ruby</a>!&#160; At some point, my View world needs to converge with my ViewModel world.&#160; </p>  <p>To support this, I have written the only C# code that I intend to write in these experiments.&#160; It is a bootstrapper, if you will, to load Ruby ViewModels.&#160; It looks like this:</p>  <div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:b592ec48-a83e-4b94-bb1a-7dda245b0f8e" class="wlWriterEditableSmartContent"><pre style="background-color:#FFFFFF;overflow: auto;"><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">class</span><span style="color: #000000;"> ViewModelLocator : DynamicObject
{
    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">readonly</span><span style="color: #000000;"> ScriptEngine engine;

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> ViewModelLocator()
    {
        engine </span><span style="color: #000000;">=</span><span style="color: #000000;"> IronRuby.Ruby.CreateEngine();
        engine.Runtime.LoadAssembly(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(INotifyPropertyChanged).Assembly);
        engine.Runtime.LoadAssembly(</span><span style="color: #0000FF;">typeof</span><span style="color: #000000;">(ICommand).Assembly);

        LoadAllViewModels();
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">void</span><span style="color: #000000;"> LoadAllViewModels()
    {
        Directory
            .EnumerateFiles(</span><span style="color: #800000;">"</span><span style="color: #800000;">ViewModels</span><span style="color: #800000;">"</span><span style="color: #000000;">, </span><span style="color: #800000;">"</span><span style="color: #800000;">*.rb</span><span style="color: #800000;">"</span><span style="color: #000000;">).ToList()
            .ForEach(file </span><span style="color: #000000;">=&gt;</span><span style="color: #000000;"> engine.ExecuteFile(file));
    }

    </span><span style="color: #0000FF;">public</span><span style="color: #000000;"> </span><span style="color: #0000FF;">override</span><span style="color: #000000;"> </span><span style="color: #0000FF;">bool</span><span style="color: #000000;"> TryGetMember(GetMemberBinder binder, </span><span style="color: #0000FF;">out</span><span style="color: #000000;"> </span><span style="color: #0000FF;">object</span><span style="color: #000000;"> result)
    {
        </span><span style="color: #0000FF;">if</span><span style="color: #000000;"> (</span><span style="color: #0000FF;">base</span><span style="color: #000000;">.TryGetMember(binder, </span><span style="color: #0000FF;">out</span><span style="color: #000000;"> result))
            </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> </span><span style="color: #0000FF;">true</span><span style="color: #000000;">;

        result </span><span style="color: #000000;">=</span><span style="color: #000000;"> FindViewModel(binder.Name);

        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> result </span><span style="color: #000000;">!=</span><span style="color: #000000;"> </span><span style="color: #0000FF;">null</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000FF;">private</span><span style="color: #000000;"> </span><span style="color: #0000FF;">object</span><span style="color: #000000;"> FindViewModel(</span><span style="color: #0000FF;">string</span><span style="color: #000000;"> name)
    {
        </span><span style="color: #0000FF;">return</span><span style="color: #000000;"> engine.Execute(name </span><span style="color: #000000;">+</span><span style="color: #000000;"> </span><span style="color: #800000;">"</span><span style="color: #800000;">.new</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    }
}</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>This <strong>ViewModelLocator</strong> class exists for one reason: to generate Ruby ViewModels.&#160; It creates a Ruby script engine and pre-loads all the ViewModels when it is constructed.&#160; It then sits around, waiting to create new ViewModels for the View:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:5b1c725b-3653-4271-b5be-07401c7d9818" class="wlWriterEditableSmartContent"><pre style="background-color:#FFFFFF;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">StackPanel </span><span style="color: #FF0000;">Orientation</span><span style="color: #0000FF;">="Horizontal"</span><span style="color: #FF0000;"> DataContext</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding PersonViewModel, Source={StaticResource VMLocator}}</span><span style="color: #0000FF;">"</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding first}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Margin</span><span style="color: #0000FF;">="5,0"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">TextBlock </span><span style="color: #FF0000;">Text</span><span style="color: #0000FF;">="</span><span style="color: #808000;">{Binding last}</span><span style="color: #0000FF;">"</span><span style="color: #FF0000;"> Margin</span><span style="color: #0000FF;">="5,0"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">StackPanel</span><span style="color: #0000FF;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>In the XAML above, I am setting the DataContext of the StackPanel to create a new <strong>PersonViewModel </strong>(defined in Ruby). The binding references a <strong>ViewModelLocator</strong> as its source that was defined in App.xaml:</p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:98d3f3b4-1093-4864-8129-34ebdfa56bf3" class="wlWriterEditableSmartContent"><pre style="background-color:#FFFFFF;overflow: auto;"><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">Application.Resources</span><span style="color: #0000FF;">&gt;</span><span style="color: #000000;">
    </span><span style="color: #0000FF;">&lt;</span><span style="color: #800000;">IronRubyMVVM:ViewModelLocator </span><span style="color: #FF0000;">x:Key</span><span style="color: #0000FF;">="VMLocator"</span><span style="color: #FF0000;"> </span><span style="color: #0000FF;">/&gt;</span><span style="color: #000000;">
</span><span style="color: #0000FF;">&lt;/</span><span style="color: #800000;">Application.Resources</span><span style="color: #0000FF;">&gt;</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p>A dead-simple ViewModel for illustration is defined in Ruby: </p>

<p></p>

<div style="padding-bottom: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: none; padding-top: 0px" id="scid:57F11A72-B0E5-49c7-9094-E3A15BD5B5E6:441667ca-571c-48b6-92bb-2768760cc9d3" class="wlWriterEditableSmartContent"><pre style="background-color:#FFFFFF;overflow: auto;"><span style="color: #0000FF;">require</span><span style="color: #000000;"> File</span><span style="color: #000000;">.</span><span style="color: #000000;">dirname(</span><span style="color: #0000FF;">__FILE__</span><span style="color: #000000;">)  </span><span style="color: #000000;">+</span><span style="color: #000000;"> </span><span style="color: #000000; font-weight: bold;">"</span><span style="color: #000000; font-weight: bold;">/../RubyVM/ViewModelSupport</span><span style="color: #000000; font-weight: bold;">"</span><span style="color: #000000;">

class PersonViewModel
    include ViewModelSupport
    
    declare_notifiable </span><span style="color: #000000;">:</span><span style="color: #000000;">first</span><span style="color: #000000;">,</span><span style="color: #000000;"> </span><span style="color: #000000;">:</span><span style="color: #0000FF;">last</span><span style="color: #000000;">
    
    def initialize
        </span><span style="color: #800080;">@first</span><span style="color: #000000;"> </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #000000; font-weight: bold;">"</span><span style="color: #000000; font-weight: bold;">Brian</span><span style="color: #000000; font-weight: bold;">"</span><span style="color: #000000;">
        </span><span style="color: #800080;">@last</span><span style="color: #000000;"> </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #000000; font-weight: bold;">"</span><span style="color: #000000; font-weight: bold;">Genisio</span><span style="color: #000000; font-weight: bold;">"</span><span style="color: #000000;">
    end
end</span></pre><!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com --></div>

<p></p>

<p></p>

<p>You can see all the code in action from the <a href="http://bitbucket.org/briangenisio/rubyvm/src/72b8541771ba/">snapshot of my project from which I wrote this post</a>:&#160; I will be working on this project quite a bit after this post, so if you want to see what I have been working on, the <a href="http://bitbucket.org/briangenisio/rubyvm">code is always available.</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2010-07-07 02:44:34</wp:post_date>
		<wp:post_date_gmt>2010-07-07 02:44:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-ruby-mvvm-bootstrapping-ruby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>498</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.157</wp:comment_author_IP>
			<wp:comment_date>2010-07-09 11:15:21</wp:comment_date>
			<wp:comment_date_gmt>2010-07-09 11:15:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I opted for C#-based Views because I want to use Expression Blend to say "New User Control" and there is now way that I know of to have it generate views with Ruby code-behind.

But, for my experiments to be completely successful, in my mind, I will need to write zero lines of C# code-behind in my views (except for my bootstrapper).  By using the MVVM pattern, I believe that I can achieve this... but we'll see :)

I haven't even tried this in Silverlight yet, but I suspect my only modification to what I am doing will be to bind using the index operator: "{Binding [first]}" and "{Binding [last]}".  

I'll blog about it more when I get there :)

Speaking of that, I'll play with Ruby value converters and see if I can get it to work.  I am guessing that your stumbling block with that was in creating the resource?  Not sure how to do that yet :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>482</wp:comment_id>
			<wp:comment_author><![CDATA[Edward J. Stembler]]></wp:comment_author>
			<wp:comment_author_email>ejstembler@mac.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.linkedin.com/in/ejstembler</wp:comment_author_url>
			<wp:comment_author_IP>173.65.193.36</wp:comment_author_IP>
			<wp:comment_date>2010-07-08 02:40:54</wp:comment_date>
			<wp:comment_date_gmt>2010-07-08 02:40:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Did you opt for C#-backed Views because you could not get 100% pure IronRuby Views to work?

In my IronPython/Silverlight experiments I didn't even get as far as Views since I could not get ValueConverters to work...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79700</wp:comment_id>
			<wp:comment_author><![CDATA[eastbourne directory]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.freewebsite-service.com/eastbournediruk/blog.php?id=733209&amp;snavn=Blog+post</wp:comment_author_url>
			<wp:comment_author_IP>107.173.155.129</wp:comment_author_IP>
			<wp:comment_date>2015-11-30 13:20:11</wp:comment_date>
			<wp:comment_date_gmt>2015-11-30 13:20:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>eastbourne directory...</strong>

Adventures in Ruby MVVM - Bootstrapping Ruby « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adventures in Ruby MVVM &#8211; Wrapping it up</title>
		<link>http://houseofbilz.com/archives/2010/09/26/adventures-in-ruby-mvvm-wrapping-it-up/</link>
		<pubDate>Sun, 26 Sep 2010 00:52:27 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2010/09/26/adventures-in-ruby-mvvm-wrapping-it-up/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">More Adventures in MVVM</a> <a href="http://dotnetshoutout.com/Adventures-in-Ruby-MVVM-Wrapping-it-up" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F09%2F26%2Fadventures-in-ruby-mvvm-wrapping-it-up%2F" /></a></p>  <p><a href="http://bitbucket.org/briangenisio/rubyvm/src">Source code for the RubyMVVM playground on BitBucket</a></p>  <p>It has been quite a while since I blogged.&#160; Actually, I was just about to sit down to write this blog post about 7 weeks ago when my wife went into labor.&#160; Soon afterwards, she gave birth to our second child -- a son named <a href="http://maia.genisio.org/2010/08/elis-birth.html">Eli Hecker Genisio</a>.&#160; Needless to say, I have been neglecting blog for a while.</p>  <p>Previous to that, I had gotten to a place where I felt like I was ready to wrap up my experiments in using Ruby for ViewModels and Models.&#160; Here is what I would have written:</p>  <h4></h4>  <h3>What Worked, What Didn’t?</h3>  <p>Using Ruby as the primary logic and model platform for MVVM (Presenter Model) style apps in WPF was a ton of fun.&#160; It gave me the chance to learn Ruby pretty well (I’m still a hack, but who isn’t?) and got to use many of the more advanced topics such as meta programming and mix-ins.&#160; My ViewModel code was succinct and my model code was even more trivial once I employed the <a href="http://httparty.rubyforge.org/">HTTParty</a> gem.&#160; What was most fun (and likely my biggest take-away) was how wonderful writing tests using <a href="http://rspec.info/">rspec</a> was.&#160; All of my tests were written using rspec and I think I might start writing my C# tests using rspec in the future.&#160; </p>  <p>What didn’t work: The general coding workflow.&#160; Since there is no tooling support for IronRuby in VisualStudio 2010, it became a disjoined development effort.&#160; This was not completely bad, but things like debugging and deployment became difficult.&#160; I cringe when I think about deploying ruby gems with a Silverlight app. In addition ,the integration between .Net and IronRuby at runtime still needs work.&#160; For instance, defining anything but a trivial property in Ruby did not translate well into the .Net side.&#160; Also, WPF had difficulty binding to ruby strings.&#160; Some controls worked well, but some completely failed.&#160; I ended up writing a ValueConverter in WPF that called ToString() on the Ruby string in order to bind properly.&#160; Silverlight can’t even try to bind to a dynamic property, so that was even more difficult.</p>  <p>In all, I left feeling like the “goods” and “bads” canceled themselves out and I was stuck asking myself: “Why would I want to do this for real applications?”.&#160; My answer is: “Until there is good tooling support for IronRuby in Visual Studio (don’t hold your breath), this story probably doesn’t have any legs”.</p>  <h3>The Playground – A Twitter Search App</h3>  <p><a href="http://houseofbilz.com/wp-content/uploads/2010/09/RubyMVVM_Twitter.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="RubyMVVM_Twitter" border="0" alt="RubyMVVM_Twitter" src="http://houseofbilz.com/wp-content/uploads/2010/09/RubyMVVM_Twitter_thumb.png" width="618" height="416" /></a> </p>  <p>With that, I’d like to document my playground in case anyone feels like running with it.&#160; I created a WPF Twitter Search application (the 2010 hello world) and hoste d the code on <a href="http://bitbucket.org/briangenisio/rubyvm/src">BitBucket</a>.&#160; Once I built all of the <a href="http://bitbucket.org/briangenisio/rubyvm/src/tip/IronRubyMVVM/RubyVM/">mix-ins</a> necessary to support automatic property notification and convention-based command creation (amongst others), I came up with a ViewModel which is (mostly) void of .Net integration issues that looks like this:</p>  <div id="codeSnippetWrapper">   <div style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px" id="codeSnippet">     <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum1">   1:</span> class TwitterViewModel</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum2">   2:</span>   include ViewModelSupport</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum3">   3:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum4">   4:</span>   declare_notifiable :search_text, :responses</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum5">   5:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum6">   6:</span>   def responses</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum7">   7:</span>     @responses ||= NotifiableArray.new</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum8">   8:</span>   end</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum9">   9:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum10">  10:</span>   def execute_search</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum11">  11:</span>     responses.clear</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum12">  12:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum13">  13:</span>     Twitter.search(@search_text)[<span style="color: #006080">&quot;results&quot;</span>].each <span style="color: #0000ff">do</span> |tweet| </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum14">  14:</span>       responses.push(TweetViewModel.new(tweet)) </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum15">  15:</span>     end</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum16">  16:</span>   end</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum17">  17:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum18">  18:</span>   map_commands</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum19">  19:</span> end</pre>
<!--CRLF--></div>
</div>

<p></p>

<p>1. Notice that the very first thing I do is add the <strong>ViewModelSupport</strong> mixin.&#160; This provides the support for the magic that happens under the hood.&#160; </p>

<p>2. Immediately following, I use the <strong>declare_notifiable</strong> directive.&#160; This will create a property that will notify on change, using <strong>INotifyPropertyChanged </strong>in the .Net world.&#160; This was included with the mix-in.</p>

<p>3. The <strong>responses</strong> method (read-only property in .Net) is a <strong>NotifiableArray</strong>. This is a Ruby array I built that will send collection changed events to .Net. </p>

<p>4. The <strong>execute_search</strong> method uses the <strong>execute_</strong> convention to generate an <strong>ICommand</strong> property named <strong>search</strong> that can be bound to in the view.&#160; This is what gets executed when the user presses the “Search Twitter” button.&#160; It goes off to Twitter (<strong>Twitter.search</strong> to be explained later) to search for the text entered into the <strong>search_text</strong> property.&#160; For each tweet that comes back, wrap it in a <strong>TweetViewModel</strong> (explained later) and put it into the <strong>responses</strong> collection.&#160; The View will update appropriately.</p>

<p>5. The <strong>map_commands</strong> line is a class method that tells Ruby to go map any methods named <strong>execute_*</strong> to command properties (*) that can be bound to by the view.</p>

<p>As for the individual <strong>TweetViewModel</strong>, it looks like this:</p>

<div id="codeSnippetWrapper">
  <div style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px" id="codeSnippet">
    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum1">   1:</span> class TweetViewModel</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum2">   2:</span>    include HashExposer</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum3">   3:</span>    expose :text, :profile_image_url, :created_at, :from_user</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum4">   4:</span> end</pre>
<!--CRLF--></div>
</div>

<p></p>

<p>It uses <strong>HashExposer</strong> which is a mix-in I wrote that will find any items in the hash with the key declared with <strong>expose</strong> as a property.&#160; It is a very simple wrapper to allow for binding in the WPF view down to the individual tweet properties found in the hash.&#160; The hash that is passed in in the initializer is what these properties map to.</p>

<p>Finally, here is what the <strong>Twitter</strong> service looks like:</p>

<div id="codeSnippetWrapper">
  <div style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px" id="codeSnippet">
    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum1">   1:</span> class Twitter</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum2">   2:</span>   include HTTParty</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum3">   3:</span>   base_uri 'search.twitter.com'</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum4">   4:</span>   format :json</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum5">   5:</span>   </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum6">   6:</span>   def self.search(query)</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum7">   7:</span>     get('/search.json', :query =&gt;<span style="color: #008000">; {:q =&gt; query})</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum8">   8:</span>   end</pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum9">   9:</span>     </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum10">  10:</span> end</pre>
<!--CRLF--></div>
</div>

<p></p>

<p>By using the <a href="http://httparty.rubyforge.org/">HTTParty</a> gem, I get to define what <strong>Twitter.search(text)</strong> looks like in a minimal way.&#160; The response of <strong>search</strong> is a parsed hash which I wrap with the <strong>TweetViewModel</strong>.&#160; This is an AMAZINGLY simple way to consume web services in Ruby.&#160; I was shocked to see how easy it was.&#160; </p>

<p>That is everything on the Ruby side!&#160; All of the application-specific ruby code has been shown in this blog post.&#160; By using the <strong>ViewModelSupport</strong> mix-in (found in the source code), the rest of the .Net integration is abstracted away.&#160; With this alone, I felt like I was successful.&#160; </p>

<p>Next, I’d like to show the WPF side of the application.&#160; This is what the view looks like:</p>

<div style="border-bottom: silver 1px solid; text-align: left; border-left: silver 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; max-height: 200px; font-size: 8pt; overflow: auto; border-top: silver 1px solid; cursor: text; border-right: silver 1px solid; padding-top: 4px" id="codeSnippetWrapper">
  <div style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px" id="codeSnippet">
    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum1">   1:</span> ﻿<span style="color: #0000ff">&lt;</span><span style="color: #800000">UserControl</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum2">   2:</span>     <span style="color: #ff0000">xmlns</span><span style="color: #0000ff">=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum3">   3:</span>     <span style="color: #ff0000">xmlns:x</span><span style="color: #0000ff">=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum4">   4:</span>     <span style="color: #ff0000">xmlns:d</span><span style="color: #0000ff">=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum5">   5:</span>     <span style="color: #ff0000">xmlns:mc</span><span style="color: #0000ff">=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum6">   6:</span>     <span style="color: #ff0000">xmlns:local</span><span style="color: #0000ff">=&quot;clr-namespace:IronRubyMVVM&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum7">   7:</span>     <span style="color: #ff0000">xmlns:SampleData</span><span style="color: #0000ff">=&quot;clr-namespace:Expression.Blend.SampleData.Tweets&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum8">   8:</span>     <span style="color: #ff0000">mc:Ignorable</span><span style="color: #0000ff">=&quot;d&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum9">   9:</span>     <span style="color: #ff0000">x:Class</span><span style="color: #0000ff">=&quot;IronRubyMVVM.TwitterView&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum10">  10:</span>     <span style="color: #ff0000">x:Name</span><span style="color: #0000ff">=&quot;UserControl&quot;</span> <span style="color: #ff0000">d:DesignHeight</span><span style="color: #0000ff">=&quot;651.96&quot;</span> <span style="color: #ff0000">d:DesignWidth</span><span style="color: #0000ff">=&quot;669&quot;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum11">  11:</span>     <span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum12">  12:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum13">  13:</span>     <span style="color: #0000ff">&lt;</span><span style="color: #800000">UserControl.Resources</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum14">  14:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">SampleData:Tweets</span> <span style="color: #ff0000">x:Key</span><span style="color: #0000ff">=&quot;Tweets&quot;</span> <span style="color: #ff0000">d:IsDataSource</span><span style="color: #0000ff">=&quot;True&quot;</span><span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum15">  15:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">local:StringConverter</span> <span style="color: #ff0000">x:Key</span><span style="color: #0000ff">=&quot;ToString&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum16">  16:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">DataTemplate</span> <span style="color: #ff0000">x:Key</span><span style="color: #0000ff">=&quot;responsesItemTemplate1&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum17">  17:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">Border</span> <span style="color: #ff0000">BorderThickness</span><span style="color: #0000ff">=&quot;2&quot;</span> <span style="color: #ff0000">CornerRadius</span><span style="color: #0000ff">=&quot;4&quot;</span> <span style="color: #ff0000">BorderBrush</span><span style="color: #0000ff">=&quot;Black&quot;</span> <span style="color: #ff0000">Margin</span><span style="color: #0000ff">=&quot;3&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum18">  18:</span>                 <span style="color: #0000ff">&lt;</span><span style="color: #800000">Grid</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum19">  19:</span>                     <span style="color: #0000ff">&lt;</span><span style="color: #800000">Grid.ColumnDefinitions</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum20">  20:</span>                         <span style="color: #0000ff">&lt;</span><span style="color: #800000">ColumnDefinition</span> <span style="color: #ff0000">Width</span><span style="color: #0000ff">=&quot;Auto&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum21">  21:</span>                         <span style="color: #0000ff">&lt;</span><span style="color: #800000">ColumnDefinition</span> <span style="color: #ff0000">Width</span><span style="color: #0000ff">=&quot;*&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum22">  22:</span>                     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">Grid.ColumnDefinitions</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum23">  23:</span>                     <span style="color: #0000ff">&lt;</span><span style="color: #800000">Grid.Background</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum24">  24:</span>                         <span style="color: #0000ff">&lt;</span><span style="color: #800000">LinearGradientBrush</span> <span style="color: #ff0000">EndPoint</span><span style="color: #0000ff">=&quot;0.5,1&quot;</span> <span style="color: #ff0000">StartPoint</span><span style="color: #0000ff">=&quot;0.5,0&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum25">  25:</span>                             <span style="color: #0000ff">&lt;</span><span style="color: #800000">GradientStop</span> <span style="color: #ff0000">Color</span><span style="color: #0000ff">=&quot;#FFD1EBFB&quot;</span> <span style="color: #ff0000">Offset</span><span style="color: #0000ff">=&quot;0.694&quot;</span><span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum26">  26:</span>                             <span style="color: #0000ff">&lt;</span><span style="color: #800000">GradientStop</span> <span style="color: #ff0000">Color</span><span style="color: #0000ff">=&quot;White&quot;</span> <span style="color: #ff0000">Offset</span><span style="color: #0000ff">=&quot;0.116&quot;</span><span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum27">  27:</span>                         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">LinearGradientBrush</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum28">  28:</span>                     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">Grid.Background</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum29">  29:</span>                     <span style="color: #0000ff">&lt;</span><span style="color: #800000">StackPanel</span> <span style="color: #ff0000">Grid</span>.<span style="color: #ff0000">Column</span><span style="color: #0000ff">=&quot;0&quot;</span> <span style="color: #ff0000">Margin</span><span style="color: #0000ff">=&quot;2&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum30">  30:</span>                         <span style="color: #0000ff">&lt;</span><span style="color: #800000">Border</span> <span style="color: #ff0000">BorderBrush</span><span style="color: #0000ff">=&quot;Black&quot;</span> <span style="color: #ff0000">BorderThickness</span><span style="color: #0000ff">=&quot;3&quot;</span> <span style="color: #ff0000">Height</span><span style="color: #0000ff">=&quot;100&quot;</span> <span style="color: #ff0000">Width</span><span style="color: #0000ff">=&quot;100&quot;</span> <span style="color: #ff0000">CornerRadius</span><span style="color: #0000ff">=&quot;5&quot;</span> <span style="color: #ff0000">Margin</span><span style="color: #0000ff">=&quot;3&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum31">  31:</span>                             <span style="color: #0000ff">&lt;</span><span style="color: #800000">Image</span> <span style="color: #ff0000">Source</span><span style="color: #0000ff">=&quot;{Binding profile_image_url, Converter={StaticResource ToString}}&quot;</span> <span style="color: #ff0000">Margin</span><span style="color: #0000ff">=&quot;7&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum32">  32:</span>                         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">Border</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum33">  33:</span>                         <span style="color: #0000ff">&lt;</span><span style="color: #800000">TextBlock</span> <span style="color: #ff0000">Text</span><span style="color: #0000ff">=&quot;{Binding from_user}&quot;</span> <span style="color: #ff0000">HorizontalAlignment</span><span style="color: #0000ff">=&quot;Center&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum34">  34:</span>                         <span style="color: #0000ff">&lt;</span><span style="color: #800000">TextBlock</span> <span style="color: #ff0000">Text</span><span style="color: #0000ff">=&quot;{Binding created_at}&quot;</span> <span style="color: #ff0000">HorizontalAlignment</span><span style="color: #0000ff">=&quot;Center&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum35">  35:</span>                     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">StackPanel</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum36">  36:</span>                     <span style="color: #0000ff">&lt;</span><span style="color: #800000">TextBlock</span> <span style="color: #ff0000">Grid</span>.<span style="color: #ff0000">Column</span><span style="color: #0000ff">=&quot;1&quot;</span> <span style="color: #ff0000">Text</span><span style="color: #0000ff">=&quot;{Binding text}&quot;</span> <span style="color: #ff0000">VerticalAlignment</span><span style="color: #0000ff">=&quot;Top&quot;</span> <span style="color: #ff0000">TextWrapping</span><span style="color: #0000ff">=&quot;Wrap&quot;</span> <span style="color: #ff0000">Margin</span><span style="color: #0000ff">=&quot;8,30,0,0&quot;</span> <span style="color: #ff0000">FontSize</span><span style="color: #0000ff">=&quot;18.667&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum37">  37:</span>                 <span style="color: #0000ff">&lt;/</span><span style="color: #800000">Grid</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum38">  38:</span>             <span style="color: #0000ff">&lt;/</span><span style="color: #800000">Border</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum39">  39:</span>         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">DataTemplate</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum40">  40:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">ItemsPanelTemplate</span> <span style="color: #ff0000">x:Key</span><span style="color: #0000ff">=&quot;ItemsPanelTemplate1&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum41">  41:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">StackPanel</span> <span style="color: #ff0000">IsItemsHost</span><span style="color: #0000ff">=&quot;True&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum42">  42:</span>         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">ItemsPanelTemplate</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum43">  43:</span>     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">UserControl.Resources</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum44">  44:</span>     <span style="color: #0000ff">&lt;</span><span style="color: #800000">UserControl.Background</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum45">  45:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">LinearGradientBrush</span> <span style="color: #ff0000">EndPoint</span><span style="color: #0000ff">=&quot;0.5,1&quot;</span> <span style="color: #ff0000">StartPoint</span><span style="color: #0000ff">=&quot;0.5,0&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum46">  46:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">GradientStop</span> <span style="color: #ff0000">Color</span><span style="color: #0000ff">=&quot;#FFD6D6D6&quot;</span> <span style="color: #ff0000">Offset</span><span style="color: #0000ff">=&quot;0&quot;</span><span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum47">  47:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">GradientStop</span> <span style="color: #ff0000">Color</span><span style="color: #0000ff">=&quot;White&quot;</span> <span style="color: #ff0000">Offset</span><span style="color: #0000ff">=&quot;1&quot;</span><span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum48">  48:</span>         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">LinearGradientBrush</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum49">  49:</span>     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">UserControl.Background</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum50">  50:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum51">  51:</span>     <span style="color: #0000ff">&lt;</span><span style="color: #800000">UserControl.DataContext</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum52">  52:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">Binding</span> <span style="color: #ff0000">Path</span><span style="color: #0000ff">=&quot;TwitterViewModel&quot;</span> <span style="color: #ff0000">Source</span><span style="color: #0000ff">=&quot;{StaticResource VMLocator}&quot;</span><span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum53">  53:</span>     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">UserControl.DataContext</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum54">  54:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum55">  55:</span>     <span style="color: #0000ff">&lt;</span><span style="color: #800000">Grid</span> <span style="color: #ff0000">x:Name</span><span style="color: #0000ff">=&quot;LayoutRoot&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum56">  56:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">Grid.RowDefinitions</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum57">  57:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">RowDefinition</span> <span style="color: #ff0000">Height</span><span style="color: #0000ff">=&quot;Auto&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum58">  58:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">RowDefinition</span> <span style="color: #ff0000">Height</span><span style="color: #0000ff">=&quot;*&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum59">  59:</span>         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">Grid.RowDefinitions</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum60">  60:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">StackPanel</span> <span style="color: #ff0000">Orientation</span><span style="color: #0000ff">=&quot;Horizontal&quot;</span> <span style="color: #ff0000">Grid</span>.<span style="color: #ff0000">Row</span><span style="color: #0000ff">=&quot;0&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum61">  61:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">TextBox</span> <span style="color: #ff0000">Width</span><span style="color: #0000ff">=&quot;200&quot;</span> <span style="color: #ff0000">VerticalAlignment</span><span style="color: #0000ff">=&quot;Top&quot;</span> <span style="color: #ff0000">Text</span><span style="color: #0000ff">=&quot;{Binding search_text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}&quot;</span> <span style="color: #ff0000">Margin</span><span style="color: #0000ff">=&quot;5,0&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum62">  62:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">Button</span> <span style="color: #ff0000">Content</span><span style="color: #0000ff">=&quot;Search Twitter&quot;</span> <span style="color: #ff0000">VerticalAlignment</span><span style="color: #0000ff">=&quot;Top&quot;</span> <span style="color: #ff0000">Command</span><span style="color: #0000ff">=&quot;{Binding search}&quot;</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum63">  63:</span>         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">StackPanel</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum64">  64:</span>         <span style="color: #0000ff">&lt;</span><span style="color: #800000">ItemsControl</span> <span style="color: #ff0000">Grid</span>.<span style="color: #ff0000">Row</span><span style="color: #0000ff">=&quot;1&quot;</span> <span style="color: #ff0000">ItemsSource</span><span style="color: #0000ff">=&quot;{Binding responses}&quot;</span> <span style="color: #ff0000">ItemTemplate</span><span style="color: #0000ff">=&quot;{DynamicResource responsesItemTemplate1}&quot;</span> <span style="color: #ff0000">d:DataContext</span><span style="color: #0000ff">=&quot;{Binding Source={StaticResource Tweets}}&quot;</span> <span style="color: #ff0000">HorizontalContentAlignment</span><span style="color: #0000ff">=&quot;Stretch&quot;</span> <span style="color: #ff0000">ItemsPanel</span><span style="color: #0000ff">=&quot;{DynamicResource ItemsPanelTemplate1}&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum65">  65:</span>             <span style="color: #0000ff">&lt;</span><span style="color: #800000">ItemsControl.Template</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum66">  66:</span>                 <span style="color: #0000ff">&lt;</span><span style="color: #800000">ControlTemplate</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum67">  67:</span>                     <span style="color: #0000ff">&lt;</span><span style="color: #800000">ScrollViewer</span> <span style="color: #ff0000">x:Name</span><span style="color: #0000ff">=&quot;ScrollViewer&quot;</span> <span style="color: #ff0000">Padding</span><span style="color: #0000ff">=&quot;{TemplateBinding Padding}&quot;</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum68">  68:</span>                         <span style="color: #0000ff">&lt;</span><span style="color: #800000">ItemsPresenter</span> <span style="color: #0000ff">/&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum69">  69:</span>                     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">ScrollViewer</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum70">  70:</span>                 <span style="color: #0000ff">&lt;/</span><span style="color: #800000">ControlTemplate</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum71">  71:</span>             <span style="color: #0000ff">&lt;/</span><span style="color: #800000">ItemsControl.Template</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum72">  72:</span>         <span style="color: #0000ff">&lt;/</span><span style="color: #800000">ItemsControl</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum73">  73:</span>     <span style="color: #0000ff">&lt;/</span><span style="color: #800000">Grid</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF-->

    <pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &#39;Courier New&#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; font-size: 8pt; border-left-style: none; overflow: visible; padding-top: 0px"><span style="color: #606060" id="lnum74">  74:</span> <span style="color: #0000ff">&lt;/</span><span style="color: #800000">UserControl</span><span style="color: #0000ff">&gt;</span></pre>
<!--CRLF--></div>
</div>

<p>Just as in any MVVM application, all of the connections between the View and the ViewModel happen through binding.&#160; This is no exception.</p>

<p>The only C# in this entire application are in the <a href="http://houseofbilz.com/archives/2010/07/07/adventures-in-ruby-mvvm-bootstrapping-ruby/">bootstrapping of the ruby classes</a> (<strong>ViewModelLocator</strong>) and the <strong>StringConverter</strong> which helps bind the view to Ruby strings.</p>

<p>The code for these support classes can be found in the <a href="http://bitbucket.org/briangenisio/rubyvm/src">source code on BitBucket</a>.</p>

<p>This puts to rest my Ruby-based MVVM experiments.&#160; I learned a ton and I think there is a good foundation here for improvement if anyone wants to run with it. </p>

<p>For me, I will be moving on to some posts about Flex and ActionScript – another learning project for me to experiment with.&#160; Stay tuned :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2010-09-26 00:52:27</wp:post_date>
		<wp:post_date_gmt>2010-09-26 00:52:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adventures-in-ruby-mvvm-wrapping-it-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31375</wp:comment_id>
			<wp:comment_author><![CDATA[wyum-realestate.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.wyum-realestate.com/UserProfile/tabid/66/userId/372479/Default.aspx</wp:comment_author_url>
			<wp:comment_author_IP>181.189.146.25</wp:comment_author_IP>
			<wp:comment_date>2014-11-02 08:35:16</wp:comment_date>
			<wp:comment_date_gmt>2014-11-02 08:35:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>wyum-realestate.com...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28622</wp:comment_id>
			<wp:comment_author><![CDATA[lacrim corleone album telecharger]]></wp:comment_author>
			<wp:comment_author_email>barbaraburchett@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/pages/Lacrim-Corleone-Télécharger-Album/753905471343363</wp:comment_author_url>
			<wp:comment_author_IP>104.143.19.189</wp:comment_author_IP>
			<wp:comment_date>2014-08-22 13:56:30</wp:comment_date>
			<wp:comment_date_gmt>2014-08-22 13:56:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If some one wishes expert view concerning running a blog then i recommend him/her to go to see this web site, Keep 
up the pleasant job.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23271</wp:comment_id>
			<wp:comment_author><![CDATA[mark]]></wp:comment_author>
			<wp:comment_author_email>markvalentine34@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://learn-programming-quickly.blogspot.co.uk/2014/02/how-to-get-length-of-array-in-ruby.html</wp:comment_author_url>
			<wp:comment_author_IP>151.226.152.34</wp:comment_author_IP>
			<wp:comment_date>2014-02-03 14:32:05</wp:comment_date>
			<wp:comment_date_gmt>2014-02-03 14:32:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for a good article. This is especially good for me as I'm trying to learn Ruby at the moment but it all seems a little complex right now. Still its a lot easier than c++ lol]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1094</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Adventures-in-Ruby-MVVM-Wrapping-it-up</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2010-09-26 00:58:41</wp:comment_date>
			<wp:comment_date_gmt>2010-09-26 00:58:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Adventures in Ruby MVVM – Wrapping it up...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1096</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Adventures in Ruby MVVM – Wrapping it up « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/09/26/adventures-in-ruby-mvvm-wrapping-it-up/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-09-26 01:26:20</wp:comment_date>
			<wp:comment_date_gmt>2010-09-26 01:26:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Dianne Marsh, Brian Genisio and D, Larry King. Larry King said: Adventures in Ruby MVVM – Wrapping it up « Brian Genisio&#039;s House ... http://bit.ly/camYPb #SL #RIA [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32776</wp:comment_id>
			<wp:comment_author><![CDATA[hulu plus subscription 3 month]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.Pr7bookmarks.com/story.php?title=best-bbq-practice</wp:comment_author_url>
			<wp:comment_author_IP>5.255.81.41</wp:comment_author_IP>
			<wp:comment_date>2014-11-28 01:47:59</wp:comment_date>
			<wp:comment_date_gmt>2014-11-28 01:47:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>hulu plus subscription 3 month...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32385</wp:comment_id>
			<wp:comment_author><![CDATA[chopard blue diamond engagement ring]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mkpe.sk/wp-trackback.php?p=391</wp:comment_author_url>
			<wp:comment_author_IP>5.255.81.186</wp:comment_author_IP>
			<wp:comment_date>2014-11-20 02:37:13</wp:comment_date>
			<wp:comment_date_gmt>2014-11-20 02:37:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>chopard blue diamond engagement ring...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32403</wp:comment_id>
			<wp:comment_author><![CDATA[Benito]]></wp:comment_author>
			<wp:comment_author_email>doris_nunn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://youtube.com</wp:comment_author_url>
			<wp:comment_author_IP>192.200.24.49</wp:comment_author_IP>
			<wp:comment_date>2014-11-20 10:14:12</wp:comment_date>
			<wp:comment_date_gmt>2014-11-20 10:14:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for ones marvelous posting! I genuinely enjoyed reading it, you aree a great author.I will remember to bookmarkk your blog and 
will come back someday. I want to encourage you to continue your 
great work, have a nice holiday weekend!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30407</wp:comment_id>
			<wp:comment_author><![CDATA[amoralanaturaleza.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://amoralanaturaleza.com/MyrtleAbn</wp:comment_author_url>
			<wp:comment_author_IP>5.175.180.229</wp:comment_author_IP>
			<wp:comment_date>2014-10-16 18:26:57</wp:comment_date>
			<wp:comment_date_gmt>2014-10-16 18:26:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>amoralanaturaleza.com...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30299</wp:comment_id>
			<wp:comment_author><![CDATA[cheap platinum diamond rings uk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://darbar.net/CVanwinkl</wp:comment_author_url>
			<wp:comment_author_IP>5.157.36.182</wp:comment_author_IP>
			<wp:comment_date>2014-10-14 00:17:48</wp:comment_date>
			<wp:comment_date_gmt>2014-10-14 00:17:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cheap platinum diamond rings uk...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30461</wp:comment_id>
			<wp:comment_author><![CDATA[social-bookmark.us]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://social-bookmark.us/story.php?title=maytag-dishwasher-repair</wp:comment_author_url>
			<wp:comment_author_IP>5.196.106.209</wp:comment_author_IP>
			<wp:comment_date>2014-10-17 15:19:35</wp:comment_date>
			<wp:comment_date_gmt>2014-10-17 15:19:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>social-bookmark.us...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31413</wp:comment_id>
			<wp:comment_author><![CDATA[chocolate chocolate diamond ring size 8]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://communicatez.com/index.php?do=/blog/12500/diamond-ring-purchase-winning-at-the-diamond-game/</wp:comment_author_url>
			<wp:comment_author_IP>212.179.87.186</wp:comment_author_IP>
			<wp:comment_date>2014-11-03 01:15:34</wp:comment_date>
			<wp:comment_date_gmt>2014-11-03 01:15:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>chocolate chocolate diamond ring size 8...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6922</wp:comment_id>
			<wp:comment_author><![CDATA[Bill Dines]]></wp:comment_author>
			<wp:comment_author_email>wdines@longview.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.0.213.143</wp:comment_author_IP>
			<wp:comment_date>2011-02-04 14:59:35</wp:comment_date>
			<wp:comment_date_gmt>2011-02-04 14:59:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good stuff.  I know very little about Ruby but am investigating combining a Dynamic Language (Ruby or Python or both) with silverlight to allow non-programmers (or at least lower skilled programmers) to easily create simple silverlight UI's to extend our product.  I'd dismissed Ruby as there was no VS support, but I notice VS tools are now available in V1.1.1 so it is now a viable option.

At the moment I am using a C# viewmodel (utilising binding to the C# vm's indexer to provide dynamic capability)  but had wondered about whether I could have a pure Dynamic Language VM.  It seems I can, so these posts are very helpful :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29050</wp:comment_id>
			<wp:comment_author><![CDATA[free games]]></wp:comment_author>
			<wp:comment_author_email>angela_daves@fmguy.com</wp:comment_author_email>
			<wp:comment_author_url>https://kdp.amazon.com/community/profile.jspa?userID=434703</wp:comment_author_url>
			<wp:comment_author_IP>104.143.19.236</wp:comment_author_IP>
			<wp:comment_date>2014-09-12 08:14:22</wp:comment_date>
			<wp:comment_date_gmt>2014-09-12 08:14:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes! Finally something about used video games for sale.


Feel free to surf to my web site <a href="https://kdp.amazon.com/community/profile.jspa?userID=434703" rel="nofollow">free games</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30274</wp:comment_id>
			<wp:comment_author><![CDATA[simply click the following page]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://Www.meclub.com/content/no-set-trend-womens-fashionable-clothing-purchase-clothes-suiting-your-style</wp:comment_author_url>
			<wp:comment_author_IP>92.222.231.132</wp:comment_author_IP>
			<wp:comment_date>2014-10-13 14:37:03</wp:comment_date>
			<wp:comment_date_gmt>2014-10-13 14:37:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>simply click the following page...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80304</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.ninjavouchers.co.uk/vouchers/expedia/]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.co.uk/vouchers/expedia/</wp:comment_author_url>
			<wp:comment_author_IP>107.155.136.226</wp:comment_author_IP>
			<wp:comment_date>2016-02-04 14:14:07</wp:comment_date>
			<wp:comment_date_gmt>2016-02-04 14:14:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>http://www.ninjavouchers.co.uk/vouchers/expedia/...</strong>

Adventures in Ruby MVVM - Wrapping it up « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Training in Silverlight &amp; Flex</title>
		<link>http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</link>
		<pubDate>Sun, 24 Oct 2010 00:35:46 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When I joined <a href="http://www.srtsolutions.com/">SRT Solutions</a> a while back, one of the primary reasons for the move was to get exposed to new ideas and technologies. Although my first project at SRT didn’t stray much from my <a href="http://www.silverlight.net/">Silverlight</a> expertise – an MVVM-driven WPF application – my second project is taking me in a slightly different direction.</p>  <p>For a couple of months now, I have been developing an <a href="http://www.adobe.com/products/flex/">Adobe Flex</a> project. When I tell people this, I often get jokes about being a “defector” or a “designer” (or both). If I don’t get a joke, people often cringe. I’ll be completely honest: I was a bit afraid to get involved at first too.</p>  <p>You see, within the Microsoft developer community, Adobe and Flex don’t have a great reputation. It is almost as bad as the (unfair) reputation Apple and Mac developers have. On both accounts, I find this to be unfortunate. Why can’t we all learn from each other and grow as a larger developer community? Why can’t we all get along?</p>  <h3>A Bold Statement</h3>  <p>I am ready to say it: <strong>Flex 4 has a lot to offer</strong>. I’ll take it a step further: <strong>Flex does some things better than Silverlight. </strong>That is not to say that I am leaving Silverlight. Far from it. In fact, I am ready to celebrate diversity. I want to help other developers do the same.</p>  <p>I am making this the first of MANY posts where I will attempt to bridge the gap between the two technologies. It won’t be hard to do – they are strikingly similar. I will do my best to present objective comparisons of the two technologies both big and small in scope. You won’t find me declaring one better than the other. Instead, you will read posts that will help Silverlight developers work in Flex as well as Flex developers in SIlverlight.</p>  <p>In addition to this blog series, I will be giving two public talks on the differences:</p>  <ul>   <li>11/18/10 -- MI SIlverlight Users Group – <a href="http://communitymegaphone.com/ShowEvent.aspx?EventID=3428">Cross-Training in Silverlight and Flex</a> </li>    <li>1/13-14/11 – CodeMash – <a href="http://codemash.org/Sessions#Every+Thing+You+Always+Wanted+to+Know+About+Flex+*+But+Were+Afraid+to+Ask">Every Thing You Always Wanted to Know About Flex * But Were Afraid to Ask</a> </li> </ul>  <p>A taste of some posts on Silverlight and Flex to expect in the near future:</p>  <ul>   <li><a href="http://houseofbilz.com/archives/2010/10/26/cross-training-in-silverlight-flex-platform-overview/">A Platform Overview</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/10/30/cross-training-in-silverlight-flex-the-future-of-rias/">The Future of RIAs</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/">XAML vs MXML</a> </li>    <li><a href="http://houseofbilz.com/archives/2010/12/17/cross-training-in-silverlight-flex-cclr-vs-actionscript3avm-part-1/">C#/CLR vs ActionScript/AVM (Part 1)</a> </li>    <li>C#/CLR vs ActionScript/AVM (Part 2) </li>    <li><a href="http://houseofbilz.com/archives/2010/12/29/cross-training-in-silverlight-flexmvvm-vs-presentation-model/">MVVM vs Presentation Model</a> </li>    <li><a href="http://houseofbilz.com/archives/2011/01/24/cross-training-in-silverlight-flexdata-binding/">Data Binding</a></li>    <li>Visualizing Data </li>    <li>Backend Service Consumption </li>    <li>Visual State Management </li>    <li>Testing/Mocking Frameworks </li>    <li>Third Party Frameworks </li>    <li>Design Tools </li>    <li>Designer/Developer Workflow </li>    <li>Deployment Story </li>    <li>Animations </li>    <li>Transitions </li>    <li>Re-Templating vs Skinning </li>    <li>Styling </li>    <li></li>    <li></li> </ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2010-10-24 00:35:46</wp:post_date>
		<wp:post_date_gmt>2010-10-24 00:35:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-training-in-silverlight-vs-flex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cross-training"><![CDATA[Cross-Training]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>79925</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.vouchercodeslug.co.uk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.vouchercodeslug.co.uk/homebase-codes</wp:comment_author_url>
			<wp:comment_author_IP>23.94.154.41</wp:comment_author_IP>
			<wp:comment_date>2015-12-28 14:38:48</wp:comment_date>
			<wp:comment_date_gmt>2015-12-28 14:38:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>http://www.vouchercodeslug.co.uk...</strong>

Cross-Training in Silverlight &amp; Flex « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2039</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight and Flex &ndash; XAML vs MXML &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-11-13 04:20:06</wp:comment_date>
			<wp:comment_date_gmt>2010-11-13 04:20:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Cross-Training in Silverlight and Flex [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1690</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Cross-Training in Silverlight &amp; Flex « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-10-24 01:19:43</wp:comment_date>
			<wp:comment_date_gmt>2010-10-24 01:19:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Brian Genisio, Larry King. Larry King said: Cross-Training in Silverlight vs Flex « Brian Genisio&#039;s House of Bilz http://bit.ly/9chEaC #SL #RIA [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1813</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &ndash; The Future of RIAs &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/30/cross-training-in-silverlight-flex-the-future-of-rias/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 01:31:40</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 01:31:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Cross-Training in Silverlight &amp; Flex [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3115</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &#8212; C#/CLR vs ActionScript3/AVM Part 1 &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/12/17/cross-training-in-silverlight-flex-cclr-vs-actionscript3avm-part-1/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-12-17 02:59:26</wp:comment_date>
			<wp:comment_date_gmt>2010-12-17 02:59:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Cross-Training in Silverlight &amp; Flex [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5734</wp:comment_id>
			<wp:comment_author><![CDATA[CodeMash Slides and Demos &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/01/11/codemash-slides-and-demos/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2011-01-11 05:20:09</wp:comment_date>
			<wp:comment_date_gmt>2011-01-11 05:20:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This Friday, I will be presenting at CodeMash for the second year in a row.&#160; This year, my topic is Everything You Always Wanted to Know About Flex * But Were Afraid to Ask.&#160; It is really just a presentation form of my current series – Cross-Training in Silverlight and Flex. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6745</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex&ndash;Data Binding &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/01/24/cross-training-in-silverlight-flexdata-binding/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2011-01-25 02:45:55</wp:comment_date>
			<wp:comment_date_gmt>2011-01-25 02:45:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Cross-Training in SIlverlight and Flex [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6970</wp:comment_id>
			<wp:comment_author><![CDATA[Justin J. Moses]]></wp:comment_author>
			<wp:comment_author_email>justinjmoses@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://about.me/justinj</wp:comment_author_url>
			<wp:comment_author_IP>205.228.53.11</wp:comment_author_IP>
			<wp:comment_date>2011-02-10 16:03:17</wp:comment_date>
			<wp:comment_date_gmt>2011-02-10 16:03:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great to see another platform agnostic developer ready to write about his experiences.

Kudos to you Brian, looking forward to reading these and future posts.

BTW - I went the other way myself, and wrote a bunch of articles for Flex devs trying to understand Silverlight (&amp; WPF).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32671</wp:comment_id>
			<wp:comment_author><![CDATA[planetnetworkmc.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://planetnetworkmc.com/index.php?members/bcpa.79/</wp:comment_author_url>
			<wp:comment_author_IP>81.4.127.86</wp:comment_author_IP>
			<wp:comment_date>2014-11-25 19:53:11</wp:comment_date>
			<wp:comment_date_gmt>2014-11-25 19:53:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>planetnetworkmc.com...</strong>

Cross-Training in Silverlight &amp; Flex « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6981</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.72.133</wp:comment_author_IP>
			<wp:comment_date>2011-02-11 15:26:40</wp:comment_date>
			<wp:comment_date_gmt>2011-02-11 15:26:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks great, Justin!  Can't wait to read everything you have written on the subject :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1745</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &ndash; Platform Overview &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/26/cross-training-in-silverlight-flex-platform-overview/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-10-26 18:39:44</wp:comment_date>
			<wp:comment_date_gmt>2010-10-26 18:39:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] &laquo; Cross-Training in Silverlight &amp; Flex [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4899</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex&ndash;MVVM vs Presentation Model &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/12/29/cross-training-in-silverlight-flexmvvm-vs-presentation-model/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2011-01-03 11:45:50</wp:comment_date>
			<wp:comment_date_gmt>2011-01-03 11:45:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] More Cross-Training in SIlverlight and Flex [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Training in Silverlight &amp; Flex &#8211; Platform Overview</title>
		<link>http://houseofbilz.com/archives/2010/10/26/cross-training-in-silverlight-flex-platform-overview/</link>
		<pubDate>Tue, 26 Oct 2010 18:39:38 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2010/10/26/cross-training-in-silverlight-flex-platform-overview/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More <a href="http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/">Cross-Training in SIlverlight &amp; Flex</a></p>  <p><a href="http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-Platform-Overview" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F10%2F26%2Fcross-training-in-silverlight-flex-platform-overview%2F" /></a> </p>  <p>This is the second article in which I will compare the technical details between Silverlight and Flex. Before I jump into the nitty-gritty of the two, I thought I would give a general overview of the platforms that are Silverlight and Flex/Flash/Air. Understand these terms and the tools up front will make it much easier to cross-train on the two technologies.</p>  <div style="background-color: #e8f3ff">   <h3>The Silverlight Platform</h3>    <p>Microsoft created <a href="http://www.silverlight.net/">Silverlight</a> as a small platform for developing Rich Internet Applications (<a href="http://en.wikipedia.org/wiki/Rich_Internet_application">RIAs</a>) on the desktop, browser and mobile phone. Although it was inspired by the <a href="http://www.microsoft.com/net/">.Net</a> platform and the Windows Presentation Foundation (<a href="http://msdn.microsoft.com/en-us/library/aa970268.aspx">WPF</a>), Silverlight stands alone. In other words, users do not need to download the entire .Net runtime to execute Silverlight applications. They only need the small (about 4 MB) Silverlight player.&#160; </p>    <p>As <a href="http://www.adobe.com/products/flex/">Flex</a> is a framework that sits on top of the <a href="http://www.adobe.com/products/flash/">Flash</a> platform, Silverlight is both – a runtime and an SDK. Silverlight applications can be developed to run “out of browser” on the desktop (similar to <a href="http://www.adobe.com/products/air/">Adobe Air</a>) or in-browser (similar to Flash Player). When run out of the browser (OOB), the application has access to extra APIs for file access and other system-level functions. Silverlight is also the primary application development platform for the <a href="http://www.microsoft.com/windowsphone">Windows Phone 7</a>. </p>    <h4></h4>    <h4>Developer Story</h4>    <p>Much like Flex, Silverlight employs a declarative UI mechanism (<a href="http://en.wikipedia.org/wiki/XAML">XAML</a>) for defining the view of an application. Unlike Flex, Silverlight developers have the choice of many languages to integrate in their “code-behind” such as <a href="http://en.wikipedia.org/wiki/C_Sharp_(programming_language)">C#</a>, <a href="http://en.wikipedia.org/wiki/Visual_Basic_.NET">Visual Basic.Net</a>, <a href="http://en.wikipedia.org/wiki/F_Sharp_(programming_language)">F#</a>, <a href="http://en.wikipedia.org/wiki/Ironruby">IronRuby</a> and <a href="http://en.wikipedia.org/wiki/Ironpython">IronPython</a>. The majority of Silverlight developers use C#.</p>    <h4>IDEs</h4>    <p>Most Silverlight applications are developed using a version of <a href="http://www.microsoft.com/visualstudio/en-us/visual-studio-2010-launch?WT.mc_id=SEARCH&amp;WT.srch=1">Visual Studio</a>, which is an <a href="http://en.wikipedia.org/wiki/Integrated_development_environment">IDE</a> similar to <a href="http://www.adobe.com/products/flashbuilder/">Flash Builder</a>.&#160; Visual Studio comes in many flavors. <a href="http://www.microsoft.com/web/gallery/install.aspx?appid=silverlight4tools;silverlight4toolkit;riaservicestoolkit">Visual Web Developer Express</a> is free and great for getting started. Most likely, as you get more involved with Silverlight, you will need to migrate to a paid version (Professional, Premium, Ultimate or Test). Although highly recommended, you do not need to use Visual Studio to develop Silverlight applications – the <a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=b3deb194-ca86-4fb6-a716-b67c2604a139&amp;displaylang=en">free SDK</a> and command-line compilers are enough to build applications with. The open-source <a href="http://monodevelop.com/">MonoDevelop</a> is also an option for developing Silverlight applications. It is worth noting that Visual Studio is only available for Windows. Mac developers have the tools to develop <a href="http://www.eclipse4sl.org/">Silverlight applications using Eclipse</a> but this rarely happens.</p>    <h4></h4>    <h4>SDKs and Toolkits</h4>    <p>Unlike Flex, the <a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=b3deb194-ca86-4fb6-a716-b67c2604a139&amp;displaylang=en">Silverlight SDK</a> is not open-source but it is free. It includes the minimum tools necessary to build Silverlight applications. Very often, build servers and <a href="http://en.wikipedia.org/wiki/Continuous_integration">CI</a> servers use the SDK alone, to avoid purchasing a license to Visual Studio on the server. Although the SDK is not open-source, the Silverlight Toolkit (produced by Microsoft) is. The <a href="http://silverlight.codeplex.com/">Silverlight Toolkit</a> is an optional set of libraries that includes many add-ons such as rich controls, extended skinning and an in-browser test suite (<a href="http://code.msdn.microsoft.com/silverlightut">Silverlight Unit Tester</a>).</p>    <h4>Design</h4>    <p>Visual Studio has an integrated graphical designer, but it is limited. Most people use <a href="http://www.microsoft.com/expression/products/Blend_Overview.aspx">Expression Blend</a> to design, style and skin the UI. Expression Blend supports the import of assets from <a href="http://www.adobe.com/products/photoshop/photoshop/">Photoshop</a> and <a href="http://www.adobe.com/products/illustrator/">Illustrator</a>. Expression Blend works on existing Visual Studio projects in parallel. This aids in a very tight integration between the designer and the developer. Flex cannot support this workflow very well. Even with the new version of <a href="http://www.adobe.com/products/flashcatalyst/">Catalyst</a>, projects are exported between the designer and developer – as opposed to the parallel workflow that Blend enables. Expression Blend only works in Windows.</p>    <h4>Operating System Support</h4>    <p>Silverlight does not have the same operating system penetration as Flex/Flash. Microsoft has fully committed to Windows and OSX for the browser and OOB capabilities. Silverlight does not, however, work in Linux. A separate project, dubbed <a href="http://www.mono-project.com/Moonlight">Moonlight</a>, aims to run Silverlight applications in Linux. This project is headed by the Mono team and it is perpetually behind the latest release of the Silverlight platform. Silverlight also runs as the primary application platform for the <a href="http://www.microsoft.com/windowsphone">Windows Phone 7</a> and is being developed for <a href="http://www.symbian.org/">Symbian</a>, but it does not run on <a href="http://www.android.com/">Android</a>, <a href="http://developer.palm.com/">WebOS</a>, or <a href="http://en.wikipedia.org/wiki/IOS_(Apple)">iOS</a> at this time. (possibly, in the future?)</p>    <h4>Getting Started</h4>    <p>The easiest way to get started with Silverlight is at <a href="http://www.silverlight.net/getstarted/">Silverlight.net</a>. From there, you can download all of the tools necessary to write applications in SIlverlight (Visual Web Developer, Expression Blend trial, Silverlight toolkit, etc)</p>    <p>&#160;</p> </div>  <div style="background-color: #ffe8e8">   <h3>The Flex/Flash/Air Platform</h3>    <p>In my opinion, the branding of Flex/Flash/Air can be confusing. I will attempt to make it simple. <a href="http://www.adobe.com/products/flashplayer/">Flash</a> is the platform.&#160; <a href="http://www.adobe.com/products/flex/">Flex</a> is the framework. <a href="http://www.adobe.com/products/air/">Air</a> is Flex/Flash on the desktop (and devices outside the browser). In other words, Flash is the platform we all know and love. It has existed for a long time (<a href="http://en.wikipedia.org/wiki/Adobe_Flash">since at least 1996</a>) and has a rich history. Flash, by itself, is not very good at writing Rich Internet Applications (<a href="http://en.wikipedia.org/wiki/Rich_Internet_application">RIAs</a>) – it is very good at vector animation. Flex was introduced as an SDK to sit on top of Flash to enable application development. Air was introduced to allow Flex applications to run on the desktop.</p>    <p>If you were to compare the Adobe technology to <a href="http://www.silverlight.net">Silverlight</a>, Flex/Flash is to Silverlight as Air is to Silverlight Out-of-Browser.</p>    <h4>Developer Story</h4>    <p>Much like Silverlight, Flex employs a declarative UI mechanism (<a href="http://en.wikipedia.org/wiki/MXML">MXML</a>) for defining the view of an application. Unlike Silverlight, Flex developers only have one language choice available to them – <a href="http://en.wikipedia.org/wiki/ActionScript">ActionScript</a>. ActionScript is an <a href="http://en.wikipedia.org/wiki/ECMAScript">ECMAScript</a>-like language, similar to <a href="http://en.wikipedia.org/wiki/Javascript">Javascript</a> but with optional <a href="http://en.wikipedia.org/wiki/Static_typing#Static_typing">static typing</a>, <a href="http://en.wikipedia.org/wiki/Class_(computer_science)">classes</a> and <a href="http://en.wikipedia.org/wiki/Interface_(computer_science)">interfaces</a>. Developers can also enable legacy <a href="http://en.wikipedia.org/wiki/C_(programming_language)">C</a> and <a href="http://en.wikipedia.org/wiki/C%2B%2B">C++</a> code to run in the “ActionScript Virtual Machine” by using a currently in-development technology called <a href="http://labs.adobe.com/technologies/alchemy/">Adobe Alchemy</a>.</p>    <h4>IDEs</h4>    <p>Developers tend to use <a href="http://www.adobe.com/products/flashbuilder/">Flash Builder</a> as the IDE for producing Flex applications. Unfortunately, there are not any free versions of Flash Builder (there is a free 60 day trial). Flex developers also have the option to use <a href="http://www.jetbrains.com/idea/">IDEA Ultimate by JetBrains</a>, which is also a paid product. Unlike SIlverlight, these IDEs work in WIndows, Mac or Linux. Like Silverlight, the SDK is free and does not require an IDE to develop with. Other options are <a href="http://www.flashdevelop.org/">FlashDevelop</a> and <a href="http://www.ensemble.com/products/tofino.shtml">Tofino</a> – a <a href="http://www.microsoft.com/visualstudio/en-us/visual-studio-2010-launch?WT.mc_id=SEARCH&amp;WT.srch=1">Visual Studio</a> plug-in for Flex development.</p>    <h4>SDKs and Toolkits</h4>    <p>The Silverlight SDK is not open source. The <a href="http://www.adobe.com/products/flex/">Flex SDK</a>, however, is open source. It is a very simple zip-deployed download that can be copied anywhere you need. This makes integration with build and CI servers a cinch. By default, you use <a href="http://en.wikipedia.org/wiki/Apache_Ant">Ant</a> for the build system, but any build manager. Similar to the <a href="http://silverlight.codeplex.com/">Silverlight Toolkit</a>, <a href="http://code.google.com/p/flexlib/">flexlib</a> is a suite of value-added controls that you can bring into your solution.</p>    <h4>Design</h4>    <p>Since Flex is an Adobe product, the primary design environment is <a href="http://www.adobe.com/products/photoshop/photoshop/">Photoshop</a> (<a href="http://en.wikipedia.org/wiki/Raster_graphics">raster</a> art) and <a href="http://www.adobe.com/products/illustrator/">Illustrator</a> (<a href="http://en.wikipedia.org/wiki/Vector_graphics">vector</a> art). A third tool, <a href="http://www.adobe.com/products/flashcatalyst/">Catalyst</a>, is added as a bridge between the art tools and Flash Builder. Catalyst allows you to produce skins and styles using the Flex parts model. In the current release, the workflow is one way – Catalyst exports to a Flash Builder project. In future versions, Flash Builder will be capable of exporting back to Catalyst for a more bi-directional workflow. As far as I know, Catalyst does not support the parallel designer-developer workflow that <a href="http://www.microsoft.com/expression/products/Blend_Overview.aspx">Expression Blend</a> does.&#160; </p>    <h4>Operating System Support</h4>    <p>Flex has a rich set of operating system support. Flex already works in Flash (browser) on Windows, OSX, Linux and <a href="http://www.android.com/">Android</a>. In the near future, Air applications will also be deployable to <a href="http://en.wikipedia.org/wiki/IOS_(Apple)">iOS</a>, <a href="http://na.blackberry.com/eng/playbook-tablet//">Blackberry</a>, Android, <a href="http://www.microsoft.com/windowsphone">Windows Phone 7</a> and <a href="http://www.google.com/tv/">GoogleTV</a> in addition to Windows, OSX and Linux. The list is so exhaustive, I am probably missing some. In future versions of Flex, Adobe has strategies for managing different form factors. <a href="http://www.adobe.com/devnet/air/articles/air25_whatsnew.html">Air 2.5</a> will include all of the APIs for mobile devices that you would expect (GPS, accelerometer, multi-touch, etc).</p>    <h4>Getting Started</h4>    <p>The easiest way to get started is to go to the <a href="http://www.adobe.com/products/flex/">Flex product site</a> and download the 60 day <a href="http://www.adobe.com/products/flashbuilder/">Flash Builder demo</a>. Adobe also has demos of Catalyst, Photoshop and Illustrator.</p> </div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2010-10-26 18:39:38</wp:post_date>
		<wp:post_date_gmt>2010-10-26 18:39:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-training-in-silverlight-flex-platform-overview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cross-training"><![CDATA[Cross-Training]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="platform"><![CDATA[Platform]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1747</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-Platform-Overview</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2010-10-26 19:37:13</wp:comment_date>
			<wp:comment_date_gmt>2010-10-26 19:37:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cross-Training in Silverlight &amp; Flex – Platform Overview...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1750</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Cross-Training in Silverlight &amp; Flex – Platform Overview « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/10/26/cross-training-in-silverlight-flex-platform-overview/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-10-26 21:40:35</wp:comment_date>
			<wp:comment_date_gmt>2010-10-26 21:40:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Dianne Marsh, Brian Genisio. Brian Genisio said: Blogged: Cross-Training in #Silverlight &amp; #Flex -- Platform Overview -- http://bit.ly/c6DGlE #fb [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7011</wp:comment_id>
			<wp:comment_author><![CDATA[Justin J. Moses]]></wp:comment_author>
			<wp:comment_author_email>justinjmoses@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://about.me/justinj</wp:comment_author_url>
			<wp:comment_author_IP>199.89.103.10</wp:comment_author_IP>
			<wp:comment_date>2011-02-15 17:36:07</wp:comment_date>
			<wp:comment_date_gmt>2011-02-15 17:36:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I love this series already Brian - seriously. Great to read your thoughts from the other side (let's call it the Dark side for now :).

Two extra points I might have added here are the choice of server side platforms and typical developer frameworks. 

On the former, obviously Flex errs towards Java - with BlazeDS and LCDS supported by Adobe. Although I personally have used AMF extensively with .NET (via WebORB and FluorineFx) - which is a nice way of sharing remote objects between Flex and .NET. Obviously Silverlight can be hosted on Apache, but what about communicating directly with Java or PHP on the backend? 

As to the latter, there is obv a lot more discussion within Flex on micro-architectures - Cairngorm, Parsley, PureMVC, Mate, Swiz, et al - than in Silverlight. I personally believe this is due to the flexibility of the Flex data-binding system (which also tends to be misused due to all the codegen done in the compiler behind the scenes). Silverlight (and WPF for that matter) seems to focus purely on the MVVM and MVP patterns without requiring external plugins - though I believe that is partly due to .NET devs strong preference on MS-provided solutions first and foremost. That said, how pervasive is Prism in Silverlight these days? 

I know you're planning to cover each with separate articles, and I look forward to each of these. 

Justin]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1746</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-10-26 18:41:00</wp:comment_date>
			<wp:comment_date_gmt>2010-10-26 18:41:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Adventures in Ruby MVVM &ndash; Wrapping it up Cross-Training in Silverlight &amp; Flex &ndash; Platform Overview [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Training in Silverlight &amp; Flex &#8211; The Future of RIAs</title>
		<link>http://houseofbilz.com/archives/2010/10/30/cross-training-in-silverlight-flex-the-future-of-rias/</link>
		<pubDate>Sat, 30 Oct 2010 01:31:36 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2010/10/30/cross-training-in-silverlight-flex-the-future-of-rias/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More <a href="http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/">Cross-Training in Silverlight &amp; Flex</a></p>  <p><a href="http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-The-Future-of-RIAs" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F10%2F30%2Fcross-training-in-silverlight-flex-the-future-of-rias%2F" /></a></p>  <p>What a week for RIAs!&#160; The first half of the week was consumed by the <a href="http://max.adobe.com/">Adobe MAX</a> conference where we got to see the future of Flex.&#160; The second half of the week was consumed by the <a href="http://player.microsoftpdc.com/session">Microsoft PDC</a> conference where many of us were hoping to hear about the future of Silverlight.&#160; Unfortunately, the PDC conference was noticeably absent of Silverlight futures.&#160; This caused a ton of speculation about the future of Silverlight.&#160; </p>  <p>One of the most prominent articles of the day was written by the prolific technical journalist, Mary-Jo Foley – <a href="http://www.zdnet.com/blog/microsoft/microsoft-our-strategy-with-silverlight-has-shifted/7834">Microsoft: Our strategy with Silverlight has shifted.</a>&#160; This article cause a huge uproar which then drew many people to weigh in on the topic (Is Silverlight dead?&#160; Is Microsoft abandoning SIlverlight?&#160; Is this the death of the RIA framework?).&#160; Many blog posts have come out with plenty of opinions, but I think I have a different perspective.&#160; One that looks further into the future and allows for peaceful co-existence between Silverlight, Flex and HTML5.</p>  <p><font color="#ff0000">What I am about to write is purely speculative.&#160; I am making predictions. Predictions are very often wrong.&#160; Still, I think what I have to say adds to the debate.</font></p>  <h3><font color="#000000" face="Arial">Let’s Stop Thinking of Flex and SIlverlight as Separate Platforms</font></h3>  <p>The browser is a platform.&#160; With the introduction of HTML5 standards, we have all of the primitive structures that are required for a client platform.&#160; The browser is ALSO a platform that lives on every web-enabled device we own.&#160; Because of this, many have made the brazen statement: “We don’t need RIA technologies (Flex and Silveright specifically).&#160; All we need is HTML5 and Javascript”.&#160; </p>  <p>If you think of Flex and Silverlight as separate platforms, I think I might agree with that.&#160; The browser is everywhere.&#160; Flash and SIlverlight are not.&#160; But is that REALLY where we are headed?&#160; Or did the RIA plug-in come into existence because we needed to shoehorn something before wide-spread adoption of HTML5?&#160; What if Flex and Silverlight were frameworks that sit on top of the browser platform instead of being their own platforms that compete with the browser?</p>  <p>Put another way, I will ask this question: “Why do we need Silverlight and Flash plug-ins?”&#160; This is a serious question.&#160; Now that we have all of the primitive components necessary in the browser to do everything we need, why can’t Flex and Silverlight compile down to HTML5 and Javascript?</p>  <p>Sound crazy?&#160; I’ve been accused of this idea being crazy… but I don’t think it is.&#160; Microsoft proved that managed C# can be compiled down to Javascript (as opposed to byte code) over two years ago with their <a href="http://en.wikipedia.org/wiki/Microsoft_Live_Labs_Volta">Volta experiment</a>.&#160; Google has done similar things with Java.&#160; What is to say that Silverlight IL or Flex ActionScript bytecode can’t be compiled to Javascript?&#160; Continue with that reasoning and XAML or MXML (the declarative UIs of the RIA platforms) can be translated to the DOM.&#160; All of the control sets can be delivered as Javascript libraries that build upon existing HTML controls, or build up new ones with the canvas.&#160; <strong>Everything can run natively on the HTML5 engine.&#160; Get rid of the plug-ins!</strong></p>  <h3>Silverlight and Flex as Frameworks</h3>  <p>In a plug-in free world, we are left to develop in any language and any framework we want.&#160; Silverlight and Flex become higher-level abstractions on the virtual machine that is HTML5.&#160; Developers are given choices – not just HTML and Javascript, but XAML and C#, MXML and ActionScript, HAML and Ruby, FooMark and MyLang, whatever.&#160; You won’t have to be confined to a single markup, control set and programming language.</p>  <p>In other words, if we start to look at the browser like a virtual machine, our RIA possibilities are endless.&#160; What if HTML6 defined a bytecode format that the frameworks compiled to?&#160; Skip the Javascript.&#160; We can follow this idea to many conclusions.</p>  <blockquote>   <p><font color="#0000ff"><strong>EDIT:</strong> To qualify my statements further, I want to be clear: I don’t expect Silverlight and Flex projects will translate directly to HTML5/JS.&#160; I think that Silverlight and Flex frameworks will become native browser frameworks (System.Core.js, or Flex.js for example).&#160; Silverlight and Flex applications will run with the frameworks in the browser without a plug-in.&#160; Doing so allows for these frameworks to be portable to all platforms (phones, tablets, set-tops, browsers and desktops).&#160; See my conversation with Michael Washington in the comments for more on this. </font></p> </blockquote>  <h3>So, is Silverlight Dead?</h3>  <p>I don’t think so.&#160; I really believe that SIlverlight is shifting towards being a development framework, instead of a development platform.&#160; Look at the WIndows Phone 7, for example.&#160; The phone OS is the platform.&#160; Silverlight is the framework.&#160; Adobe is certainly looking at it this way.&#160; They have already created a tool that will compile Air apps down to the native iOS (iPhone) platform.&#160; In addition, they have announced that Air will be available on every device that we care about (iPhone, Android, Blackberry, WebOS, GoogleTV, etc).&#160; I <strong>fully</strong> expect Silverlight to do the same.</p>  <p>Somebody on Twitter said “They didn’t mention me at the PDC. Does that mean I’m dead?”.&#160; A witty way to say it, but I think it rings true.&#160; They didn’t mention Silverlight specifically, probably because they were focusing on other things.&#160; They are taking a huge gamble on the phone, and I think it is necessary for the future of SIlverlight as a framework.&#160; We will hear more about SIlverlight.&#160; I am sure of it.&#160; <strong>My take: SIlverlight isn’t dead.&#160; It is only evolving.</strong></p>  <p>What do you think?&#160; Am I crazy? (I might be) If so, tell me why.&#160; </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2010-10-30 01:31:36</wp:post_date>
		<wp:post_date_gmt>2010-10-30 01:31:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-training-in-silverlight-flex-the-future-of-rias</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cross-training"><![CDATA[Cross-Training]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="future"><![CDATA[Future]]></category>
		<category domain="post_tag" nicename="ria"><![CDATA[RIA]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1902</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>nitescua@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>188.25.192.162</wp:comment_author_IP>
			<wp:comment_date>2010-11-01 20:29:38</wp:comment_date>
			<wp:comment_date_gmt>2010-11-01 20:29:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For some time, I also believe that having a feature to compile to Javascript+HTML5 will be a total blast.
I mean you take developers which are not web savvy and give them a tool to become so instantly. It's huge.

However, I am wondering if the effort of building this isn't much higher instead of coming with something new for the web.
I am thinking about Microsoft coming with great framework for the web (Javascript + HTML5), I mean some similar XAML stuff from Silverlight and WPF.

My feeling is also that Microsoft might really be cooking something good. I think what they did with WPF and Silverlight might had give them some cool ideas on what can they do next.
However, I cannot stop thinking about Muglia's unfortunate comments on Silverlight regarding "shifting priorites".
I am not sure exactly what was the reporter's question and in what context.

Andrei.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1814</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 01:32:40</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 01:32:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] The Future of RIAs [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1815</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-The-Future-of-RIAs</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 01:42:54</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 01:42:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cross-Training in Silverlight &amp; Flex – The Future of RIAs...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1817</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Cross-Training in Silverlight &amp; Flex – The Future of RIAs « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/10/30/cross-training-in-silverlight-flex-the-future-of-rias/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 02:30:20</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 02:30:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Brian Genisio, Larry King. Larry King said: Cross-Training in Silverlight &amp; Flex – The Future of RIAs « Brian ... http://bit.ly/ckGpQJ #SL #RIA [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1836</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Washington]]></wp:comment_author>
			<wp:comment_author_email>webmaster@adefwebserver.com</wp:comment_author_email>
			<wp:comment_author_url>http://ADefWebserver.com</wp:comment_author_url>
			<wp:comment_author_IP>66.47.208.98</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 15:13:45</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 15:13:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I also considered the "hit a button and get a HTML 5 version of my Silverlight application". I will evaluate it when/If I see it.

Anything else, for example "pound out the application using JavaScript and the HTML5 canvas..." seriously? We did this already 10 years ago, remember? :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1841</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.135</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 17:17:09</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 17:17:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Michael:  Yeah, I think that is what keeps me gounded in Silverlight and Flex right now... the hopes that I can continue to write applications at an abstraction higher than HTML.  Every time I go back to HTML, I find myself feeling like I am missing the nice things... like data binding.  Oh, how I pine for data binding in HTML.  

But if we get to a place where these frameworks sit on top of the HTML/Javascript platform, then HTML never needs to support data binding directly.  The frameworks that want it can implement it.

I dunno... I might be hoping for too much.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1845</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Washington]]></wp:comment_author>
			<wp:comment_author_email>webmaster@adefwebserver.com</wp:comment_author_email>
			<wp:comment_author_url>http://ADefWebserver.com</wp:comment_author_url>
			<wp:comment_author_IP>66.47.208.98</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 20:18:24</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 20:18:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know you are 'just thinking out loud' and I also Tweeted something similar a few weeks ago.

But, I am working on an app using Sterling Object-Oriented Database for Silverlight and Windows Phone 7 (http://bit.ly/awBzuG) and MEF and reports using the Silverlight Reports project. 

I am unable to imagine hitting a button and getting that in HTML 5. I mean I plan to be DONE with this application TODAY (and I started this morning).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1846</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.135</wp:comment_author_IP>
			<wp:comment_date>2010-10-30 22:12:43</wp:comment_date>
			<wp:comment_date_gmt>2010-10-30 22:12:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Michael: Well, I suppose I'd ask the question (as respectfully as possible): "Why Not?"

If it is the case that we can compile C# down to IL and IL to Javascript (as Volta showed), it is conceivable that every Silverlight DLL we have can also be compiled down to Javascript.  This would mean that you could have Javascript versions of Sterling, MEF and Core.  

If the performance improvements of the new Javascript engines live up to their expectations (with JITting, and Hotspots and what not), then I think it is completely conceivable that anything we write in C# can execute in Javascript without out ever knowing or caring.  Think about the size and power of jQuery, for instance.

I suppose I will argue it from a different angle... I think that it is inevitable that we will see higher-level abstractions that live on top of HTML5 and Javascript.  They will come organically and be a lot more powerful from a development perspective than raw HTML and JS.  If these frameworks materialize, I think that they will look a lot like Silverlight or Flex.  And if they do, they will give Silverlight and Flex a run for their money.

I am thinking about an analogous landscape to the current server language/stack story... so many frameworks exist that we can't keep track of them.  I think we will see the same on top of HTML/JS for two reasons: People don't want to stay as low as HTML5 primitives.  Also, people want to work with the metaphors that work best for them.

I think Microsoft is anticipating this, and I think they have plans to support this.

All that being said, I will say this:  Close friends of mine, whom I respect, think my views on this are crazy.  I will be the first to admit it... I might be crazy :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1852</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Washington]]></wp:comment_author>
			<wp:comment_author_email>webmaster@adefwebserver.com</wp:comment_author_email>
			<wp:comment_author_url>http://ADefWebserver.com</wp:comment_author_url>
			<wp:comment_author_IP>66.47.208.98</wp:comment_author_IP>
			<wp:comment_date>2010-10-31 00:33:05</wp:comment_date>
			<wp:comment_date_gmt>2010-10-31 00:33:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As to "Why Not" I only ask "How are you able to translate my MEF/MVVM/Dynamic injected/Media Driven Silverlight application to HTML5? or create a HTML5 output?"

They may have a "Design it in Silverlight and run in HTML5" it's called Silverlight 1.0 &lt;- Seriously I was programming Silverlight in Silverlight 1.0 and you can do a LOT in it.

But, that is 3 HUGE Silverlight versions from Silverlight 4 :) :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1855</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.135</wp:comment_author_IP>
			<wp:comment_date>2010-10-31 02:00:45</wp:comment_date>
			<wp:comment_date_gmt>2010-10-31 02:00:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Michael: Ok.  I see the disconnect.  Let me try again.  It requires a different viewpoint, so be prepared to think outside the box.

I am not suggesting that the XAML translate down to div, span, form, button, etc.  I am suggesting that the canvas has the capability of managing the drawing primitives that Silverlight needs to implement its own controls on the canvas.  I am suggesting that Silverlight is a framework that runs on top of HTML5/JS and your Silverlight app runs at that higher level.

In Silverlight today, as we know it, there is some sort of frame buffer that it ultimately renders to.  The Silverilght libraries simply create controls from drawing primatives (line, rectangle, text, path, ellipse, etc).  When we have a Silverlight Button control, it is a high-level abstraction that ultimately gets down to the drawing primatives.

With the HTML Canvas, it becomes a frame buffer for Silverlight.  If we can compile System.Core.dll and System.Windows.dll down to Javascript instead of bytecode (which we can), then there is a version of System.Windows that writes to the HTML5 Canvas and Video elements instead of what it is currently doing.  All of a sudden, you have System.Windows.Controls.Button drawing on a canvas.  StackPanels, ItemsControls, Labels, whatever, all draw to the canvas.

So to answer your question: "How do you do MVVM in this environment?".  The answer is:  Your C# ViewModel compiles down to JS.  It data binds to the Silverlight control that is drawn on the canvas.  The JS-compiled version of System.Windows.dll manages the data binding using the exact same mechanism that Silverlight uses.  Your ViewModel is handled just as it normally would.  HTML elements are nowhere to be found.

How do you do MEF in this environment?  MEF compiles down to JS instead of bytecode, so it works against everything in the framework.  System.Windows.Controls.MediaElement is implemented in terms of the Video tag.

In other words, your Silverlight app does not translate over to HTML5/Javascript.  It runs in a Silverlight framework that sits on top of HTML5/Javascript.  The browser becomes your CLR.  You, as a programmer, never need to think about HTML5 or JS.  

:)

Now, after all of that, I am SURE of it.  You think I am crazy.

:)

Someone once told me: "There is no problem that can't be solved without another layer of abstraction."]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1868</wp:comment_id>
			<wp:comment_author><![CDATA[Is Silverlight Over? (The Good The Ok and The Bad) - Shai Raiten]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blogs.microsoft.co.il/blogs/shair/archive/2010/10/31/is-silverlight-over-the-good-the-ok-and-the-bad.aspx</wp:comment_author_url>
			<wp:comment_author_IP>72.15.222.207</wp:comment_author_IP>
			<wp:comment_date>2010-10-31 11:00:54</wp:comment_date>
			<wp:comment_date_gmt>2010-10-31 11:00:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Brian Genisio&#039;s - Cross-Training in Silverlight &amp; Flex – The Future of RIAs [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1874</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Washington]]></wp:comment_author>
			<wp:comment_author_email>webmaster@adefwebserver.com</wp:comment_author_email>
			<wp:comment_author_url>http://ADefWebserver.com</wp:comment_author_url>
			<wp:comment_author_IP>66.47.208.98</wp:comment_author_IP>
			<wp:comment_date>2010-10-31 14:00:23</wp:comment_date>
			<wp:comment_date_gmt>2010-10-31 14:00:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I brought up Silverlight 1.0 because I think is shows that Silverlight can be controlled by JavaScript now so replacing the Silverlight Canvas with a HTML5 canvas is not unthinkable. So MY point was that a lot of what you are saying IS possible.

However, I see that what you are really saying is, No the programmer can still write in C#, it would get COMPILED into JavaScript.

On that issue we will have to wait and see if someone shows us anything close to that.

However, performance... consistent performance is an issue whenever "JavaScript" enters the conversation :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1879</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.74.135</wp:comment_author_IP>
			<wp:comment_date>2010-10-31 17:42:59</wp:comment_date>
			<wp:comment_date_gmt>2010-10-31 17:42:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Michael: Now we're talkin' :)

Michael said:
"will have to wait and see if someone shows us anything close to that"

This is where I think that MS is poised to give us something that does this.  They had a research project in 2007 called Volta that did exactly that -- compiled IL down to JS instead of bytecode.  It was a system like Google's GWT where you wrote all your code one place, (in C#) and you used attributes to declare where it lived (server or browser).  Volta dropped off the face of the (public) net about one month before Silverlight 2 was announced.

This is where my speculation/prediction is coming in.  I think MS has the IL -> JS technology in their back pocket, ready to unleash.  Before they do that, they need to make sure their browser can handle it.  I am speculating that one of the reasons that MS is putting so many resources torwards HTML5 and efficient JS is because they want Silverlight to run directly in the browser without a plugin (http://silverlight.net/System.Core.js, perhaps?)

Ultimately, I think MS is not killing SL.  Instead, I think they want SL EVERYWHERE (all phones, all set-tops, all tablets, all browsers, all desktops).  Getting it to run natively in the browser without a plug-in feels like an obvious vehicle to me.  (plug-ing would still need to exist for legacy browsers.  They would be more lightweight, introducing Canvas and Video, essentially.)

Michael said:
"performance… consistent performance is an issue whenever “JavaScript” enters the conversation"

Yup.  Totally agree.  And if the perf is not there, then I think the assertion that HTML5/JS can do anything SL or Flex can do falls out the window.  In that case, we will still need our plug-ins.  I hope this is not true.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1904</wp:comment_id>
			<wp:comment_author><![CDATA[Brian R]]></wp:comment_author>
			<wp:comment_author_email>brian.reynolds@pobox.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.248.40.178</wp:comment_author_IP>
			<wp:comment_date>2010-11-01 22:40:32</wp:comment_date>
			<wp:comment_date_gmt>2010-11-01 22:40:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Different Brian here. 

I did a LOT of work with GWT &amp; AppEngine last year and then with Silverlight &amp; Azure this year. Having used both, I can say there is an enormous amount of convergence in the technologies. I would not be surprised to see Silverlight take a page from the GWT handbook and compile into HTML5 and JavaScript in the future.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1905</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Cross-Training in Silverlight &amp; Flex – The Future of RIAs « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/10/30/cross-training-in-silverlight-flex-the-future-of-rias?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-11-02 00:03:13</wp:comment_date>
			<wp:comment_date_gmt>2010-11-02 00:03:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Michael Chandler, José F. Romaniello. José F. Romaniello said: This is an interesting idea, worth read http://is.gd/gzWPO [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7012</wp:comment_id>
			<wp:comment_author><![CDATA[Justin J. Moses]]></wp:comment_author>
			<wp:comment_author_email>justinjmoses@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://about.me/justinj</wp:comment_author_url>
			<wp:comment_author_IP>199.89.103.10</wp:comment_author_IP>
			<wp:comment_date>2011-02-15 19:35:16</wp:comment_date>
			<wp:comment_date_gmt>2011-02-15 19:35:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting article and comments - I definitely think you're on to something here Brian.

For the record, I do believe that interview was taken out of context - however I suspect you're right - there is a clear implication that thinking on Silverlight has taken a turn at Redmond.  

Nevertheless, I have concerns - especially on the Flex/Flash side of things. Flash has a long history of ubiquity and its designers and developers are accustomed to graphics and animations rendering EXACTLY the same in each and every browser/platform. This had traditionally been one of the strongest arguments behind a Flash/Flex application. This new methodology your suggesting - whilst a real contender for universal "reach" - is going to sacrifice a fair amount of fidelity as it spans so many different browser implementations.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1915</wp:comment_id>
			<wp:comment_author><![CDATA[Vic Klien]]></wp:comment_author>
			<wp:comment_author_email>vic.klien@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.111.101.115</wp:comment_author_IP>
			<wp:comment_date>2010-11-02 17:23:44</wp:comment_date>
			<wp:comment_date_gmt>2010-11-02 17:23:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt; ...Air will be available on every device that we care about 
&gt; (iPhone, Android, Blackberry, WebOS, GoogleTV, etc).
&gt; I fully expect Silverlight to do the same.

But I think that was one of the key points in the "shift" Muglia described.  They are NOT going to port SL to Android, etc.

You can hope for some exotic way of getting SL to run on those other platforms, but that is, as you've said, pure speculation.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1935</wp:comment_id>
			<wp:comment_author><![CDATA[Mike]]></wp:comment_author>
			<wp:comment_author_email>mike@farinha.us</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>134.186.50.177</wp:comment_author_IP>
			<wp:comment_date>2010-11-03 15:39:00</wp:comment_date>
			<wp:comment_date_gmt>2010-11-03 15:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I hope you're right about Microsoft being able to transition the Silverlight Runtime into a compliant HTML 5 runtime. That would be epic.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Training in Silverlight and Flex &#8211; XAML vs MXML</title>
		<link>http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/</link>
		<pubDate>Mon, 08 Nov 2010 04:02:47 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More <a href="http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/">Cross-Training in Silverlight and Flex</a></p>  <p><a href="http://dotnetshoutout.com/Cross-Training-in-Silverlight-and-Flex-XAML-vs-MXML" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F11%2F08%2Fcross-training-in-silverlight-and-flex-xaml-vs-mxml%2F" /></a></p>  <p>Silverlight and Flex both include a declarative markup language for their UIs.&#160; Microsoft calls the Silverlight specification Extensible Application Markup Language (XAML pronounced zammel).&#160; Adobe calls the Flex specification MXML which is thought to have come from the original inventors: Macromedia extensible Markup Language.</p>  <p>In either case, these markup languages share two strong characteristics: They are both based on XML and they both do a fine job of declaring the UI.</p>  <div style="background-color: #e8f3ff">   <h3>XAML</h3>    <p>You use XAML in Silverlight to define the user interface in a declarative way.&#160; XAML is nothing more than XML with some Silverilght namespaces that let you represent a visual tree.&#160; Following is an example of <strong>MainPage.xaml</strong>.</p>    <pre class="code"><span style="color: blue">&lt;</span><span style="color: #a31515">UserControl </span><span style="color: red">x</span><span style="color: blue">:</span><span style="color: red">Class</span><span style="color: blue">=&quot;Hello_World.MainPage&quot;
    </span><span style="color: red">xmlns</span><span style="color: blue">=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
    </span><span style="color: red">xmlns</span><span style="color: blue">:</span><span style="color: red">x</span><span style="color: blue">=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
             </span><span style="color: red">Width</span><span style="color: blue">=&quot;300&quot; </span><span style="color: red">Height</span><span style="color: blue">=&quot;36&quot;&gt;

    &lt;</span><span style="color: #a31515">Border </span><span style="color: red">BorderThickness</span><span style="color: blue">=&quot;5&quot; </span><span style="color: red">CornerRadius</span><span style="color: blue">=&quot;5&quot; </span><span style="color: blue"><br />            </span><span style="color: red">BorderBrush</span><span style="color: blue">=&quot;Black&quot; </span><span style="color: red">Height</span><span style="color: blue">=&quot;Auto&quot; </span><span style="color: red">Width</span><span style="color: blue">=&quot;Auto&quot;&gt;
        &lt;</span><span style="color: #a31515">StackPanel </span><span style="color: red">Orientation</span><span style="color: blue">=&quot;Horizontal&quot;&gt;
            &lt;</span><span style="color: #a31515">TextBox </span><span style="color: red">Width</span><span style="color: blue">=&quot;100&quot; </span><span style="color: red">Name</span><span style="color: blue">=&quot;Input&quot; </span><span style="color: red">Margin</span><span style="color: blue">=&quot;3&quot; /&gt;
            &lt;</span><span style="color: #a31515">Button </span><span style="color: red">Content</span><span style="color: blue">=&quot;Say Hello&quot; </span><span style="color: red">Click</span><span style="color: blue">=&quot;SayHello&quot; </span><span style="color: red">Margin</span><span style="color: blue">=&quot;3&quot; /&gt;
            &lt;</span><span style="color: #a31515">TextBlock </span><span style="color: red">Name</span><span style="color: blue">=&quot;Output&quot; </span><span style="color: red">Margin</span><span style="color: blue">=&quot;3&quot; <font color="#ff0000">VerticalAlignment</font>=&quot;Bottom&quot; /&gt;
        &lt;/</span><span style="color: #a31515">StackPanel</span><span style="color: blue">&gt;
    &lt;/</span><span style="color: #a31515">Border</span><span style="color: blue">&gt;
    
&lt;/</span><span style="color: #a31515">UserControl</span><span style="color: blue">&gt;
</span></pre>

  <p>The MainPage UserControl uses this XAML code to define the entire view.&#160; A Border houses three UI components stacked together: text input, a button to do something with and a label to show the output.&#160; If you were to type this into your MainPage control in Silverlight, it would look like this in your browser:</p>

  <p>&#160;<a href="http://houseofbilz.com/wp-content/uploads/2010/11/image2.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb2.png" width="268" height="36" /></a></p>

  <p><span style="color: blue"></span></p>

  <p>Of course, the declarative XAML is nothing without some imperative behavior. Visual Studio, generates a corresponding “code-behind” whenever a UserControl is created. In the simplest of cases, you place your behavior in the “code-behind” file. In this case, the file is named <strong>MainPage.xaml.cs</strong>.&#160; By default, it creates a constructor for you that calls <strong>InitializeComponent()</strong>.&#160; I added the <strong>SayHello</strong> method that will get called whenever the button (defined in the XAML) is pressed.</p>

  <pre class="code"><span style="color: blue">public partial class </span><span style="color: #2b91af">MainPage
</span>{
    <span style="color: blue">public </span>MainPage()
    {
        InitializeComponent();
    }

    <span style="color: blue">private void </span>SayHello(<span style="color: blue">object </span>sender, <span style="color: #2b91af">RoutedEventArgs </span>e)
    {
        Output.Text = <span style="color: #a31515">&quot;Hello &quot; </span>+ Input.Text;
    }
}</pre>

  <p>Most XAML introductions get off the train at this point. This series aims to show the differences between Silverlight and Flex so I will continue on to describe how the XAML and the C# code get glued together.</p>

  <p>Notice in the “code behind” that the class it generated is a <strong>partial</strong> class.&#160; This means that there is more to this class somewhere else.&#160; Digging deeper into the <strong>obj/Debug</strong> folder, you will find an intermediate file named <strong>MainPage.g.cs</strong>.&#160; It holds the rest of this <strong>partial</strong> class:</p>

  <pre class="code"><span style="color: blue">public partial class </span><span style="color: #2b91af">MainPage </span>: System.Windows.Controls.UserControl {
        
    <span style="color: blue">internal </span>System.Windows.Controls.TextBox Input;        
    <span style="color: blue">internal </span>System.Windows.Controls.TextBlock Output;        
    <span style="color: blue">private bool </span>_contentLoaded;
        
<span style="color: gray">    </span>[System.Diagnostics.<span style="color: #2b91af">DebuggerNonUserCodeAttribute</span>()]
    <span style="color: blue">public void </span>InitializeComponent() {
        <span style="color: blue">if </span>(_contentLoaded) {
            <span style="color: blue">return</span>;
        }
        _contentLoaded = <span style="color: blue">true</span>;
        System.Windows.Application.LoadComponent(<span style="color: blue">this</span>, <br />            <span style="color: blue">new </span>System.Uri(<span style="color: #a31515">&quot;/Hello%20World;component/MainPage.xaml&quot;</span>, <br />                           System.UriKind.Relative));
        <span style="color: blue">this</span>.Input = ((System.Windows.Controls.TextBox)(<span style="color: blue">this</span>.FindName(<span style="color: #a31515">&quot;Input&quot;</span>)));
        <span style="color: blue">this</span>.Output = ((System.Windows.Controls.TextBlock)(<span style="color: blue">this</span>.FindName(<span style="color: #a31515">&quot;Output&quot;</span>)));
    }
}</pre>

  <p>We can see where some of the important “glue” is defined. The code derives from <strong>UserControl</strong> and defines the <strong>InitializeComponent</strong> method that is called in the constructor.&#160; It also generates the two named controls: <strong>Input</strong> and<strong> Outut </strong>based on the names defined in the XAML.&#160; The <strong>InitializeComponent</strong> method then desterilizes the XAML into an object tree.&#160; It finishes by setting the <strong>Input</strong> and <strong>Output</strong> controls to be items found in the visual tree.&#160; This is how the “code-behind” can access these controls in the <strong>SayHello</strong> method.</p>

  <p>The last bit of glue happens in the compiler.&#160; The XAML file is compiled into the DLL as an “embedded resource”.&#160; This happens automatically so you don’t need to think about it.&#160; If you are curious, you can crack open the DLL with <a href="http://www.red-gate.com/products/reflector/index.htm">Reflecor</a> and find the XAML packed into the DLL.&#160; The <strong>InitializeComponent</strong> method loads the tree from the same XAML file which is embedded at compile-time.</p>

  <p><a href="http://11011.net/software/vspaste"></a></p>

  <p><a href="http://houseofbilz.com/wp-content/uploads/2010/11/Untitled.gif"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="Untitled" border="0" alt="Untitled" src="http://houseofbilz.com/wp-content/uploads/2010/11/Untitled_thumb.gif" width="926" height="313" /></a>&#160;</p>
</div>

<div style="background-color: #ffe8e8">
  <h3>MXML</h3>

  <p>MXML in Flex is used to define the user interface in a declarative way.&#160; MXML is nothing more than XML with some Flex namespaces that let you represent a visual tree.&#160; Following is an example of <strong>Main.mxml</strong>.</p>

  <p><font size="2"><font face="Courier New">&lt;?xml version=<font color="#ff0000">&quot;1.0&quot;</font> encoding=<font color="#ff0000">&quot;utf-8&quot;</font>?&gt;

        <br /><font color="#0000ff">&lt;s:Application</font> xmlns:fx=<font color="#ff0000">&quot;</font></font></font><a href="http://ns.adobe.com/mxml/2009&quot;"><font color="#ff0000" size="2" face="Courier New">http://ns.adobe.com/mxml/2009&quot;</font></a>

    <br /><font size="2" face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; xmlns:s=<font color="#ff0000">&quot;library://ns.adobe.com/flex/spark&quot;</font>

      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; width=<font color="#ff0000">&quot;300&quot;</font> height=<font color="#ff0000">&quot;40&quot;</font><font color="#0000ff">&gt;
        <br /></font>&#160;&#160; </font><font size="2"><font face="Courier New"><font color="#008000">&lt;fx:Script&gt;
          <br /></font>&#160;&#160;&#160;&#160;&#160;&#160; &lt;![CDATA[

        <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">public function</font> sayHello():<font color="#0000ff">void</font>{

        <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; output.text = <font color="#ff0000">&quot;Hello &quot;</font>+ input.text;

        <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }

        <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; ]]&gt;

        <br />&#160;&#160; <font color="#008000">&lt;/fx:Script&gt;</font> </font></font></p>

  <p><font size="2" face="Courier New">&#160;&#160; <font color="#0000ff">&lt;s:BorderContainer</font> borderWeight=<font color="#ff0000">&quot;5&quot;</font> cornerRadius=<font color="#ff0000">&quot;5&quot;</font>

      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; borderColor=<font color="#ff0000">&quot;black&quot;</font> minHeight=<font color="#ff0000">&quot;0&quot;</font> width=<font color="#ff0000">&quot;100%&quot;</font><font color="#0000ff">&gt;</font>

      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">&lt;s:HGroup</font> left=<font color="#ff0000">&quot;3&quot;</font> right=<font color="#ff0000">&quot;3&quot;</font> top=<font color="#ff0000">&quot;3&quot;</font> bottom=<font color="#ff0000">&quot;3&quot;</font><font color="#0000ff">&gt;</font>

      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">&lt;s:TextInput</font> width=<font color="#ff0000">&quot;100&quot;</font> id=<font color="#ff0000">&quot;input&quot;</font>/<font color="#0000ff">&gt;</font>

      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">&lt;s:Button</font> label=<font color="#ff0000">&quot;Say Hello&quot;</font> click=<font color="#ff0000">&quot;sayHello()&quot;</font> left=<font color="#ff0000">&quot;6&quot;</font>/<font color="#0000ff">&gt;</font>

      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">&lt;s:Label</font> id=<font color="#ff0000">&quot;output&quot;</font> left=<font color="#ff0000">&quot;6&quot;</font> verticalAlign=<font color="#ff0000">&quot;bottom&quot;</font> height=<font color="#ff0000">&quot;100%&quot;</font>/<font color="#0000ff">&gt;</font>

      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; </font><font color="#0000ff" size="2" face="Courier New">&lt;/s:HGroup&gt;
      <br />&#160;&#160;&#160; &lt;/s:BorderContainer&gt;

      <br />&lt;/s:Application&gt;</font></p>

  <p><span style="color: blue"><font color="#000000">This MXML code defines the entire application.&#160; It is composed of a <strong>BorderContainer</strong> that houses three UI components grouped together: text input, a button to do something with and a label to show the output.&#160; If you were to type this into your <strong>Main.mxml</strong> view in Flex, it would look like this in your browser:</font></span></p>

  <p><a href="http://houseofbilz.com/wp-content/uploads/2010/11/image3.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://houseofbilz.com/wp-content/uploads/2010/11/image_thumb3.png" width="304" height="35" /></a></p>

  <p>Of course, the declarative MXML is nothing without some imperative behavior.&#160; The default way to do this in Flex is to use the HTML model of <strong>Script</strong> tags.&#160; The <strong>sayHello</strong> method is defined directly in the MXML.&#160; There are better ways (in my opinion) to separate the imperative behavior from the view, but this is a simple example.</p>

  <p>Most MXML introductions get off the train at this point.&#160; This series aims to show the differences between Silverlight and Flex, so I will continue to describe what happens to this MXML at compile-time.</p>

  <p>Unlike Silverlight where the XAML is embedded in the compiled project and parsed at runtime, Flex takes a different approach.&#160; MXML views get parsed at compile-time and translated directly into ActionScript. The actual code that the compiler generates is transient – it gets removed after the compile step -- unless you add the –<strong>keep-generated-actionscript</strong> flag to the compiler.</p>

  <p>When this happens, quite a lot of code gets generated.&#160; I don’t want to put everything on this post, but here is a snippet from the generated code:</p>

  <p><font size="2"><font face="Courier New"><font color="#0000ff">public</font> <font color="#ff00ff">class</font> Main <font color="#0000ff">extends</font> spark.components.Application&#160;&#160;&#160; <br />{</font> </font></p>

  <p>&#160;&#160;&#160; [<font color="#0000ff">Bindable</font>] <font color="#0000ff">public</font> <font color="#8bb8ba">var</font> input : spark.components.TextInput;&#160;&#160;&#160; <br />&#160;&#160;&#160; [<font color="#0000ff">Bindable</font>] <font color="#0000ff">public</font> <font color="#6ca6aa">var</font> output : spark.components.Label;</p>

  <p>&#160;&#160;&#160; <font color="#0000ff">public</font> <font color="#008000">function</font> Main()</p>

  <p>&#160;&#160;&#160; {</p>

  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">super</font>();</p>

  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">this</font>.width = 300;</p>

  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">this</font>.height = 40;</p>

  <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160; <font color="#0000ff">this</font>.mxmlContentFactory = <font color="#0000ff">new </font>mx.core.DeferredInstanceFromFunction(_Main_Array1_c);</p>

  <p>&#160;&#160;&#160; }</p>

  <p>}</p>

  <p></p>

  <p></p>

  <p>The constructor sets up a <strong>_Main_Array1_c</strong> function which calls several other methods hierarchically which creates the controls that were defined in the MXML.</p>

  <p>The details of the generated code are not terribly important.&#160; The important thing to understand is that the MXML gets compiled into ActionScript and it is not parsed at run-time.&#160; XAML in Silverlight gets parsed at run-time but VisualStudio does generate some C# code to help glue the XAML to the code-behind.</p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2010-11-08 04:02:47</wp:post_date>
		<wp:post_date_gmt>2010-11-08 04:02:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-training-in-silverlight-and-flex-xaml-vs-mxml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cross-training"><![CDATA[Cross-Training]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="mxml"><![CDATA[MXML]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xaml"><![CDATA[XAML]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>27692</wp:comment_id>
			<wp:comment_author><![CDATA[Hans]]></wp:comment_author>
			<wp:comment_author_email>sangwhatmore@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://Latonya.blog.com</wp:comment_author_url>
			<wp:comment_author_IP>111.10.99.228</wp:comment_author_IP>
			<wp:comment_date>2014-07-16 19:18:35</wp:comment_date>
			<wp:comment_date_gmt>2014-07-16 19:18:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I see a lot of interesting content on your website.
You have to spend a lot of time writing, i know how to save you a lot of work,
there is a tool that creates unique, SEO friendly posts in couple of minutes, just type in google  - k2 unlimited content]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2037</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-11-13 03:16:44</wp:comment_date>
			<wp:comment_date_gmt>2010-11-13 03:16:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] XAML vs MXML [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2038</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Cross-Training-in-Silverlight-and-Flex-XAML-vs-MXML</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2010-11-13 04:19:12</wp:comment_date>
			<wp:comment_date_gmt>2010-11-13 04:19:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cross-Training in Silverlight and Flex – XAML vs MXML...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2048</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Cross-Training in Silverlight and Flex – XAML vs MXML « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-11-13 13:25:53</wp:comment_date>
			<wp:comment_date_gmt>2010-11-13 13:25:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Brian Genisio, Michael Crump [MCPD]. Michael Crump [MCPD] said: Very interesting article. RT @BrianGenisio: Blogged: Cross-Training in #Silverlight and #Flex -- XAML vs MXML http://bit.ly/94iG2y #fb [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2049</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Brown]]></wp:comment_author>
			<wp:comment_author_email>mbrown@kharasoft.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.208.200.2</wp:comment_author_IP>
			<wp:comment_date>2010-11-13 13:42:15</wp:comment_date>
			<wp:comment_date_gmt>2010-11-13 13:42:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,
Good summary of the similarities between the two platforms (as an aside, the Android platform also has a declarative, xml-based UI). I had noticed the similarity between the two as well.

One quick nitpick though. XAML is compiled into a binary format called BAML which is more efficient to interpret at runtime than the Raw XML.  Looking forward to future posts in your series.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3118</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &#8212; C#/CLR vs ActionScript3/AVM Part 1 &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/12/17/cross-training-in-silverlight-flex-cclr-vs-actionscript3avm-part-1/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-12-17 03:08:34</wp:comment_date>
			<wp:comment_date_gmt>2010-12-17 03:08:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] &laquo; Cross-Training in Silverlight and Flex &ndash; XAML vs MXML [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80447</wp:comment_id>
			<wp:comment_author><![CDATA[hosting murah terbaik]]></wp:comment_author>
			<wp:comment_author_email>franceswoollard@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hostingdomainku.com/unsur-penting-website/</wp:comment_author_url>
			<wp:comment_author_IP>45.33.151.59</wp:comment_author_IP>
			<wp:comment_date>2016-03-01 02:38:30</wp:comment_date>
			<wp:comment_date_gmt>2016-03-01 02:38:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ulasan keren tentang web hosting ini sangat bermanfaat. Luar biasa banget dan penting diketahui.

Semua orang yang pakai ataupun sedang mencari layanan web hosting terbaik 
di Indonesia wajib baca tulisan ini. Kunjungi juga situs saya ya, ada 
artikel menarik yang pasti bermanfaat bagi para pengguna layanan web hosting.
Terima kasih.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29051</wp:comment_id>
			<wp:comment_author><![CDATA[Johne265]]></wp:comment_author>
			<wp:comment_author_email>johne701@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>186.232.160.4</wp:comment_author_IP>
			<wp:comment_date>2014-09-12 10:53:38</wp:comment_date>
			<wp:comment_date_gmt>2014-09-12 10:53:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please add more movies related to cooking if you have, because I wish for to learn more and more about all recipes of cooking. efcacabebgag]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56850</wp:comment_id>
			<wp:comment_author><![CDATA[gazcom]]></wp:comment_author>
			<wp:comment_author_email>gazru@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://www.gaz-com.ru/</wp:comment_author_url>
			<wp:comment_author_IP>109.195.18.135</wp:comment_author_IP>
			<wp:comment_date>2015-06-25 07:01:21</wp:comment_date>
			<wp:comment_date_gmt>2015-06-25 07:01:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[kotelnaya http://www.gaz-com.ru/]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80473</wp:comment_id>
			<wp:comment_author><![CDATA[Margareta]]></wp:comment_author>
			<wp:comment_author_email>earlenewaldon@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://astrospaceparty.info/party/2012/12/20/mayan-apocalypse-special.html</wp:comment_author_url>
			<wp:comment_author_IP>45.61.46.70</wp:comment_author_IP>
			<wp:comment_date>2016-03-07 03:55:04</wp:comment_date>
			<wp:comment_date_gmt>2016-03-07 03:55:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And of course, almost everyone is already familiar with New York 
City. Determine what habits you need to best serve 
you and pull you forward or in the direction you want to 
move in. The students would the paint the word unto 
a note card, as they think it's spelled.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Training in Silverlight &amp; Flex -- C#/CLR vs ActionScript3/AVM Part 1</title>
		<link>http://houseofbilz.com/archives/2010/12/17/cross-training-in-silverlight-flex-cclr-vs-actionscript3avm-part-1/</link>
		<pubDate>Fri, 17 Dec 2010 02:59:22 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=197</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More <a href="http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/">Cross-Training in Silverlight &amp; Flex</a></p> <a href="http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-%E2%80%94-CCLR-vs-ActionScript3AVM-Part-1" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F12%2F17%2Fcross-training-in-silverlight-flex-cclr-vs-actionscript3avm-part-1%2F" /></a>   <p>In my previous post, I talked about the <a href="http://houseofbilz.com/archives/2010/11/08/cross-training-in-silverlight-and-flex-xaml-vs-mxml/">declarative side of Silverlight and Flex</a> (XAML vs MXML).&#160; In this post, I will talk about the <a href="http://en.wikipedia.org/wiki/Imperative_programming">imperative</a> side Silverlight and Flex.&#160; In other words, this is where developers write code that executes logic to modify state.&#160; The primary languages for Silverlight and Flex are C# and ActionScript (there are others) and the execution run-times are the Common Language Runtime (CLR) and the ActionScript Virtual Machine (AVM).</p>  <div style="background-color: #e8f3ff">   <h3>C#/CLR</h3>    <p>The most widely used language in Silverlight is C#, a C-like language that is easy to use/read and it is very powerful.&#160; It is an object-oriented language, though it borrows concepts from functional languages.&#160; C# code compiles down to byte code which gets executed on the Common Language Runtime (CLR).&#160; As its name implies, the CLR can run languages other than C#.&#160; The supported language list is quite long, but some of the more common options are <a href="http://msdn.microsoft.com/en-us/vbasic/default">VisualBasic.Net</a>, <a href="http://msdn.microsoft.com/en-us/fsharp/default">F#</a>, <a href="http://ironruby.net/">IronRuby</a> and <a href="http://ironpython.codeplex.com/">IronPython</a>.&#160; Since C# is the most commonly used, I will focus on it in this post.</p>    <h4><font style="font-weight: bold">Hello World</font></h4>    <p>To start things off, here is a “Hello World” application written in C#.&#160; It is quite similar to ActionScript because they are both object-oriented languages.</p>    <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine(&quot;Hello World&quot;);            
    }
}</pre>

  <h4>&#160;</h4>

  <h4><font style="font-weight: bold">Static by Default, Dynamic by Option</font></h4>

  <p>Since its inception, C# has been a static language.&#160; Microsoft introduced optional dynamic typing in C# 4.0 with the <strong>dynamic</strong> keyword.&#160; In other words, variables defined as dynamic use late binding to resolve properties and methods where all other variables are checked at compile-time.</p>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">// STATIC EXAMPLE
Turkey turkey = new Turkey();
Console.WriteLine(turkey.Weight);
var steamShovel = new SteamShovel(); // Implicit Typing
Console.WriteLine(steamShovel.Weight);
Console.WriteLine(steamShovel.NotThere); // Compile-time Error

// DYNAMIC EXAMPLE
dynamic item = new Turkey();
Console.WriteLine(item.Weight);
item = new SteamShovel();
Console.WriteLine(item.Weight);
Console.WriteLine(item.NotThere); // Runtime Error</pre>

  <h4>&#160;</h4>

  <h4><font style="font-weight: bold">Classes/Interfaces</font></h4>

  <p>C# defines interfaces, classes and derived classes very similar to ActionScript or Java:</p>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public interface IGobbleable
{
    void Gobble();
}

public class Turkey : IGobbleable
{
    public int Weight { get { return 5; } }

    public virtual void Gobble()
    {
        Console.WriteLine(&quot;Gobble Gobble&quot;);
    }
}

public class WildTurkey : Turkey
{
    public override void Gobble()
    {
        Console.WriteLine(&quot;Putts Putts&quot;);
    }
}</pre>

  <p>In “Part 2” of my imperative programming comparison, I will cover Generics, Iterators, Attributes, Lambdas and XML Literals.</p>
</div>

<h4>&#160; </h4>

<div style="background-color: #ffe8e8">
  <h3>ActionScript3/AVM</h3>

  <p>The most widely used language in Flex is ActionScript3, an <a href="http://www.ecmascript.org/">ECMAScript</a> dialect that is easy to use/read and is quite powerful (though not as powerful as C#, in my opinion).&#160; Although it is often compared to another widely used ECMAScript language, <a href="http://en.wikipedia.org/wiki/JavaScript">JavaScript</a>, it diverges in a way that feels more like Java.&#160; Like Java, ActionScript3 is object-oriented with classes and interfaces.&#160; It also has optional static typing which JavaScript does not have.&#160; ActionScript3 code compiles down to ActionScript Byte Code (ABC) and runs on the ActionScript Virtual Machine (AVM2) – also known as <a href="http://www.mozilla.org/projects/tamarin/">Tamarin</a>.&#160; </p>

  <p>Although ActionScript is the only official language supported on the AVM2, there are several options for developing in Flex.&#160; Adobe Labs released a preview of <a href="http://labs.adobe.com/technologies/alchemy/">Alchemy</a>, a tool for compiling C/C++ code to run on the AVM2.&#160; The widely-known <a href="http://haxe.org/">haXe</a> language, which is like ActionScript on steroids, also compiles for the AVM2.&#160; In addition, people have gotten Ruby (via <a href="http://hotruby.yukoba.jp/">HotRuby</a>), C# (via <a href="http://cs2as.codeplex.com/">cs2as</a>J) and Java (via <a href="http://code.google.com/p/j2as3/">J2AS3</a>) to run in the Flash player – therefore lending to Flex development.</p>

  <p>Since ActionScript3 is the most commonly used language in Flex, I will focus on it in this post.</p>

  <h4><font style="font-weight: bold">Hello World</font></h4>

  <p>To start things off, here is a “Hello World” application written in ActionScript3.&#160; It is quite similar to C# because they are both object-oriented languages.</p>

  <pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">public class HelloWorld extends Sprite
{
    public function HelloWorld()
    {
        trace(&quot;Hello World&quot;);
    }
}</pre>

  <h4>&#160;</h4>

  <h4><font style="font-weight: bold">Dynamic by Default, Static by Option</font></h4>

  <p>Since its inception, ActionScript has been a dynamic language.&#160; Adobe introduced optional static typing in ActionScript 2 with a colon syntax.&#160; In other words, variables defined as static will remain static and will be checked at compile-time where variables without type information will be dynamic and late-bound (run-time).</p>

  <pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">// DYNAMIC EXAMPLE
var item = new Turkey();
trace(item.weight);
item = new SteamShovel();
trace(item.weight);
trace(item.NotThere); // Runtime Error

// STATIC EXAMPLE
var turkey:Turkey = new Turkey();
trace(turkey.weight);
var steamShovel:SteamShovel = new SteamShovel();
trace(steamShovel.weight);
trace(steamShovel.NotThere); // Compile-time Error</pre>

  <h4>&#160;</h4>

  <h4><font style="font-weight: bold">Classes/Interfaces</font></h4>

  <p>ActionScript defines interfaces, classes and derived classes similar to C# with a syntax that is more like Java:</p>

  <pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">public interface IGobbleable
{
    function gobble():void;
}

public class Turkey implements IGobbleable
{
    public var weight:int = 5;
    
    public function gobble():void
    {
        trace(&quot;Gobble Gobble&quot;);
    }
}

public class WildTurkey extends Turkey
{
    public override function gobble():void
    {
        trace(&quot;Putts Putts&quot;);
    }
}</pre>

  <p>In “Part 2” of my imperative programming comparison, I will cover Generics (via Vector.&lt;&gt;), Proxy objects, MetaData Tags, Anonymous Functions and XML Literals.</p>
</div>

<p>Stay tuned <img style="border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://houseofbilz.com/wp-content/uploads/2010/12/wlEmoticon-smile.png" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date>2010-12-17 02:59:22</wp:post_date>
		<wp:post_date_gmt>2010-12-17 02:59:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-training-in-silverlight-flex-cclr-vs-actionscript3avm-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="actionscript"><![CDATA[ActionScript]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="cross-training"><![CDATA[Cross-Training]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="ria"><![CDATA[RIA]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>65646</wp:comment_id>
			<wp:comment_author><![CDATA[&#21488;&#21335;&#19968;&#22812;&#24773;]]></wp:comment_author>
			<wp:comment_author_email>mc5246722zipu@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://xmountain.cn/wp-webmail.php</wp:comment_author_url>
			<wp:comment_author_IP>219.136.102.155</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 07:58:07</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 07:58:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[記者在采訪中了解到充分發揮平臺的特殊功能 援交，探索對非經營性資產產權、使用權、管理權分階段分 <a href="http://www.darinandbrookealdridge.com/tabledrag.php" rel="nofollow">&#25588;&#20132;</a> 層次接收的 <a href="http://soirsdefete.com/load.php" rel="nofollow">&#24773;&#36259;&#29255;</a> 方式，利用平臺的規模效應，采取專業委托、合同能源管理等模式 情趣片，在降低管理成本的同時，進一步提升科學化管理水平弘揚文化——維護古都風貌顯身手。”雖然團購網站并不是傳統意義上的經營者 樂威壯 台中，銷售的不是實實在在的商品，而是抽象存在的“優惠” 犀利士購買藥局，可能《反不正當競爭法》管不了他們，但也不能因此游離在法律之外。也正因為如 <a href="http://studio41vlissingen.nl/wp-sample.php" rel="nofollow">&#27138;&#23041;&#22767; &#21488;&#20013;</a> 此 台中情趣，當你把味道極濃的咖啡喝完后，你會在杯底發現一層厚而細軟的咖啡殘渣在土耳其 高雄一夜情，咖啡早已成為一種社交文化。穿厚底鞋或站在厚橡膠墊上也有幫助]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65645</wp:comment_id>
			<wp:comment_author><![CDATA[&#27138;&#23041;&#22767;]]></wp:comment_author>
			<wp:comment_author_email>y41557963yeya@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.147scouts.co.uk/license.php</wp:comment_author_url>
			<wp:comment_author_IP>219.136.102.155</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 07:57:48</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 07:57:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="http://www.muaskarurrahman.com/login.php" rel="nofollow">&#21488;&#20013;&#19968;&#22812;&#24773;</a> 制定和落實風險防控措施如果對整形美容有任何疑問，請點擊免費在線咨詢，在線醫生將為你詳細解答。其次是珠海和廈門，全年一級天氣占比分別為64%和46% 台 <a href="http://myseasonalshopping.com/license.php" rel="nofollow">&#27138;&#23041;&#22767; &#38450;&#20605;</a> 中一夜情。應勢而生的網絡銀行不僅改變著銀行的經營模式和客戶接受銀行產品服務的方式，更將成為現代商業銀行的新興業態，吸引各家銀行再度掀起角逐大戰2012年10月，中信銀行總行成立了全新的網絡銀行部，將網絡銀行業務作為全行戰略發展的重要支撐和重點領域，以順應社會信息化、網絡化、虛擬 <a href="http://sardk.com/wp-opml.php" rel="nofollow">&#34277;&#23616;24&#23567;&#26178; &#39640;&#38596;</a> 化的發展趨勢，落實大零售銀行戰略，走具有中信特色的網絡銀行產品創新道路 樂威壯 防偽，建立差異化競爭優勢 藥局24小時 高雄，未來將實現“再造一個網上中信銀行”的戰略目標除]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3179</wp:comment_id>
			<wp:comment_author><![CDATA[Dan East]]></wp:comment_author>
			<wp:comment_author_email>dan.east@bentley.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bentley.com</wp:comment_author_url>
			<wp:comment_author_IP>64.90.224.40</wp:comment_author_IP>
			<wp:comment_date>2010-12-17 17:51:42</wp:comment_date>
			<wp:comment_date_gmt>2010-12-17 17:51:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian, 
I've also been tasked with comparing Silverlight with Adobe Flex/Flash/AIR, so your blog posts are timely and very informative. I look forward to future posts. Interesting how some companies with WPF / Silverlight expertise are now using Flex/Flash in their browser apps (AutoCAD-WS) and AIR for apps across multiple platforms (NY Times Reader). Microsoft even went the HTML/CSS/JavaScript route for their Office Web Applications and only used Silverlight sparingly.
Dan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3117</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-%E2%80%94-CCLR-vs-ActionScript3AVM-Part-1</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2010-12-17 03:07:42</wp:comment_date>
			<wp:comment_date_gmt>2010-12-17 03:07:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cross-Training in Silverlight &amp; Flex — C#/CLR vs ActionScript3/AVM Part 1...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3116</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2010-12-17 03:02:25</wp:comment_date>
			<wp:comment_date_gmt>2010-12-17 03:02:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] C#/CLR vs ActionScript/AVM (Part 1) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23466</wp:comment_id>
			<wp:comment_author><![CDATA[proxy]]></wp:comment_author>
			<wp:comment_author_email>vida_penny@vegemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dj-meme.com/2013/02/03/what/</wp:comment_author_url>
			<wp:comment_author_IP>176.31.59.240</wp:comment_author_IP>
			<wp:comment_date>2014-02-23 13:26:06</wp:comment_date>
			<wp:comment_date_gmt>2014-02-23 13:26:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's simple to get caught up in your individual writing and let it pull you along.
For example: open <A> within your browser and look for anything (Twilight for instance). The basics within the main computer aren't interrupted inside the process and therefore help in high performance.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23376</wp:comment_id>
			<wp:comment_author><![CDATA[code highlighting]]></wp:comment_author>
			<wp:comment_author_email>friedapugh@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://snippbin.com/4kwTFdE9?strLangue=fr</wp:comment_author_url>
			<wp:comment_author_IP>91.121.136.186</wp:comment_author_IP>
			<wp:comment_date>2014-02-14 01:12:55</wp:comment_date>
			<wp:comment_date_gmt>2014-02-14 01:12:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow, fantastic blog layout! How long have you been blogging for?
you made blogging look easy. The overall look of your website 
is magnificent, let alone the content!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54204</wp:comment_id>
			<wp:comment_author><![CDATA[borse bauletto gucci]]></wp:comment_author>
			<wp:comment_author_email>kowr61@pubmail886.com</wp:comment_author_email>
			<wp:comment_author_url>http://dfpelettronica.com/lettroni/borse-bauletto-gucci.html</wp:comment_author_url>
			<wp:comment_author_IP>45.79.75.183</wp:comment_author_IP>
			<wp:comment_date>2015-06-19 08:09:38</wp:comment_date>
			<wp:comment_date_gmt>2015-06-19 08:09:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valencia (València doing Valencian) [1], pronounced /balenja <a href="http://www.bikefanatix.pl/ikefanat/borse-gucci-modelli.html" rel="nofollow">borse gucci modelli</a> / (Bmy oh myl EHN thee ) here in spanish, <a href="http://www.euroformes.fr/eurofor/prezzo-borse-gucci.html" rel="nofollow">prezzo borse gucci</a>  in addition to the /balensia/ (Val ehn catch a glimpse of oh) of Valencian, could be fabulous old locale and the main town of the empire of Valencia domain of the nation which is usually worth the  <a href="http://www.palestragood.com/strago/borse-gucci-online-outlet.html" rel="nofollow">borse gucci online outlet</a> m]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54202</wp:comment_id>
			<wp:comment_author><![CDATA[nuova borsa gucci]]></wp:comment_author>
			<wp:comment_author_email>jmqj00@pubmail886.com</wp:comment_author_email>
			<wp:comment_author_url>http://icel2013.com/icel/nuova-borsa-gucci.html</wp:comment_author_url>
			<wp:comment_author_IP>45.79.171.250</wp:comment_author_IP>
			<wp:comment_date>2015-06-19 08:07:42</wp:comment_date>
			<wp:comment_date_gmt>2015-06-19 08:07:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Este artculo  <a href="http://sokol.mricna.cz/mricna/borsa-gucci-shopping.html" rel="nofollow">borsa gucci shopping</a> analiza united nations movi <a href="http://www.palestragood.com/strago/gucci-collezione-borse.html" rel="nofollow">gucci collezione borse</a> miento religioso ocurrido la delete segda mitad siglo XVIII (1769) durante una regin minimal de l. a,chicago Nueva Espaa <a href="http://www.bikefanatix.pl/ikefanat/gucci-borse-outlet-on-line.html" rel="nofollow">gucci borse outlet on line</a> , Conocida como Sierra pour Tutotepec (legitimate estado p Hidalgo). Este fue liderado por un anciano otom cual predicaba el inminente termi]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30488</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.flobby.org/blogs/post/144218]]></wp:comment_author>
			<wp:comment_author_email>michaelabarron@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.flobby.org/blogs/post/144218</wp:comment_author_url>
			<wp:comment_author_IP>23.95.22.59</wp:comment_author_IP>
			<wp:comment_date>2014-10-18 02:29:09</wp:comment_date>
			<wp:comment_date_gmt>2014-10-18 02:29:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cross-Training in Silverlight &amp; Flex - C#/CLR 
vs ActionScript3/AVM Part 1 ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79492</wp:comment_id>
			<wp:comment_author><![CDATA[site]]></wp:comment_author>
			<wp:comment_author_email>mariettadecastella@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.pinterest.com/pin/72128031509927497/</wp:comment_author_url>
			<wp:comment_author_IP>46.99.45.32</wp:comment_author_IP>
			<wp:comment_date>2015-11-15 17:34:54</wp:comment_date>
			<wp:comment_date_gmt>2015-11-15 17:34:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice weblog here! Also your web site quite a bit up very fast!
What host are you the usage of? Can I get your associate link for your host?
I want my web site loaded up as quickly as yours lol]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Training in Silverlight &amp; Flex&#8211;MVVM vs Presentation Model</title>
		<link>http://houseofbilz.com/archives/2010/12/29/cross-training-in-silverlight-flexmvvm-vs-presentation-model/</link>
		<pubDate>Wed, 29 Dec 2010 03:01:26 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=236</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More <a href="http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/">Cross-Training in SIlverlight and Flex</a></p>  <p><a href="http://dotnetshoutout.com/Silverlight-vs-Flex-MVVM-vs-Presentation-Model" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2010%2F12%2F29%2Fcross-training-in-silverlight-flexmvvm-vs-presentation-model%2F" /></a></p>  <p>This is probably my favorite topic in this Silverlight/Flex series.&#160; In the Silverlight world, I have <a href="http://houseofbilz.com/archives/2009/05/22/adventures-in-mvvm-model-view-viewmodel/">written extensively about the MVVM</a> (Model-View-ViewModel) – a separated presentation pattern for stateful clients (like Rich Internet Applications).&#160; When I got into Flex, I was shocked to find out how easy the pattern was to implement.&#160; Developers in the Microsoft space call it MVVM but it was coined by <a href="http://martinfowler.com/">Martin Fowler</a> many years previous as <a href="http://martinfowler.com/eaaDev/PresentationModel.html">Presentation Model</a>.&#160; I will use these terms interchangeably but mostly refer to MVVM when explaining the SIlverlight story and Presentation Model when explaining the Flex story.</p>  <p align="left">If you do a Google search today for “<a href="http://www.google.com/search?q=mvvm+and+flex">MVVM and Flex</a>”, the first post is by somebody who claims that MVVM is not a good fit for Flex.&#160; I couldn’t disagree more.&#160; Out of the box, the Flex framework makes it much easier to implement a Presentation Model than similar MVVM implementations in Silverlight.&#160; That is not to say that there aren’t good third-party libraries that make it easier in Silverlight, but without any help, it is easier to do in Flex.&#160; </p>  <p>I will show some examples and they should speak for themselves.</p>  <div style="background-color: #e8f3ff">   <h3>MVVM in Silverlight</h3>    <p>In the MVVM pattern, there are two particular interfaces that are interesting to know:</p>    <ul>     <li><strong>INotifyPropertyChanged</strong> – an interface that lets ViewModels notify the UI when a property changes </li>      <li><strong>ICommand</strong> – an interface that allows the UI to execute code on the ViewModels </li>   </ul>    <p>Lets say we have a simple application where the model is excluded because it is not relevant to what I am trying to show.&#160; The behavior is simple: when the user presses a button, read the text in the input field and output “Hello &lt;input&gt;”.&#160; A simple implementation of the view might look like this:</p>    <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;UserControl.Resources&gt;
    &lt;local:ViewModel x:Key=&quot;ViewModel&quot; /&gt;
&lt;/UserControl.Resources&gt;

&lt;Border BorderThickness=&quot;5&quot; CornerRadius=&quot;5&quot; DataContext=&quot;{StaticResource ViewModel}&quot;           
        BorderBrush=&quot;Black&quot; Height=&quot;Auto&quot; Width=&quot;Auto&quot;&gt;
    &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;
        &lt;TextBox Width=&quot;100&quot; Margin=&quot;3&quot; Text=&quot;{Binding Input, Mode=TwoWay}&quot; /&gt;
        &lt;Button Content=&quot;Say Hello&quot; Margin=&quot;3&quot; Command=&quot;{Binding SayHelloCommand}&quot; /&gt;
        &lt;TextBlock Margin=&quot;3&quot; VerticalAlignment=&quot;Bottom&quot; Text=&quot;{Binding Output}&quot; /&gt;
    &lt;/StackPanel&gt;
&lt;/Border&gt;</pre>

  <p>The ViewModel to support that logic looks like this:</p>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public class ViewModel : INotifyPropertyChanged
{
    public string Input { get; set; }

    private string _output = string.Empty;
    public string Output
    {
        get { return _output; }
        set
        {
            if (_output == value)
                return;

            _output = value;
            RaisePropertyChanged(&quot;Output&quot;);
        }
    }

    public ICommand SayHelloCommand { get; private set; }

    public ViewModel()
    {
        SayHelloCommand = new DelegateCommand(SayHello);
    }

    private void SayHello()
    {
        Output = &quot;Hello, &quot; + Input;
    }

    protected void RaisePropertyChanged(string propertyName)
    {
        var handlers = PropertyChanged;
        if(handlers != null)
            handlers(this, new PropertyChangedEventArgs(propertyName));
    }

    public event PropertyChangedEventHandler PropertyChanged;
}

public class DelegateCommand : ICommand
{
    private readonly Action action;

    public DelegateCommand(Action action)
    {
        this.action = action;
    }

    public bool CanExecute(object parameter)
    {
        return true;
    }

    public void Execute(object parameter)
    {
        action();
    }

    public event EventHandler CanExecuteChanged;
}</pre>

  <p>This example, admittedly, is a bit hyperbolic.&#160; It includes everything you need to write a ViewModel from scratch.&#160; In reality, the <strong>DelegateCommand</strong> is written once and reused.&#160; In addition, most people will at least abstract the <strong>RaisePropertyChanged</strong> and <strong>PropertyChanged</strong> code by moveing it to a <strong>ViewModelBase</strong> class.&#160; On that note, there are several third-party frameworks for making MVVM more pleasant in Silverlight.&#160; I wrote one of those helpers, called <a href="http://viewmodelsupport.codeplex.com/">ViewModelSupport</a>.&#160; Using the powerful, somewhat magical base class, the previous code can be re-written as:</p>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public class ViewModel : ViewModelBase
{
    public string Input
    {
        get { return Get&lt;string&gt;(&quot;Input&quot;); }
        set { Set(&quot;Input&quot;, value); }
    }

    public string Output
    {
        get { return Get&lt;string&gt;(&quot;Output&quot;); }
        set { Set(&quot;Output&quot;, value); }
    }

    public void Execute_SayHelloCommand(object param)
    {
        Output = &quot;Hello, &quot; + Input;
    }
}</pre>

  <p>The latter is certainly better than the former, but my point is that there is a lot of ceremony and plumbing involved in order to get Silverlight applications wedged into the MVVM pattern.&#160; Please don’t misunderstand me: MVVM is usually the best pattern for developing separated Silverlight applications.&#160; I am only suggesting that there is a lot of ceremony.</p>

  <p>In addition to my <a href="http://viewmodelsupport.codeplex.com/">ViewModelSupport</a> package, there are several other libraries out there that help you write implement MVVM in Silverlight including:</p>

  <ul>
    <li><a href="http://viewmodelsupport.codeplex.com/">MVVM Light Toolkit</a> by Laurent Bugnion </li>

    <li><a href="http://caliburnmicro.codeplex.com/">Caliburn Micro</a> by Rob Eisenberg </li>

    <li><a href="http://code.google.com/p/notifypropertyweaver/">NotifyPropertyWeaver</a> by Simon Cropp </li>
  </ul>
</div>

<div style="background-color: #ffe8e8">
  <h2>Presentation Model in Flex</h2>

  <p>In Flex, the binding system is very different than the way Silverlight does it.&#160; Notifications are similar to <strong>INotifyPropertyChanged</strong> in Silverlight, but there is no interface specifically for property changes.&#160; Instead, there is just an event that gets fired called “&lt;property&gt;Changed” where &lt;property&gt; is the name of the property that changed.&#160; It is also simplified in that you can decorate your class or individual properties with <strong>[Bindable]</strong> and the Flex compiler writes all of your notification code for you.&#160; As far as executing code in the Presentation Model, there is no <strong>ICommand</strong> like in Silverlight – the view simply calls into the Presentation Model directly.&#160; </p>

  <p>Lets say we have a simple application where the model is excluded because it is not relevant to what I am trying to show.&#160; The behavior is simple: when the user presses a button, read the text in the input field and output “Hello &lt;input&gt;”.&#160; A simple implementation of the view might look like this:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;fx:Script&gt; 
        &lt;![CDATA[ 
            var pm:PresentationModel = new PresentationModel(); 
        ]]&gt; 
&lt;/fx:Script&gt; 
    
&lt;s:BorderContainer borderWeight=&quot;5&quot; cornerRadius=&quot;5&quot;           
                   borderColor=&quot;black&quot; minHeight=&quot;0&quot; width=&quot;100%&quot;&gt; 
    &lt;s:HGroup left=&quot;3&quot; right=&quot;3&quot; top=&quot;3&quot; bottom=&quot;3&quot;&gt; 
        &lt;s:TextInput width=&quot;100&quot; text=&quot;@{pm.input}&quot;/&gt; 
        &lt;s:Button label=&quot;Say Hello&quot; left=&quot;6&quot; click=&quot;pm.sayHello()&quot; /&gt; 
        &lt;s:Label left=&quot;6&quot; verticalAlign=&quot;bottom&quot; height=&quot;100%&quot; text=&quot;{pm.output}&quot;&gt; 
    &lt;/s:HGroup&gt; 
&lt;/s:BorderContainer&gt;</pre>

  <p>The Presentation Model then looks like this:</p>

  <pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">[Bindable]
public class PresentationModel
{
    public var input:String;
    public var output:String;
        
    public function sayHello():void {            
        output = &quot;Hello, &quot; + input;
    }
}</pre>

  <p>That’s it!&#160; The <strong>[Bindable]</strong> flag tells the <strong>input</strong> and <strong>output</strong> properties to send <strong>inputChanged</strong> and <strong>outputChanged</strong> events automatically.&#160; The <strong>sayHello</strong> function gets called directly from the view without the need to hook up a command.&#160; It is really that easy to implement Presentation Models in Flex.</p>

  <p>Much like the Silverlight side, there are frameworks that will help you along the way.&#160; Because the binding system is as strong as it is in Flex (more details in a future post), you don’t need much to implement Presentation Models.&#160; At a very minimum, though, I recommend using an Inversion of Control framework like <a href="http://code.google.com/p/flex-ioc/">flex-ioc</a>, <a href="http://www.robotlegs.org/">robotlegs</a> or <a href="http://swizframework.org/">Swiz</a>.&#160; </p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2010-12-29 03:01:26</wp:post_date>
		<wp:post_date_gmt>2010-12-29 03:01:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-training-in-silverlight-flexmvvm-vs-presentation-model</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="mvvm"><![CDATA[MVVM]]></category>
		<category domain="post_tag" nicename="presentation-model"><![CDATA[Presentation Model]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7105</wp:comment_id>
			<wp:comment_author><![CDATA[A Windows Dev Dive Into Flex &#8211; The First 45 Minutes | varbits]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://varbits.wordpress.com/2011/03/16/a-windows-dev-dive-into-flex-the-first-45-minutes/</wp:comment_author_url>
			<wp:comment_author_IP>72.233.96.141</wp:comment_author_IP>
			<wp:comment_date>2011-03-16 06:17:19</wp:comment_date>
			<wp:comment_date_gmt>2011-03-16 06:17:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 11:15p Surfed around for flex mvvm. 1st to popup was an argument against: Binary Bob’s Blog » Why MVVM does not fit with Flex And here&#8217;s one for: Cross-Training in Silverlight &amp; Flex–MVVM vs Presentation Model « Brian Genisio&#8217;s House... [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7107</wp:comment_id>
			<wp:comment_author><![CDATA[Presentation Model and Multiple Screens (Part 1) | RIA RockStars]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://riarockstars.com/2011/03/16/presentation-model-and-multiple-screens-part-1/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.24.188</wp:comment_author_IP>
			<wp:comment_date>2011-03-16 14:02:43</wp:comment_date>
			<wp:comment_date_gmt>2011-03-16 14:02:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] for Flex. Comparing a canonical MVVM example in Silverlight with the same example in Flex highlights how well Flex works with the Presentation Model pattern. The data binding story in Flex (both in [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7109</wp:comment_id>
			<wp:comment_author><![CDATA[This Windows Dev Dives Into Flex &#8211; The First 45 Minutes | varbits]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://varbits.wordpress.com/2011/03/17/this-windows-dev-dives-into-flex-the-first-45-minutes/</wp:comment_author_url>
			<wp:comment_author_IP>72.233.96.151</wp:comment_author_IP>
			<wp:comment_date>2011-03-18 03:51:16</wp:comment_date>
			<wp:comment_date_gmt>2011-03-18 03:51:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 11:15p Surfed around for keywords flex and mvvm. 1st to popup was an argument against: Binary Bob’s Blog » Why MVVM does not fit with Flex And here&#8217;s one for: Cross-Training in Silverlight &amp; Flex–MVVM vs Presentation Model « Brian Genisio&#8217;s House... [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7298</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.14.36.209</wp:comment_author_IP>
			<wp:comment_date>2011-04-05 13:59:09</wp:comment_date>
			<wp:comment_date_gmt>2011-04-05 13:59:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Justin:

Though I agree that the data binding story in Flex is more flexible, I don't agree that Silverlight is as deficient as you suggest.  Sure, they use DataContexts as the default binding source for the property bindings, but that is really just a convenience.  It doesn't preclude you from binding properties to other data sources.

For instance, you might have a ListBox where the data context is one thing, but the items source is another:

&lt;UserControl.Resources&gt;
&nbsp;&nbsp;&nbsp;&lt;local:MyClass1 x:Key="thing1"/&gt;
&nbsp;&nbsp;&nbsp;&lt;local:MyClass2 x:Key="thing2"/&gt;
&lt;/UserControl.Resources&gt;

&lt;ListBox DataContext="{Binding {StaticResource thing}}" SelectedItem="{Binding PropertyOnThing1, Mode=TwoWay}" ItemsSource="{Binding PropertyOnThing2, Source={StaticResource thing2}}" /&gt;

As you can see, you aren't relegated to a single data context.  I still prefer the less declarative but more flexible approach that Flex uses, though.  It is generally less verbose.

As far as "Micro-architectures", there are several: Magellan, Caliburn Micro, MVVM Light, and Prism are a few that jump into my brain right now.  Many more exist.

Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6748</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex&ndash;Data Binding &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/01/24/cross-training-in-silverlight-flexdata-binding/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2011-01-25 02:50:10</wp:comment_date>
			<wp:comment_date_gmt>2011-01-25 02:50:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] where you declaratively state that a property in the view is “bound” to data in your model (or presentation behavior layer).&#160; This means that when the model data changes, the UI is updated.&#160; Conversely, when a [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71991</wp:comment_id>
			<wp:comment_author><![CDATA[dad handyman service]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.allamericanhandyman.net/goodfellow-afb-tx/</wp:comment_author_url>
			<wp:comment_author_IP>89.44.23.35</wp:comment_author_IP>
			<wp:comment_date>2015-09-14 21:35:06</wp:comment_date>
			<wp:comment_date_gmt>2015-09-14 21:35:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>dad handyman service...</strong>

Cross-Training in Silverlight &amp; Flex-MVVM vs Presentation Model « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7278</wp:comment_id>
			<wp:comment_author><![CDATA[Justin J. Moses]]></wp:comment_author>
			<wp:comment_author_email>justinjmoses@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://about.me/justinj</wp:comment_author_url>
			<wp:comment_author_IP>92.24.192.83</wp:comment_author_IP>
			<wp:comment_date>2011-04-04 19:31:25</wp:comment_date>
			<wp:comment_date_gmt>2011-04-04 19:31:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian, 

   I am really enjoying this series. You've opted to keep it simple and concise, and I applaud you. 

  One thing I think you've neglected to mention here however is the fact that Silverlight encourages you to use a ViewModel, through the requirement of setting a DataContext. As you know, Flex has no such requirements, and it is trivial to bring in multiple models/handlers/whatever into the one view. In fact, you don't just bind properties, you can bind in whatever you like. As such, there is a lot more flexibility in how you architect your solution. It's funny to me, having come this from the other direction to you (from Flex to Silverlight), I initially found myself wondering why there was so little deliberation amongst the Silverlight community about micro-architectures. 

Justin]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6777</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex–Data Binding | www.nalli.net]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.nalli.net/2011/01/cross-training-in-silverlight-flex%e2%80%93data-binding-2/</wp:comment_author_url>
			<wp:comment_author_IP>173.236.40.122</wp:comment_author_IP>
			<wp:comment_date>2011-01-26 07:06:43</wp:comment_date>
			<wp:comment_date_gmt>2011-01-26 07:06:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] declaratively state that a property in the view is &ldquo;bound&rdquo; to data in your model (or presentation behavior layer). This means that when the model data changes, the UI is updated. Conversely, when a user sets [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4910</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Ward]]></wp:comment_author>
			<wp:comment_author_email>mike@blueonionsoftware.com</wp:comment_author_email>
			<wp:comment_author_url>http://blueonionsoftware.com</wp:comment_author_url>
			<wp:comment_author_IP>68.40.12.103</wp:comment_author_IP>
			<wp:comment_date>2011-01-03 13:35:44</wp:comment_date>
			<wp:comment_date_gmt>2011-01-03 13:35:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,

The Silverlight part of this article is one of the best and most concise presentations of MVVM I've seen. Nice work. Also, good reminder about your ViewModelBase work. I was noodling around with WPF the other day and looking for an MVVM. Totally forgot you wrote one. See you at Codemash.

- Mike]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4905</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Cross-Training in Silverlight &amp; Flex–MVVM vs Presentation Model « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2010/12/29/cross-training-in-silverlight-flexmvvm-vs-presentation-model/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-03 12:23:15</wp:comment_date>
			<wp:comment_date_gmt>2011-01-03 12:23:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Brian Genisio, Brian Genisio. Brian Genisio said: Blogged: Cross-Training in Silverlight and Flex -- MVVM vs Presentation Model -- http://j.mp/dPLIIE [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4900</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Silverlight-vs-Flex-MVVM-vs-Presentation-Model</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2011-01-03 11:50:39</wp:comment_date>
			<wp:comment_date_gmt>2011-01-03 11:50:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Silverlight vs Flex – MVVM vs Presentation Model...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4898</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2011-01-03 11:44:46</wp:comment_date>
			<wp:comment_date_gmt>2011-01-03 11:44:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] MVVM vs Presentation Model [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79871</wp:comment_id>
			<wp:comment_author><![CDATA[bola tangkas]]></wp:comment_author>
			<wp:comment_author_email>monroepicton@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.einzelstueck.ch/blog/2014/10/25/fast-fashion-must-haves-und-vintage-wahn-der-kleiderschrank.html</wp:comment_author_url>
			<wp:comment_author_IP>206.144.68.227</wp:comment_author_IP>
			<wp:comment_date>2015-12-23 02:58:47</wp:comment_date>
			<wp:comment_date_gmt>2015-12-23 02:58:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Robot Butler comes with wilds (Robot Butler), scatters (Tray), 12 free spins, a bonus 
round, a gamble game, and a top jackpot of 10,000 coins.
You might as well gamble your money - at least them you could possibly retire.
' While it is true that you can find some lenders who will waive refinancing fees to make the initial 
costs more affordable, they may or may not give you the long-term rewards you were looking for.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7045</wp:comment_id>
			<wp:comment_author><![CDATA[ali]]></wp:comment_author>
			<wp:comment_author_email>ali.butt2008@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.152.121.5</wp:comment_author_IP>
			<wp:comment_date>2011-02-22 08:07:04</wp:comment_date>
			<wp:comment_date_gmt>2011-02-22 08:07:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi brain,
 it's good,clean post.Now i have a scenario in which i want to save the user data on button click.
   registration form just 4 fields.

  firstname    txtfirstname

  lastname    txtlastname

  email          txtemail

  telephone   txtphone

   and one save button

Now i set the command property in the ui page is "SaveCommand" and in the view model i
made SaveCommand Property.Now how on save button the above four text boxes values can i get in the view model so that i can insert into the database.And i think there is property CommandParameter how i set the four text boxes in the commandparamete and 
get receive on viewmodel.



Can u help me wht type of code is in the view model so that i can proceed my proof of concept a stuck me for two days.

ur help can be very helpfull for me.

Thnx in advance.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33804</wp:comment_id>
			<wp:comment_author><![CDATA[sabika]]></wp:comment_author>
			<wp:comment_author_email>gudrun_freese@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=o2LLHdlXTLQ</wp:comment_author_url>
			<wp:comment_author_IP>69.12.90.178</wp:comment_author_IP>
			<wp:comment_date>2014-12-25 11:10:25</wp:comment_date>
			<wp:comment_date_gmt>2014-12-25 11:10:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Most protein shakes are loaded with sugar, fat, and other ingredients that aren't even necessary for the body.
As mentioned earlier, Visalus seriously isn't a gimmick.
For anybody who is scanning this report, I would guess that you are looking 
to register with Visalus and so are searching around for 
reputable information about Visalus Sciences.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64730</wp:comment_id>
			<wp:comment_author><![CDATA[téléchargement non de vapeur]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.gaiaonline.com/journal/?mode=view&amp;post_id=37271007&amp;u=38202649</wp:comment_author_url>
			<wp:comment_author_IP>93.118.66.194</wp:comment_author_IP>
			<wp:comment_date>2015-08-10 00:12:10</wp:comment_date>
			<wp:comment_date_gmt>2015-08-10 00:12:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>téléchargement non de vapeur...</strong>

Cross-Training in Silverlight &amp; Flex-MVVM vs Presentation Model « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Introducing&#8230; ActionLinq</title>
		<link>http://houseofbilz.com/archives/2011/01/04/introducing-actionlinq/</link>
		<pubDate>Tue, 04 Jan 2011 03:02:48 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="https://bitbucket.org/briangenisio/actionlinq/"><img src="https://bitbucket.org/briangenisio/actionlinq/raw/395b49a6b4ec/Assets/ActionLINQ.png" /></a></p>  <p>I am excited to release a pet project of mine that I have been developing for a few months.&#160; <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> is a complete <a href="http://msdn.microsoft.com/library/bb397919.aspx">LINQ-to-Objects</a> implementation for ActionScript 3.0.&#160; Including the same deferred execution behavior as LINQ, <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> is a functional query library designed to process and manipulate data in ActionScript 3.0.&#160; It is especially useful for processing data received from web services and manipulating it to fit into the view.</p>  <p>Let me illustrate what <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> can do with an example of some basic data processing:</p>  <pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">var transformed:Array =
        [-4, -3, -2, -1, 0, 1, 2, 3, 4]
        .where(isEven)
        .select(square)
        .distinct()
        .reverse()
        .toArray();

assertThat(transformed, array(0, 4, 16));</pre>

<p><a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> can query pretty much any collection type (Array, ArrayCollection, ArrayList, XMLList, Vector, etc) and it can output it just the same.&#160; </p>

<p>Lets look at a slightly more real-world example.&#160; Assume that the <strong>xml</strong> variable is data received from something like a REST service.&#160; We want to create an ordered collection of distinct categories from the XML that was received:</p>

<pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">var xml = &lt;products&gt;
              &lt;product name=&quot;Beef&quot;         category=&quot;Meat&quot; /&gt;
              &lt;product name=&quot;Hot Dog Buns&quot; category=&quot;Bread&quot; /&gt;
              &lt;product name=&quot;Bran Flakes&quot;  category=&quot;Cereal&quot; /&gt;
              &lt;product name=&quot;Chicken&quot;      category=&quot;Meat&quot; /&gt;
              &lt;product name=&quot;White Bread&quot;  category=&quot;Bread&quot; /&gt;
              &lt;product name=&quot;Pita Bread&quot;   category=&quot;Bread&quot; /&gt;
          &lt;/products&gt;;

var categories:ArrayCollection =
        Enumerable.from(xml.product)
        .select(function(product):String { return product.@category })
        .distinct()
        .orderBy(identity)
        .toArrayCollection();</pre>

<p>Running that query lets you bind the <strong>categories</strong> variable to a <strong>DropDownList</strong> with a very expressive, functional query on the data that was received.</p>

<p>These are just a few examples.&#160; You can find a lot more documentation at the <a href="https://bitbucket.org/briangenisio/actionlinq/">project site</a>.</p>

<h2>How do I Get ActionLinq?</h2>

<p>I have made <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> an open-source project on <a href="https://bitbucket.org">BitBucket.org</a> under the Apache 2.0 license.&#160; I chose that license because I want you to be able to use it for any use without charge as long as you maintain attribution.&#160; In other words, fork it, modify it, re-distribute it, do whatever for any reason.&#160; Just give me and/or SRT Solutions credit for the work that ActionLinq provides.</p>

<p>The BitBucket site includes a lot of documentation for <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> in the Wiki.&#160; There are also a lot of unit tests in the source which document everything that <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> is meant to do.</p>

<p>If you use it, let me know!&#160; I’d love to know who is using it.&#160; If you find problems, also let me know in the “Issues” section of the project site.</p>

<h2>Why Did I Create ActionLinq?</h2>

<h3>Overcome the Flex Collections Inconsistencies</h3>

<p>When I first came to Flex, I was frustrated by the inconsistencies between the different collection types.&#160; Some types, like Array, include useful functions like <strong>map</strong> and <strong>filter</strong> (<strong>select</strong> and <strong>where</strong> in <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a>) but other types like ArrayList do not.&#160; Although an interface named <strong>IList</strong> exists, most of the collections do not implement it.&#160; Some collections use a <strong>length</strong> property.&#160; Others use a <strong>length()</strong> method.&#160; The <strong>Vector</strong> class gives a useful typed data set but is difficult to go back and forth between it and other collection types.&#160; Inconsistencies forced me to convert my data collections from one collection type to another just to get the functionality I needed. I found myself writing more code than I wanted to work my data. Still, I was missing many of the useful capabilities that I was used to from my Silverlight and .Net development.</p>

<p>I quickly realized that what I really wanted was LINQ.&#160; I threw together a proof of concept by implementing <strong>select</strong>, <strong>where</strong>, and <strong>selectMany</strong>.&#160; I found myself using these methods throughout my application.&#160; As I found myself wanting another LINQ capability, I added it to my <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> library.&#160; The next thing I knew: I had a mostly complete LINQ-to-Objects implementation.&#160; A bit more work and I had a complete clone of LINQ-to-Objects.</p>

<h3>Aid .Net Developers in Flex Development</h3>

<p>I have been preaching lately that Silverlight and Flex developers need to get together and learn from one another.&#160; Where Silverlight has some great features (LINQ is one of them), Flex has some pretty great features as well.&#160; I believe that a library like <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> will facilitate the learning process from Silverlight to Flex by leveraging existing Silverlight knowledge.</p>

<h3>Get to Know LINQ</h3>

<p>There is no better way to fully understand the power and intricacies of LINQ in Silverlight and .Net than by implementing it on a different platform.&#160; By implementing every function and every overload in the LINQ space, I was forced to understand what everything is used for because I had to write unit tests that gave examples of using the functionality.</p>

<h3>Get to Know Flex and ActionScript 3</h3>

<p>There is no better way to get to know a new environment than to implement a familiar set of functionality in it.&#160; I was forced to learn about areas of Flex and ActionScript 3.0 that I would not have likely done on my own.&#160; I learned all about functional programming and closures in AS3, unit testing in Flex, the dynamic capabilities of AS3, monkey patching and ASDoc to name a few.&#160; I have come out of the <a href="https://bitbucket.org/briangenisio/actionlinq/">ActionLinq</a> project with a strong understanding of the ActionScript 3.0 language and the more esoteric but powerful features of the language.&#160; I was also painfully made aware of the limitations of ActionScript that I miss from C#: Generics, method overloading, operator overloading, yielding and lambdas to name a few.</p>

<h2></h2>

<h2>Go Use It!</h2>

<p>Give it a try.&#160; Let me know how it goes.&#160; Have fun.&#160; Enjoy!</p>

<p><a href="http://dotnetshoutout.com/Introducing%E2%80%A6-ActionLinq" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2011%2F01%2F04%2Fintroducing-actionlinq%2F" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date>2011-01-04 03:02:48</wp:post_date>
		<wp:post_date_gmt>2011-01-04 03:02:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-actionlinq</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="actionlinq"><![CDATA[ActionLinq]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[Flash]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[Linq]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28535</wp:comment_id>
			<wp:comment_author><![CDATA[attorney underwood]]></wp:comment_author>
			<wp:comment_author_email>tyrellbermudez@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://ninjaspiele.com/profile/vastrong.html</wp:comment_author_url>
			<wp:comment_author_IP>89.47.21.114</wp:comment_author_IP>
			<wp:comment_date>2014-08-19 01:23:11</wp:comment_date>
			<wp:comment_date_gmt>2014-08-19 01:23:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I tend not to leave many comments, however i did a few searching and wound up here Introducing...
ActionLinq ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29808</wp:comment_id>
			<wp:comment_author><![CDATA[drop camera]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Ainengs.com/new/?document_srl=451821&amp;mid=board</wp:comment_author_url>
			<wp:comment_author_IP>117.169.1.139</wp:comment_author_IP>
			<wp:comment_date>2014-10-03 12:31:57</wp:comment_date>
			<wp:comment_date_gmt>2014-10-03 12:31:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>drop camera...</strong>

Introducing... ActionLinq « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29858</wp:comment_id>
			<wp:comment_author><![CDATA[why not try this out]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://183.96.179.114/xe/hongssy_board1/1091838</wp:comment_author_url>
			<wp:comment_author_IP>172.246.249.10</wp:comment_author_IP>
			<wp:comment_date>2014-10-04 18:34:34</wp:comment_date>
			<wp:comment_date_gmt>2014-10-04 18:34:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>why not try this out...</strong>

Introducing... ActionLinq « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80274</wp:comment_id>
			<wp:comment_author><![CDATA[hosting terbaik indonesia.web hosting terbaik]]></wp:comment_author>
			<wp:comment_author_email>malissapaschke@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hostingmurahusa.com/index.php/apa-itu-domain/</wp:comment_author_url>
			<wp:comment_author_IP>216.158.196.254</wp:comment_author_IP>
			<wp:comment_date>2016-01-30 21:15:01</wp:comment_date>
			<wp:comment_date_gmt>2016-01-30 21:15:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tulisan bermanfaat soal hosting ini keren banget.
Keren sekali dan bermanfaat. Tiap orang yang pakai ataupun sedang mencari jasa web hosting terbaik di Indonesia perlu 
baca artikel ini. Kunjungi juga website saya ya, ada tulisan menarik yg pasti berguna bagi para 
pencari layanan web hosting. Terima kasih.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6885</wp:comment_id>
			<wp:comment_author><![CDATA[Marty Pitt]]></wp:comment_author>
			<wp:comment_author_email>martypitt@me.com</wp:comment_author_email>
			<wp:comment_author_url>http://martypitt.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>209.29.25.33</wp:comment_author_IP>
			<wp:comment_date>2011-02-02 13:51:43</wp:comment_date>
			<wp:comment_date_gmt>2011-02-02 13:51:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow -- This is awesome.  I've been hanging out for a decent LINQ port for a while.  Congratulations!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6887</wp:comment_id>
			<wp:comment_author><![CDATA[Roland Zwaga]]></wp:comment_author>
			<wp:comment_author_email>scab@dds.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.springactionscript.org</wp:comment_author_url>
			<wp:comment_author_IP>213.125.56.234</wp:comment_author_IP>
			<wp:comment_date>2011-02-02 13:55:32</wp:comment_date>
			<wp:comment_date_gmt>2011-02-02 13:55:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very impressive work! Ever since I started working in actionscript did I feel the pain of not having LINQ at my disposal, I am very happy to see someone making the effort of porting it.
Great job!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9015</wp:comment_id>
			<wp:comment_author><![CDATA[Akbar Goldust]]></wp:comment_author>
			<wp:comment_author_email>info@alborzsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.AlborzSoft.com</wp:comment_author_url>
			<wp:comment_author_IP>31.7.58.197</wp:comment_author_IP>
			<wp:comment_date>2011-08-12 05:54:08</wp:comment_date>
			<wp:comment_date_gmt>2011-08-12 05:54:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi

I found out of your Class form The Flex Show radio
Thanks for your great work. I am going to use this from now on my projects.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6968</wp:comment_id>
			<wp:comment_author><![CDATA[Jade Freeman]]></wp:comment_author>
			<wp:comment_author_email>freeman@pplant.msu.edu</wp:comment_author_email>
			<wp:comment_author_url>http://www.eas.msu.edu</wp:comment_author_url>
			<wp:comment_author_IP>166.139.54.237</wp:comment_author_IP>
			<wp:comment_date>2011-02-10 04:38:52</wp:comment_date>
			<wp:comment_date_gmt>2011-02-10 04:38:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just wanted to say thanks for the great work!  I'm loving it and already using on a couple of projects.  I'm also doing a presentation to the Michigan Flex Users Group tomorrow (Thursday 02/010) on what we've been able to do with ActionLinq.  Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31777</wp:comment_id>
			<wp:comment_author><![CDATA[top criminal attorneys]]></wp:comment_author>
			<wp:comment_author_email>shereegarner@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.23hq.com/josuesefp/story/16892644</wp:comment_author_url>
			<wp:comment_author_IP>192.99.176.88</wp:comment_author_IP>
			<wp:comment_date>2014-11-09 08:37:48</wp:comment_date>
			<wp:comment_date_gmt>2014-11-09 08:37:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think this is one of the most important info for me.
And i'm glpad reading your article. But should remark on some general things, The web site style iis perfect, the articles is really great 
: D. Good job, cheers]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57768</wp:comment_id>
			<wp:comment_author><![CDATA[Janina]]></wp:comment_author>
			<wp:comment_author_email>lukehaney@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.employeeperformancereview.net</wp:comment_author_url>
			<wp:comment_author_IP>198.55.109.59</wp:comment_author_IP>
			<wp:comment_date>2015-06-30 21:39:46</wp:comment_date>
			<wp:comment_date_gmt>2015-06-30 21:39:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hurrah, that's what I was looking for, what a stuff! present 
here at this weblog, thanks admin of this website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38048</wp:comment_id>
			<wp:comment_author><![CDATA[Raid 5]]></wp:comment_author>
			<wp:comment_author_email>juliejolly@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://fix-my-hard-drive.com/</wp:comment_author_url>
			<wp:comment_author_IP>155.94.155.212</wp:comment_author_IP>
			<wp:comment_date>2015-03-08 13:38:45</wp:comment_date>
			<wp:comment_date_gmt>2015-03-08 13:38:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An interesting discussion is definitely worth comment. I believe that you should 
publish more about this topic, it may not be a taboo matter 
but typically people do not discuss such topics.
To the next! Many thanks!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79785</wp:comment_id>
			<wp:comment_author><![CDATA[Tutorial Mikrotik]]></wp:comment_author>
			<wp:comment_author_email>candice_estell@mailandftp.com</wp:comment_author_email>
			<wp:comment_author_url>http://nbcdns.tumblr.com/</wp:comment_author_url>
			<wp:comment_author_IP>203.192.12.149</wp:comment_author_IP>
			<wp:comment_date>2015-12-08 08:04:17</wp:comment_date>
			<wp:comment_date_gmt>2015-12-08 08:04:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there,  You've done a fantastic job. I'll certainly digg it and personally recommend to my friends.
I'm confident they will be benefited from this web site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37587</wp:comment_id>
			<wp:comment_author><![CDATA[h8asia.com]]></wp:comment_author>
			<wp:comment_author_email>concettahaugen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://h8asia.com</wp:comment_author_url>
			<wp:comment_author_IP>172.245.121.210</wp:comment_author_IP>
			<wp:comment_date>2015-02-27 11:00:04</wp:comment_date>
			<wp:comment_date_gmt>2015-02-27 11:00:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are so awesome! I do not think I've truly read something like this before.
So good to find another person with a few genuine 
thoughts on this subject matter. Seriously.. thank you 
for starting this up. This website is something that's needed on the web, someone with 
a little originality!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40949</wp:comment_id>
			<wp:comment_author><![CDATA[günstiger schlüsseldienst berlin]]></wp:comment_author>
			<wp:comment_author_email>redamatthews@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://poelzi.org/en/2013/10/04/convert-zinnia/</wp:comment_author_url>
			<wp:comment_author_IP>204.44.124.105</wp:comment_author_IP>
			<wp:comment_date>2015-04-26 14:46:43</wp:comment_date>
			<wp:comment_date_gmt>2015-04-26 14:46:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This requires connecting the phone via a special data cable to a special programming unit.

The following detailed loan processing steps explain, &ldquo;What happens next.
) and then matching against a newly created hash over the 
received document (use same hashing algorithm as used by the sender) and matching it against 
the decrypted hash.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27598</wp:comment_id>
			<wp:comment_author><![CDATA[wikipedia]]></wp:comment_author>
			<wp:comment_author_email>guadalupehedditch@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://wikipedia.org</wp:comment_author_url>
			<wp:comment_author_IP>162.212.57.173</wp:comment_author_IP>
			<wp:comment_date>2014-07-09 22:08:44</wp:comment_date>
			<wp:comment_date_gmt>2014-07-09 22:08:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's an awesome paragraph in support of all the internet people; they will get advantage 
from it I am sure.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80450</wp:comment_id>
			<wp:comment_author><![CDATA[Aprender ingles En madrid leccion 1]]></wp:comment_author>
			<wp:comment_author_email>veronique.scherer@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://yagua.paraguay.com/clases-de-ingles-madrid-49021.html</wp:comment_author_url>
			<wp:comment_author_IP>196.196.34.227</wp:comment_author_IP>
			<wp:comment_date>2016-03-02 01:26:59</wp:comment_date>
			<wp:comment_date_gmt>2016-03-02 01:26:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Significa estar viviendo en un país, efectuando actividades lúdicas inmerso en el idioma (siendo esta la mejor 
manera de aprender, puesto que como mejor se retienen las cosas es cuando uno 
está divirtiéndose y gozando). Y eso se traduce en dieciseis horas diarias durante 14 días… Esto va a hacer que pueda incrementar su nivel muy notablemente en solo un par de semanas.

Su fluidez verbal dará un gran salto, desarrollando muy especialmente su entendimiento auditiva del idioma.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5070</wp:comment_id>
			<wp:comment_author><![CDATA[Lyndon Fasanya]]></wp:comment_author>
			<wp:comment_author_email>don.fasanya@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://fasanya.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>90.205.8.222</wp:comment_author_IP>
			<wp:comment_date>2011-01-05 00:37:40</wp:comment_date>
			<wp:comment_date_gmt>2011-01-05 00:37:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is great work I'll let you know what I get up to with it - Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72125</wp:comment_id>
			<wp:comment_author><![CDATA[Demetrius]]></wp:comment_author>
			<wp:comment_author_email>beth_kier@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nursingcenter.com/evidencebasedpracticenetwork/EBP-Blog-Landing-page/ShowMeTheEvidence/April-2012/Are-meal-replacement-plans-better-than-low-calorie</wp:comment_author_url>
			<wp:comment_author_IP>104.247.121.239</wp:comment_author_IP>
			<wp:comment_date>2015-09-15 20:32:48</wp:comment_date>
			<wp:comment_date_gmt>2015-09-15 20:32:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can the knowledge of mathematics help a gambler to win. What do you believe have been the 
obstacles to reaching your healthy goals. in China but there is an ongoing debate 
over whether the first casinos began in Ancient China or the Nile Delta.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5023</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.248.72.133</wp:comment_author_IP>
			<wp:comment_date>2011-01-04 16:17:13</wp:comment_date>
			<wp:comment_date_gmt>2011-01-04 16:17:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mike:  No, I don't have any plans to port this to JavaScript.  Mostly because there are already at least two implementations available for JavaScrilpt: jslinq and linqjs.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5024</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Introducing… ActionLinq « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2011/01/04/introducing-actionlinq/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-04 16:30:03</wp:comment_date>
			<wp:comment_date_gmt>2011-01-04 16:30:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by billwagner and others. billwagner said: RT @BrianGenisio: Introducing: ActionLinq -- A complete LINQ2Objects implementation for ActionScript 3.0. http://j.mp/fsqdy6 #flex #linq [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5020</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Introducing%E2%80%A6-ActionLinq</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2011-01-04 15:58:19</wp:comment_date>
			<wp:comment_date_gmt>2011-01-04 15:58:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Introducing… ActionLinq...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5021</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Ward]]></wp:comment_author>
			<wp:comment_author_email>mike@blueonionsoftware.com</wp:comment_author_email>
			<wp:comment_author_url>http://blueonionsoftware.com</wp:comment_author_url>
			<wp:comment_author_IP>64.46.248.204</wp:comment_author_IP>
			<wp:comment_date>2011-01-04 16:02:11</wp:comment_date>
			<wp:comment_date_gmt>2011-01-04 16:02:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool! Any thoughts about a JavaScript version?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29375</wp:comment_id>
			<wp:comment_author><![CDATA[simply click the following post]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://internalgala5837.tumblr.com/post/98236483237/a-spotlight-on-deeper-in-debt</wp:comment_author_url>
			<wp:comment_author_IP>172.255.93.29</wp:comment_author_IP>
			<wp:comment_date>2014-09-23 22:58:42</wp:comment_date>
			<wp:comment_date_gmt>2014-09-23 22:58:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>simply click the following post...</strong>

Introducing... ActionLinq « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80280</wp:comment_id>
			<wp:comment_author><![CDATA[beli domain hosting murah]]></wp:comment_author>
			<wp:comment_author_email>brooksvale@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hostingmurahkita.com/mengapa-memilih-untuk-windows-hosting/</wp:comment_author_url>
			<wp:comment_author_IP>216.158.196.254</wp:comment_author_IP>
			<wp:comment_date>2016-01-31 19:34:25</wp:comment_date>
			<wp:comment_date_gmt>2016-01-31 19:34:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ulasan bermanfaat soal hosting ini keren banget. Keren banget dan penting.
Semua orang yang pakai maupun sedang cari jasa web hosting murah di Indonesia harus baca tulisan ini.
Mampir juga situs saya ya, ada tulisan menarik yg bisa jadi berguna bagi para pemakai service hosting.
Thank you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56907</wp:comment_id>
			<wp:comment_author><![CDATA[david]]></wp:comment_author>
			<wp:comment_author_email>deangerber@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bikeapplecycle.com/</wp:comment_author_url>
			<wp:comment_author_IP>14.162.9.94</wp:comment_author_IP>
			<wp:comment_date>2015-06-25 13:52:08</wp:comment_date>
			<wp:comment_date_gmt>2015-06-25 13:52:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valuable info. Fortunate me I found your web site by chance, and I'm stunned 
why this accident did not took place in advance!
I bookmarked it.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29455</wp:comment_id>
			<wp:comment_author><![CDATA[app developer for hire]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://vacuousliar336.blog.com/?p=8</wp:comment_author_url>
			<wp:comment_author_IP>92.222.231.205</wp:comment_author_IP>
			<wp:comment_date>2014-09-26 07:44:05</wp:comment_date>
			<wp:comment_date_gmt>2014-09-26 07:44:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>app developer for hire...</strong>

Introducing... ActionLinq « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7914</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.92.236</wp:comment_author_IP>
			<wp:comment_date>2011-06-01 02:00:36</wp:comment_date>
			<wp:comment_date_gmt>2011-06-01 02:00:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@makc: That's right.  Kind of.  Deferred execution really just means that the execution is deferred until you need it.

When you call orderBy(), it doesn't happen right away.  The moment something asks for the first item, it needs to sort the entire chain.  This is not usually the case.  select() and where() for instance, happen one-by-one and stream through the levels.  Since orderBy() requires the entire collection to sort (like you suggested), it will pull everything in through the linq chain and process them.  Anything after that continues to be deferred.

In other words, orderBy() returns an IEnumerable.  This means that once the IEnumerable has been returned, the sorting has not happened yet.  If you were to call first() on that IEnumerable, it would need to execute everything in order to sort.  The execution is still deferred but it needs to know about the entire collection to proceed.

This is how Linq2Objects in .Net works as well.

In contrast, toArrayCollection() returns a populated ArrayCollection.  This means that the moment this gets called, all of the data is processed.  Calls like this (that do not return IEnumerable) are not deferred.

Does this help?
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7913</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.92.236</wp:comment_author_IP>
			<wp:comment_date>2011-06-01 01:50:27</wp:comment_date>
			<wp:comment_date_gmt>2011-06-01 01:50:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Thomas:  The project is in BitBucket which is the same thing as GitHub but for Mercurial.  You can create a fork from the bitbucket site: actionlinq.org]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7854</wp:comment_id>
			<wp:comment_author><![CDATA[makc]]></wp:comment_author>
			<wp:comment_author_email>makc.the.great@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.94.106.119</wp:comment_author_IP>
			<wp:comment_date>2011-05-26 16:14:34</wp:comment_date>
			<wp:comment_date_gmt>2011-05-26 16:14:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How would deferred execution work, for example, with .orderBy query? Shouldn't the whole data source be sorted before I can retrieve a single resulting element?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7867</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas Burleson]]></wp:comment_author>
			<wp:comment_author_email>ThomasBurleson@GMail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gridlinked.info</wp:comment_author_url>
			<wp:comment_author_IP>173.22.88.17</wp:comment_author_IP>
			<wp:comment_date>2011-05-27 13:20:29</wp:comment_date>
			<wp:comment_date_gmt>2011-05-27 13:20:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very interesting.
I highly encourage you to create a GitHub respository of this; Git is the standard for open-source sharing and collaboration. Swiz, BabelFx, Flex-Extensions, and tons AS3 libraries are available there. It would be great for me to access yours there also.

Thanks again,
ThomasB]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37296</wp:comment_id>
			<wp:comment_author><![CDATA[this blog]]></wp:comment_author>
			<wp:comment_author_email>isiahbarraza@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://bbs.jmtv.com.cn/uchome/upload/link.php?url=https://sbothai.com/new_detail.php?news_id=00031</wp:comment_author_url>
			<wp:comment_author_IP>104.218.192.156</wp:comment_author_IP>
			<wp:comment_date>2015-02-19 08:37:18</wp:comment_date>
			<wp:comment_date_gmt>2015-02-19 08:37:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the marvelous posting! I seriously enjoyed reading it, you can be 
a great author.I will make certain to bookmark your blog and will often come back at some point.
I want to encourage  continue your great job, have a nice day!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50545</wp:comment_id>
			<wp:comment_author><![CDATA[homepage]]></wp:comment_author>
			<wp:comment_author_email>ronaldkonig@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://vimeo.com/humanapeopletopeople</wp:comment_author_url>
			<wp:comment_author_IP>116.226.103.105</wp:comment_author_IP>
			<wp:comment_date>2015-06-09 07:12:05</wp:comment_date>
			<wp:comment_date_gmt>2015-06-09 07:12:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Humana People to People creates their purpose to advance under-developed 
nations around the world through supplying education to primary 
school instructors and tradesmen, helping to recommend well being and deliver 
information about HIV and also to assist in further expanding 
the areas farming. Humana People to People works a variety of different activities and goals 
all through exhausted places in countries all over the world.
By way of employing the nearby people and their government, they're able to 
assist those who are in need of assistance via their non-profit help corporations.
China is just one of numerous nations this non-profit corporation visits to experience the pressing difficulties which they deal with at 
present.
The Humana People to People Movement works together with 
The Federation for Organizations in the Yunnan province in China.
The project began in 2005 and continues over now.
The Humana People to People Cooperation Work Agency in the Yunnan Region performs to 
increase finances to help achieve different projects all through the province in poor locations.
A few plans that Humana People to People attempts to bring to this particular region of China involve professional schools in which 
there're able to advance their schooling, preparing them for work opportunities, offering details of 
infected diseases and more.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75442</wp:comment_id>
			<wp:comment_author><![CDATA[Κοντομηνάς Δημήτριος]]></wp:comment_author>
			<wp:comment_author_email>janettepedder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.aixmi.gr/index.php/giati-o-kontominas-ksilwse-tin-stai/</wp:comment_author_url>
			<wp:comment_author_IP>37.98.114.116</wp:comment_author_IP>
			<wp:comment_date>2015-10-10 06:06:31</wp:comment_date>
			<wp:comment_date_gmt>2015-10-10 06:06:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there, constantly i used to cheeck weblog posts here early in the dawn, siince 
i love to find out more annd more.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80388</wp:comment_id>
			<wp:comment_author><![CDATA[gangajal 2 release date]]></wp:comment_author>
			<wp:comment_author_email>nellebrophy@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://gangajal2.blogspot.in</wp:comment_author_url>
			<wp:comment_author_IP>5.135.153.200</wp:comment_author_IP>
			<wp:comment_date>2016-02-13 07:11:29</wp:comment_date>
			<wp:comment_date_gmt>2016-02-13 07:11:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gangaajal 2 (Jai Gangaajal) - Priyanka Chopra First Look 
- Here’s the brand new poser of Prakash Jha’s upcoming film Jai Gangaajal.
The movie, which was earlier titled Gangaajal 2, is a sequel to the Ajay Devgn starrer Gangaajal.
Featuring Priyanka Chopra, who plays a tough, intense cop in the movie, the 
poster sees her teary-eyed yet strong enough 
to fight against injustice.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79861</wp:comment_id>
			<wp:comment_author><![CDATA[Homes for Sale in Roseville CA]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.yelp.com/biz/grace-s-rivera-real-estate-agent-roseville</wp:comment_author_url>
			<wp:comment_author_IP>216.158.206.239</wp:comment_author_IP>
			<wp:comment_date>2015-12-21 09:58:15</wp:comment_date>
			<wp:comment_date_gmt>2015-12-21 09:58:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Homes for Sale in Roseville CA...</strong>

Introducing... ActionLinq « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80294</wp:comment_id>
			<wp:comment_author><![CDATA[Mazie]]></wp:comment_author>
			<wp:comment_author_email>nicolasdegree@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://noblebolton0.wordpress.com/2015/12/28/%ef%bb%bfel-municipio-de-getafe-organiza-un-campamento-u-para-personas-mayores/</wp:comment_author_url>
			<wp:comment_author_IP>46.29.251.45</wp:comment_author_IP>
			<wp:comment_date>2016-02-03 00:03:23</wp:comment_date>
			<wp:comment_date_gmt>2016-02-03 00:03:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Se halla en una zona residencial en el Paseo de Brines, 52, muy cerca del centro urbano.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>CodeMash Slides and Demos</title>
		<link>http://houseofbilz.com/archives/2011/01/11/codemash-slides-and-demos/</link>
		<pubDate>Tue, 11 Jan 2011 05:20:05 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2011/01/11/codemash-slides-and-demos/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>&#160;</p>  <p><a href="http://codemash.org"><img style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://codemash.org/images/badges/waterpark.png" /></a></p>  <p>This Friday, I will be presenting at <a href="http://codemash.org">CodeMash</a> for the second year in a row.&#160; This year, my topic is <a href="http://codemash.org/sessions#Everything+You+Always+Wanted+to+Know+About+Flex+*+But+Were+Afraid+to+Ask">Everything You Always Wanted to Know About Flex * But Were Afraid to Ask</a>.&#160; It is really just a presentation form of my current series – <a href="http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/">Cross-Training in Silverlight and Flex</a>.</p>  <p>As a good speaker-citizen, I wanted to post my slides and demo.&#160; They are available at BitBucket.org:</p>  <p><a href="https://bitbucket.org/briangenisio/crosstraining/src"><font size="6">Slides &amp; Code</font></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>253</wp:post_id>
		<wp:post_date>2011-01-11 05:20:05</wp:post_date>
		<wp:post_date_gmt>2011-01-11 05:20:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>codemash-slides-and-demos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="codemash"><![CDATA[CodeMash]]></category>
		<category domain="post_tag" nicename="cross-training"><![CDATA[Cross-Training]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33920</wp:comment_id>
			<wp:comment_author><![CDATA[levi raw denim jeans]]></wp:comment_author>
			<wp:comment_author_email>sebastianlysaght@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.z-labtech.com/unddenim.com-9664.html</wp:comment_author_url>
			<wp:comment_author_IP>98.143.159.136</wp:comment_author_IP>
			<wp:comment_date>2014-12-29 09:22:21</wp:comment_date>
			<wp:comment_date_gmt>2014-12-29 09:22:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think this is among the so much significaht information for 
me. Andd i'm glad reading your article. However wanna commentary on some general things,
The web site stylee is great, thhe articles is really great : D.
Excellent job, cheers]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33472</wp:comment_id>
			<wp:comment_author><![CDATA[www.nytimes.com]]></wp:comment_author>
			<wp:comment_author_email>bettyroger@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nytimes.com/2010/05/06/fashion/06skin.html?pagewanted=all&amp;_r=0</wp:comment_author_url>
			<wp:comment_author_IP>107.182.120.214</wp:comment_author_IP>
			<wp:comment_date>2014-12-16 18:43:29</wp:comment_date>
			<wp:comment_date_gmt>2014-12-16 18:43:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just apply the milk on your scalp and tie a towel or some cloth 
around your hair to prevent loss of the milk from your 
hair. Those with tresses that lack shine may benefit from using grape 
seed oil or perhaps coconut oil. Commercial shaving creams usually consist of some sort of animal-based or 
hydrogenated vegetable-based fat, such as stearic acid, chemicals meant 
to create the right texture and p - H, fragrances and dyes, and water.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37873</wp:comment_id>
			<wp:comment_author><![CDATA[chunwahkam.com]]></wp:comment_author>
			<wp:comment_author_email>zeldaried@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.chunwahkam.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=7197</wp:comment_author_url>
			<wp:comment_author_IP>23.88.3.169</wp:comment_author_IP>
			<wp:comment_date>2015-03-04 05:45:54</wp:comment_date>
			<wp:comment_date_gmt>2015-03-04 05:45:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An interesting discussion is worth comment. I do believe that you should write more on this issue, 
it might not be a taboo subject but typically people do not talk 
about these issues. To the next! Kind regards!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33414</wp:comment_id>
			<wp:comment_author><![CDATA[animation discomobile Sherbrooke]]></wp:comment_author>
			<wp:comment_author_email>paige.kopp@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.weblocal.ca/soiree-casino-disco-mobile-sherbrooke-sherbrooke-qc.html</wp:comment_author_url>
			<wp:comment_author_IP>192.210.140.232</wp:comment_author_IP>
			<wp:comment_date>2014-12-15 06:36:10</wp:comment_date>
			<wp:comment_date_gmt>2014-12-15 06:36:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You ought to take part in a contest for one of the 
highest quality websites online. I am going to recommend this website!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37749</wp:comment_id>
			<wp:comment_author><![CDATA[diabetes cure]]></wp:comment_author>
			<wp:comment_author_email>jaymenoskowski@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.militarytoresume.com/diabetes-prevention/</wp:comment_author_url>
			<wp:comment_author_IP>172.245.65.130</wp:comment_author_IP>
			<wp:comment_date>2015-03-01 20:05:15</wp:comment_date>
			<wp:comment_date_gmt>2015-03-01 20:05:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is definately a lot to learn about this topic.
I really like all of the points you have made.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80685</wp:comment_id>
			<wp:comment_author><![CDATA[The 7 Most Popular Valentine's Day Gifts In The U.S.]]></wp:comment_author>
			<wp:comment_author_email>gastonlemay@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Fantasticwindow.com/portfolio-view/dining-room-drapery/</wp:comment_author_url>
			<wp:comment_author_IP>173.232.116.133</wp:comment_author_IP>
			<wp:comment_date>2016-03-29 08:17:26</wp:comment_date>
			<wp:comment_date_gmt>2016-03-29 08:17:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is no higher handmade present than chocolate covered strawberries.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79271</wp:comment_id>
			<wp:comment_author><![CDATA[Manzano]]></wp:comment_author>
			<wp:comment_author_email>acoxcda6h9q@outlook.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/profile.php?id=100003469724310</wp:comment_author_url>
			<wp:comment_author_IP>186.14.143.98</wp:comment_author_IP>
			<wp:comment_date>2015-11-11 01:53:24</wp:comment_date>
			<wp:comment_date_gmt>2015-11-11 01:53:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks for reading!Okay, So if you're not senieg your  woot  label, make sure that your WootLabelTest is using your version of framework.swc instead of the default Flex SDK version.  To do this in Flex Flash Builder:- Right-click on the project, let's say WootLabelTest is your project, right click on that and go to properties.- Click on  Flex Build Path  (or Actionscript Build Path if you're doing an AS only project).- Click on the  Library Path  tab.- Assuming you've got your Flex SDK Library Project setup correctly, you can click  Add Project .- Select  framework  and hit  OK , then do the same for  rpc .- They should show up in the Build path libraries box.- Now you want to select framework and rpc in the Build path libraries box and move them above your Flex SDK.  Do this by selecting the project and clicking the up button.- If your framework and rpc projects are above the Flex SDK in the  Build path libraries  box, you should be good to go.The reason for those steps is it forces your project to use your version of framework.swc and rpc.swc instead of the one provided by the Flex SDK.Also be sure that when setting up your Flex Library projects in Flash Builder that your  Linked Resource  is pointing to the correct place.  If it's not, the Flex Library project will be empty, and your swcs won't do anything.Hopefully that clears some stuff up.  Let me know if that fixes things for you.Cheers!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80035</wp:comment_id>
			<wp:comment_author><![CDATA[rc helos]]></wp:comment_author>
			<wp:comment_author_email>adriannegerrard@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://roomforums.roleplayevolution.com/theshroudedlands/index.php?action=profile;u=14</wp:comment_author_url>
			<wp:comment_author_IP>166.88.106.160</wp:comment_author_IP>
			<wp:comment_date>2016-01-11 01:11:31</wp:comment_date>
			<wp:comment_date_gmt>2016-01-11 01:11:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know this web page presents quality based posts and additional 
data, is there any other web site which provides these things in quality?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79881</wp:comment_id>
			<wp:comment_author><![CDATA[good poker tips]]></wp:comment_author>
			<wp:comment_author_email>maurinerosser@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bd-clan.eu/index.php?site=profile&amp;id=35032</wp:comment_author_url>
			<wp:comment_author_IP>155.94.139.94</wp:comment_author_IP>
			<wp:comment_date>2015-12-24 16:01:15</wp:comment_date>
			<wp:comment_date_gmt>2015-12-24 16:01:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For most recent information you have to pay a quick visit world wide web and on world-wide-web I found this web site as a most 
excellent web site for hottest updates.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59135</wp:comment_id>
			<wp:comment_author><![CDATA[handyman classes san francisco]]></wp:comment_author>
			<wp:comment_author_email>kandacematthies@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>https://youtu.be/E13uUFJIvpE</wp:comment_author_url>
			<wp:comment_author_IP>89.44.27.127</wp:comment_author_IP>
			<wp:comment_date>2015-07-09 11:57:28</wp:comment_date>
			<wp:comment_date_gmt>2015-07-09 11:57:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like what you guys tend to be up too.
This type of clever work and exposure! Keep up the terrific works guys I've included you guys to  blogroll.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>3-Day Flex Jam with James Ward</title>
		<link>http://houseofbilz.com/archives/2011/01/12/3-day-flex-jam-with-james-ward/</link>
		<pubDate>Wed, 12 Jan 2011 05:58:46 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2011/01/12/3-day-flex-jam-with-james-ward/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://flexjam2011.eventbrite.com/"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: left; border-top: 0px; border-right: 0px; padding-top: 0px" title="FlexJamBig" border="0" alt="FlexJamBig" align="left" src="http://houseofbilz.com/wp-content/uploads/2011/01/FlexJamBig.png" width="244" height="217" /></a>If you want to learn Flex or simply want to hone your skills, you need to know about this 3-day Flex Jam. <a href="http://www.srtsolutions.com/">SRT Solutions</a> of Ann Arbor, MI is hosting a Flex Jam on Februrary 15-17 with Adobe evangelist <a href="http://www.jamesward.com/">James Ward</a>.&#160; The format is simple:</p>  <p>Come to the jam with a problem you want to work on.&#160; If you don’t have a project, no problem.&#160; We will have labs and content to help you learn from the ground up.&#160; Or, come with an idea, and develop it while jamming with others.</p>  <p>James is an Adobe evangelist who knows a ton about Flex.&#160; He is personable, passionate and wicked smart – ready to help you rock.</p>  <p>Registration is limited to 20 people, so reserve your seat today!</p>  <p><img style="display: inline; float: right" align="right" src="http://www.jamesward.com/uploads/2007/01/james_cowboy-150x150.jpg" />James Ward is a Technical Evangelist for Flex at Adobe and Adobe’s JCP representative to JSR 286, 299, and 301. Much like his love for climbing mountains he enjoys programming because it provides endless new discoveries, elegant workarounds, summits and valleys. His adventures in climbing have taken him many places. Likewise, technology has brought him many adventures, including: Pascal and Assembly back in the early 90′s; Perl, HTML, and JavaScript in the mid 90′s; then Java and many of it’s frameworks beginning in the late 90′s. Today he primarily uses Flex to build beautiful front-ends for Java based back-ends. Prior to Adobe, James built a rich marketing and customer service portal for Pillar Data Systems.</p>  <p>More Info: <a href="http://flexjam2011.eventbrite.com/"><font size="5">http://flexjam2011.eventbrite.com/</font></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2011-01-12 05:58:46</wp:post_date>
		<wp:post_date_gmt>2011-01-12 05:58:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-day-flex-jam-with-james-ward</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="jam"><![CDATA[Jam]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6173</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention 3-Day Flex Jam with James Ward « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2011/01/12/3-day-flex-jam-with-james-ward/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-14 16:33:56</wp:comment_date>
			<wp:comment_date_gmt>2011-01-14 16:33:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Brian Genisio and Brian Genisio. Brian Genisio said: @renaun @CaseySoftware As fellow Flex speakers at Codemash, would you mind plugging &quot;Flex Jam&quot; at the end of your talk? http://bit.ly/eZJvz2 [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Training in Silverlight &amp; Flex&#8211;Data Binding</title>
		<link>http://houseofbilz.com/archives/2011/01/24/cross-training-in-silverlight-flexdata-binding/</link>
		<pubDate>Mon, 24 Jan 2011 01:57:39 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=264</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More <a href="http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/">Cross-Training in SIlverlight and Flex</a></p>  <p><a href="http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-Data-Binding" rev="vote-for"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" alt="Shout it" src="http://dotnetshoutout.com/image.axd?url=http%3A%2F%2Fhouseofbilz.com%2Farchives%2F2011%2F01%2F24%2Fcross-training-in-silverlight-flexdata-binding%2F" /></a></p>  <p>One of the most powerful and compelling features of RIA frameworks like Silverlight and Flex is data binding.&#160; Data binding is where you declaratively state that a property in the view is “bound” to data in your model (or <a href="http://houseofbilz.com/archives/2010/12/29/cross-training-in-silverlight-flexmvvm-vs-presentation-model/">presentation behavior layer</a>).&#160; This means that when the model data changes, the UI is updated.&#160; Conversely, when a user sets something in the UI layer, the model is then updated.</p>  <p>This capability greatly increases the ability to write features by reducing the amount of value management code the developer has to write.&#160; Data binding makes patterns like <a href="http://houseofbilz.com/archives/2010/12/29/cross-training-in-silverlight-flexmvvm-vs-presentation-model/">MVVM and Presentation Model</a> possible because it eliminates boiler-plate code that is often found in other patterns like Model-View-Presenter.&#160; Data binding, in my opinion, is one of the features of modern application stacks that sets them apart from their ancestors.</p>  <p>In this article, I will discuss the different ways you might want to use data binding in Silverlight and Flex.&#160; I will describe how the approaches differ.&#160; You will see how similar they are as well.&#160; All of these examples can be found on my BitBucket site where all of my <a href="https://bitbucket.org/briangenisio/crosstraining/src">“Cross-Training” examples</a> can be found.</p>  <div style="background-color: #e8f3ff">   <h3><font style="font-weight: bold">Data Binding in Silverlight</font></h3>    <p>Data binding in Silverlight is purely declarative (as opposed to Flex, which is expression-based).&#160; For any given property in the visual tree, the developer can use a binding syntax to declaratively state how to bind.&#160; Silverlight conventions have you set a “data context” for a visual element in which the binding declaration works against.&#160; These bindings can be created imperatively in code, but they are typically defined in XAML unless there is a more dynamic reason to do it differently.</p>    <h4><font style="font-weight: bold">Data Contexts</font></h4>    <p>You define data contexts for a visual tree.&#160; When the data context is set, it remains in scope for all descendants in the visual tree unless is is set again.&#160; Data contexts can be set in XAML or in code and they can be any object.&#160; Here is an example of setting a data context that will be used for all of the examples to come:</p>    <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;UserControl.Resources&gt;
    &lt;local:DataModel x:Name=&quot;dataModel&quot; SimpleText=&quot;default&quot;&gt;
        &lt;local:DataModel.Person&gt;
            &lt;local:Person&gt;
                &lt;local:Person.FullName&gt;
                    &lt;local:PersonName First=&quot;Brian&quot; Last=&quot;Genisio&quot; /&gt;
                &lt;/local:Person.FullName&gt;
            &lt;/local:Person&gt;
        &lt;/local:DataModel.Person&gt;
    &lt;/local:DataModel&gt;
&lt;/UserControl.Resources&gt;

&lt;StackPanel DataContext=&quot;{StaticResource dataModel}&quot;&gt;
&lt;/StackPanel&gt;</pre>

  <p>All of the examples in this post will be inside the <strong>StackPanel</strong> so they will inherit the data context from their visual parent.&#160; There are certainly other ways of setting the <strong>DataContext</strong> but this is how we will do it for this post.</p>

  <h4><font style="font-weight: bold">Basic Example</font></h4>

  <p>Now that we have seen an example of setting the data context, lets bind to the <strong>SimpleText</strong> property in the data model:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;TextBlock Text=&quot;{Binding SimpleText}&quot; /&gt;</pre>

  <p>By using this simple binding syntax, the text block in the UI will show the value of <strong>SimpleText</strong>.&#160; In this case, the UI will show “default”.</p>

  <h4><font style="font-weight: bold">Change Notification</font></h4>

  <p>Displaying data is great and very often, this is all you need.&#160; Often, though, you need to update the UI when the property changes.&#160; It becomes the data object’s responsibility to notify the listener (the UI in this case) of the change so it knows to modify the text.</p>

  <p>Typically, this is done with the <strong>INotifyPropertyChanged</strong> interface.&#160; The interface defines one event – <strong>PropertyChanged</strong> – which sends the name of the property that changed.&#160; The interface is not specific to the UI layer but the UI layer knows how to process the event through the binding you created in the XAML.&#160; </p>

  <p>This is how you implement <strong>INotifyPropertyChanged </strong>in the <strong>DataModel</strong> class:</p>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public class DataModel : INotifyPropertyChanged
{
    private string _simpleText = &quot;first&quot;;
    public string SimpleText
    {
        get { return _simpleText; }
        set
        {
            if (_simpleText == value)
                return;

            _simpleText = value;
            OnPropertyChanged(&quot;SimpleText&quot;);
        }
    }

    protected void OnPropertyChanged(string property)
    {
        var handlers = PropertyChanged;
        if (handlers != null)
            handlers(this, new PropertyChangedEventArgs(property));
    }

    public event PropertyChangedEventHandler PropertyChanged;
}</pre>

  <p>The first part of this class defines the notifiable property using a common pattern.&#160; It uses a private backing store (<strong>_simpleText</strong>) and delegates to it in the property getter and setter.&#160; The setter checks to make sure the value has changed so it doesn’t send an event when nothing changed.&#160; It then sets the backing store and fires an event saying “SimpleText” has changed.</p>

  <p>The second part of this code implements the event that was defined in the <strong>INotifyPropertyChanged</strong> interface.&#160; It uses a very common event pattern of using a protected <strong>OnPropertyChanged</strong> method.&#160; Inside, it makes a copy of the handlers to avoid any changes that may happen while looping through the handlers.&#160; It then calls the handlers if they exist.&#160; It is very common to push the second part of this class into a common <strong>Notifiable</strong> class.</p>

  <p>Now that the <strong>DataModel</strong> can notify the UI of changes to <strong>SimpleText</strong>, you can can set the property being changed:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;
    &lt;TextBlock Text=&quot;{Binding SimpleText}&quot; /&gt;
    &lt;Button Content=&quot;update text&quot; Click=&quot;UpdateSimpleText&quot; /&gt;
&lt;/StackPanel&gt;</pre>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">private void UpdateSimpleText(object sender, RoutedEventArgs e)
{
    (Resources[&quot;dataModel&quot;] as DataModel).SimpleText = &quot;updated&quot;;
}</pre>

  <p>In this example, the value begins with “default” just as the before.&#160; When you press the “update text” button, the <strong>SimpleText</strong> property is modified.&#160; Internally, the property notifies the UI of the change and user sees “updated”.</p>

  <h4><font style="font-weight: bold">Dependency Properties</font></h4>

  <p>Visual elements within Silverlight use a different mechanism for property notification.&#160; Dependency Properties are the preferred method for creating bindable properties on UI elements.&#160; More specifically, any class that derives from <strong>DependencyObject</strong> should avoid using <strong>INotifyPropertyChanged</strong> and use Dependency Properties instead.</p>

  <p>Dependency Properties are created imperatively in the code behind of the visual element.&#160; Add a Dependency Property to the <strong>MainPage</strong> user control:</p>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public static DependencyProperty LocalTextProperty = 
    DependencyProperty.Register(&quot;LocalText&quot;, 
        typeof(String), typeof(MainPage), 
        new PropertyMetadata(&quot;&quot;));

public string LocalText
{
    get { return GetValue(LocalTextProperty) as string; }
    set { SetValue(LocalTextProperty, value); }
}</pre>

  <p>With this property created, you can now bind to a property in my user control, instead of a data object:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;
    &lt;TextBox Text=&quot;{Binding ElementName=root, Path=LocalText,  Mode=TwoWay}&quot; Width=&quot;100&quot; /&gt;
    &lt;TextBox Text=&quot;{Binding ElementName=root, Path=LocalText}&quot; Width=&quot;100&quot; /&gt;
&lt;/StackPanel&gt;</pre>

  <p>There are a few things to notice here:</p>

  <ul>
    <li><strong>ElementName</strong> refers to the root control, which is of type <strong>MainPage</strong>.&#160; This ignores the inherited data context. </li>

    <li>In the first <strong>TextBox</strong>, the <strong>Mode</strong> is set to <strong>TwoWay</strong>.&#160; This tells the control to push any changes back to the property.&#160; Since the property has notification built in (since it is a Dependency Property), the second control will get updated automatically; it is bound to the same property. </li>
  </ul>

  <p>As a rule of thumb, use Dependency Properties if your class derives from <strong>DependencyObject</strong>.&#160; Use <strong>INotifyPropertyChanged</strong> in all other cases.</p>

  <h4><font style="font-weight: bold">Binding to Other Elements</font></h4>

  <p>In addition to binding to data, you may also need to bind to values in the view.&#160; The previous example shows some of this; the data contexts for the text boxes are the root elements instead of whatever was set earlier.</p>

  <p>You can bind to another element by name:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;
    &lt;TextBox Width=&quot;100&quot; x:Name=&quot;input&quot; /&gt;
    &lt;TextBox Width=&quot;100&quot; Text=&quot;{Binding ElementName=input, Path=Text}&quot; /&gt;
&lt;/StackPanel&gt;</pre>

  <p>In this example, the text of the second <strong>TextBox</strong> is bound to the text of the first <strong>TextBox</strong>.&#160; Since this binding is not <strong>TwoWay</strong>, the value changes are not reciprocal.</p>

  <h4><font style="font-weight: bold">Binding to Chained Properties</font></h4>

  <p>In all the examples thus far, data binding has happened on a property of the data context.&#160; This may not be the case when the data’s object tree is more complex.&#160; You can get the <strong>First</strong> and <strong>Last</strong> name properties, which are properties of a different object, from the data model using property chaining:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;TextBlock Text=&quot;{Binding Person.FullName.First'}&quot; /&gt;</pre>

  <p>The same notification rules apply; the UI will update if <strong>First</strong> is a notifiable property.</p>

  <h4><font style="font-weight: bold">Formatted Text</font></h4>

  <p>If you need to format the text display of a given value, you can do so using the <strong>StringFormat</strong> attribute in the binding declaration.&#160; Building on the previous example, the text is displayed as “Your name is: Brian”:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;TextBlock Text=&quot;{Binding Person.FullName.First, StringFormat='Your name is: {0}'}&quot; /&gt;</pre>

  <h4><font style="font-weight: bold">Value Converters</font></h4>

  <p>Often, the format of the data is more complex than a simple string format.&#160; In cases like this, you can use Value Converters.&#160; These are classes that implement <strong>IValueConverter</strong> and provide functions for <strong>Convert</strong> and <strong>ConvertBack.</strong>&#160; Whenever binding occurs, the value is passed to the Value Converter which in turn translates the data to be displayed in the UI.&#160; </p>

  <p>Here is an example displaying a number with two digits of precision:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;UserControl.Resources&gt;
    &lt;local:NumberValueConverter x:Name=&quot;numeric&quot; Precision=&quot;2&quot; /&gt;
&lt;/UserControl.Resources&gt;

&lt;TextBox Width=&quot;100&quot; x:Name=&quot;number&quot; /&gt;
&lt;TextBlock Text=&quot;{Binding ElementName=number, Path=Text, Converter={StaticResource numeric}}&quot; /&gt;</pre>

  <p>The <strong>NumberValueConverter</strong> handles the conversion from a string value to a double and back to a string with the specified level of precision.&#160; There are not many built-in Value Converters, but they are easy to build:</p>

  <pre class="brush: csharp; ruler: true; gutter: false; toolbar: false;">public class NumberValueConverter : IValueConverter
{
    public NumberValueConverter()
    {
        Precision = 4;
    }

    public int Precision { get; set; }

    public object Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture)
    {
        if (!(value is string))
            return DependencyProperty.UnsetValue;

        if (string.IsNullOrWhiteSpace(value as string))
            value = &quot;0&quot;;

        if ((value as string).EndsWith(&quot;.&quot;))
            value = value + &quot;0&quot;;

        var format = string.Format(&quot;{{0:F{0}}}&quot;, Precision);

        return string.Format(format, double.Parse(value as string));
    }

    public object ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture)
    {
        throw new System.NotImplementedException();
    }
}</pre>

  <h4><font style="font-weight: bold">Summary</font></h4>

  <p>Data binding is very powerful in Silverlight.&#160; The previous examples highlighted the most common case data binding scenarios.&#160; Certainly there are more details to cover for more complex cases, but you should understand data binding capabilities pretty well by now.&#160; </p>

  <p>Next, let’s see how Flex implements the same features.</p>
</div>

<div style="background-color: #ffe8e8">
  <h3><font style="font-weight: bold"></font></h3>

  <h3><font style="font-weight: bold">Data Binding in Flex</font></h3>

  <p>Data binding in Flex is expression-based (as opposed to Silveright, which is declarative).&#160; For any given property in the visual tree, the developer can use a binding syntax to declaratively state how to bind.&#160; Since Flex is expression-based, it does not require a data context like in Silverlight.&#160; These bindings can be created imperatively in code, but they are typically defined in MXML unless there is a more dynamic reason to do it differently.</p>

  <h4><font style="font-weight: bold">Basic Example</font></h4>

  <p>To begin with, let us assume that we have a data object defined some place:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;fx:Declarations&gt;
    &lt;local:DataObject id=&quot;dataObject&quot; simpleText=&quot;default&quot; /&gt;
&lt;/fx:Dexlarations&gt;</pre>

  <h4><font style="font-weight: bold"></font></h4>

  <p>Since we named the data object with the id of <strong>dataObject</strong>, we can use it in a binding expression anywhere within scope:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;s:Label text=&quot;{dataObject.simpleText}&quot; /&gt;</pre>

  <p>When the MXML code is compiled, the binding expression is compiled as well.&#160; It gets turned into ActionScript 3 code just like everything else in the MXML markup.&#160; The compiler re-writes the class to set the text from the <strong>dataObject</strong> object as defined in the expression.</p>

  <h4><font style="font-weight: bold">Change Notification</font></h4>

  <p>Displaying data is great and very often, this is all you need.&#160; Often, though, you need to update the UI when the property changes.&#160; It becomes the data object’s responsibility to notify the listener (the UI) of the change so it knows to modify the text.</p>

  <p>Typically, this is done with Bindable Properties.&#160; This is how you do it in the <strong>DataObject</strong> class:</p>

  <pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">[Bindable]
public class DataObject
{
    public var simpleText:String;
}</pre>

  <p>Notice the [<strong>Bindable]</strong> meta tag that has been added to the <strong>DataObject</strong> class.&#160; This meta tag tells the Flex compiler to re-write the public properties in this class to be notifiable.&#160; It does this by employing the standard eventing mechanism found in ActionScript 3.&#160; </p>

  <p>In reality, the generated code looks a lot like the Silverlight notifiable properties; the key difference is that the <strong>Bindable</strong> flag does it for you.&#160; There is no specific notifiable interface for notifiable properties but the code-generated convention is to name the event as “propertyChanged” where “property” is the actual name of the property; in this example, it is “simpleTextChanged”.</p>

  <p>Enough of the details.&#160; By doing this, you can have code like this that will update the text based on data binding when you press the button:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;s:Label text=&quot;{dataObject.simpleText}&quot; /&gt;
&lt;s:Button label=&quot;update&quot; click=&quot;dataObject.simpleText = 'Updated'&quot; /&gt;</pre>

  <p>The Flex compiler parses the binding expression and listens to change events on the <strong>dataObject</strong> instance.&#160; When it changes, the <strong>Label.text</strong> property is set.&#160; All of this is generated for you.</p>

  <h4><font style="font-weight: bold">Binding to Local Variables</font></h4>

  <p>It is easy to bind to local variables since reading a local variable is noting but an expression in Flex.&#160; For instance, you can define the variable as <strong>[Bindable] </strong>in the script block:</p>

  <pre class="brush: as3; ruler: true; gutter: false; toolbar: false;">[Bindable]
private var localText:String = &quot;&quot;;</pre>

  <p>Then you simply bind to the variable:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;s:TextInput text=&quot;@{localText}&quot; /&gt;
&lt;s:TextInput text=&quot;{localText}&quot; /&gt;</pre>

  <p>Notice that the first text box use the “@” symbol.&#160; This tells the binding system that the binding is two-way.&#160; In other words, anything typed into the first <strong>TextInput</strong> will get set in the <strong>localText</strong> variable and then sent back to the second <strong>TextInput</strong>.</p>

  <h4><font style="font-weight: bold">Using Expressions</font></h4>

  <p><font style="font-weight: bold"></font></p>

  <p>The power of using expressions for data binding becomes obvious when you call methods within the binding.&#160; In this example, we can add two values using data binding alone.&#160; When <strong>a</strong> or <strong>b</strong> change, the binding expression is automatically re-evaluated, causing the output to change:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;s:TextInput id=&quot;a&quot; /&gt;
&lt;s:TextInput id=&quot;b&quot; /&gt;
&lt;s:Label text=&quot;a + b = {add(Number(a.text), Number(b.text))}&quot; /&gt;</pre>

  <p>Although I don’t recommend putting too much logic in the binding expressions, the power provided here is quite amazing.&#160; One way I find myself using this feature while implementing the Presentation Model pattern is by hiding elements based on if data exists.&#160; A simple example of binding the <strong>visible</strong> property to the existence of the <strong>nullableObject</strong> variable:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;s:Label text=&quot;Value is not null&quot; visible=&quot;{nullableObject != null}&quot; /&gt;
&lt;s:Button label=&quot;Make null&quot; click=&quot;nullableObject = null&quot; /&gt;
&lt;s:Button label=&quot;Set value&quot; click=&quot;nullableObject = 'something'&quot; /&gt;</pre>

  <h4><font style="font-weight: bold">Binding to Other Elements</font></h4>

  <p>In addition to binding to data, you may also need to bind to values in the view.&#160; You can bind to another element by <strong>id</strong> since setting an <strong>id</strong> on a visual element automatically references it in a variable of the same name:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;s:TextInput id=&quot;input&quot; /&gt;
&lt;s:TextInput text=&quot;{input.text}&quot; /&gt;</pre>

  <p>In this example, the text of the second <strong>TextInput </strong>is bound to the text of the first <strong>TextInput</strong>.&#160; Since this binding is not <strong>TwoWay</strong>, the value changes are not reciprocal.</p>

  <h4><font style="font-weight: bold">Binding to Chained Properties</font></h4>

  <p>In all the examples thus far, data binding has happened on a property of a single object.&#160; This may not be the case when the data’s object tree is more complex.&#160; You can get the <strong>First</strong> and <strong>Last</strong> name properties out of the data model by using property chaining:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;fx:Declarations&gt;
    &lt;fx:Model id=&quot;model&quot;&gt;
        &lt;person&gt;
            &lt;name&gt;
                &lt;first&gt;Brian&lt;/first&gt;
                &lt;last&gt;Genisio&lt;/last&gt;
            &lt;/name&gt;
        &lt;/person&gt;
    &lt;/fx:Model&gt;
&lt;/fx:Declarations&gt;

&lt;s:Label text=&quot;{model.name.first}&quot; /&gt;</pre>

  <p>The same notification rules apply; meaning that the UI will update if <strong>First</strong> is a notifiable property.&#160; In the case of <strong>fx:Model</strong>, all properties are inherently bindable.</p>

  <p>In order for change notification to occur on the chained properties to update on change, all of the properties in the chain must be <strong>[Bindable].</strong></p>

  <h4><font style="font-weight: bold">Formatted Text</font></h4>

  <p>Since data binding is based on an evaluated expression, adding text before or after the bound value is very easy:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;s:Label text=&quot;Your name is: {model.name.first}&quot; /&gt;</pre>

  <p><font style="font-weight: bold"></font></p>

  <p>In this example, the UI will display “Your name is: Brian”.</p>

  <h4><font style="font-weight: bold">Formatters</font></h4>

  <p>Since data binding is based on expressions, data can be formatted using functions in the expression that get evaluated every time a bindable property changes.&#160; In addition, Flex provides several formatters out of the box.&#160; The following example shows how to set the precision of a double value to 2 digits after the decimal place:</p>

  <pre class="brush: xml; ruler: true; gutter: false; toolbar: false;">&lt;fx:Declarations&gt;
    &lt;mx:NumberFormatter id=&quot;numeric&quot; precision=&quot;2&quot; /&gt;
&lt;/fx:Declarations&gt;

&lt;s:TextInput id=&quot;number&quot; /&gt;
&lt;s:Label text=&quot;{numeric.format(Number(number.text))}&quot; /&gt;</pre>

  <p>Whenever the <strong>number.text</strong> property changes, it uses the <strong>NumberFormatter</strong> to evaluate the text in the <strong>Label.&#160; </strong>In addition to the numerous built-in formatters (currency, date, phone number, etc), you can create your own formatters by extending <strong>Formatter</strong>.&#160; </p>
</div>

<h3><font style="font-weight: bold">Summary</font></h3>

<p>The capabilities provided by data binding in Silverlight and Flex give the developer an extremely powerful tool.&#160; It allows him/her to write more features with less code.&#160; Silverlight uses a declarative model where Flex uses an expression model, but the majority of the capabilities mirror each other.&#160; Data binding is a case where I think Flex has the upper hand, though.&#160; By using expressions, the data binding is both more succinct and more powerful.&#160; That is not to say that the declarative style in Silverlight is bad.&#160; It is just that the expressive side in Flex is better (in my opinion).&#160; </p>

<p>I am VERY curious to see how C# 5 with the compiler as a service adds value to the binding story in Silverlight.&#160; Will we see an optional expression-based binding that is compiled and evaluated at runtime?&#160; If not, how hard will it be to write this?</p>

<p>Next time, I will write about visualizing data in Silverlight and Flex. Stay tuned <img style="border-bottom-style: none; border-right-style: none; border-top-style: none; border-left-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://houseofbilz.com/wp-content/uploads/2011/01/wlEmoticon-smile.png" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2011-01-24 01:57:39</wp:post_date>
		<wp:post_date_gmt>2011-01-24 01:57:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-training-in-silverlight-flexdata-binding</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cross-training"><![CDATA[Cross-Training]]></category>
		<category domain="post_tag" nicename="data-binding"><![CDATA[Data Binding]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[Silverlight]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29271</wp:comment_id>
			<wp:comment_author><![CDATA[stump grinding Liverpool]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://yellowpages.com.au/nsw/mt-pritchard/antique-tree-felling-14199628-listing.html</wp:comment_author_url>
			<wp:comment_author_IP>196.196.28.198</wp:comment_author_IP>
			<wp:comment_date>2014-09-20 12:07:34</wp:comment_date>
			<wp:comment_date_gmt>2014-09-20 12:07:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>stump grinding Liverpool...</strong>

Cross-Training in Silverlight &amp; Flex-Data Binding « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28372</wp:comment_id>
			<wp:comment_author><![CDATA[forex]]></wp:comment_author>
			<wp:comment_author_email>hudsonwales@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://qhitlugi.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>69.64.36.12</wp:comment_author_IP>
			<wp:comment_date>2014-08-09 17:15:37</wp:comment_date>
			<wp:comment_date_gmt>2014-08-09 17:15:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, its pleasant piece of writing on the topic of media print, we all be familiar with media is a 
enormous source of data.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36690</wp:comment_id>
			<wp:comment_author><![CDATA[Inspired Silver]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://instagram.com/inspiredsilver</wp:comment_author_url>
			<wp:comment_author_IP>167.160.105.87</wp:comment_author_IP>
			<wp:comment_date>2015-02-02 12:57:14</wp:comment_date>
			<wp:comment_date_gmt>2015-02-02 12:57:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Inspired Silver...</strong>

Cross-Training in Silverlight &amp; Flex-Data Binding « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27046</wp:comment_id>
			<wp:comment_author><![CDATA[download dragon city cheat hack]]></wp:comment_author>
			<wp:comment_author_email>jaxonmarrero@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://mireninea.wordpress.com/2014/06/04/download-dragon-city-cheat-hack/</wp:comment_author_url>
			<wp:comment_author_IP>107.158.22.121</wp:comment_author_IP>
			<wp:comment_date>2014-06-16 17:55:08</wp:comment_date>
			<wp:comment_date_gmt>2014-06-16 17:55:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[By far the coolest games have to be the online shooters, and I’m not just talking about a phone version of Counterstrike.
We can play our own favorite games, on our very own Mobile Phones.
keeps on changing the recent boom in mobile gaming sector seems to be the best 
alternative in this chaotic and stressful life.


Feel free to visit my website ... <a href="http://mireninea.wordpress.com/2014/06/04/download-dragon-city-cheat-hack/" rel="nofollow">download dragon city cheat hack</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28918</wp:comment_id>
			<wp:comment_author><![CDATA[Nell]]></wp:comment_author>
			<wp:comment_author_email>nelllevering@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://golf.Fathersforthefuture.org/19-2/</wp:comment_author_url>
			<wp:comment_author_IP>64.182.6.63</wp:comment_author_IP>
			<wp:comment_date>2014-09-06 20:47:34</wp:comment_date>
			<wp:comment_date_gmt>2014-09-06 20:47:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Superb blog! Do you have any suggestions for 
aspiring writers? I'm hoping to start my own blog soon but I'm a little lost on everything.

Would you suggest starting with a free platform like Wordpress or go 
for a paid option? There are so many choices out 
there that I'm completely overwhelmed .. Any ideas? Many thanks!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28982</wp:comment_id>
			<wp:comment_author><![CDATA[tree loppers Liverpool]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://yelp.com.au/biz/antique-tree-felling-mt-pritchard-2</wp:comment_author_url>
			<wp:comment_author_IP>107.190.163.164</wp:comment_author_IP>
			<wp:comment_date>2014-09-09 09:04:02</wp:comment_date>
			<wp:comment_date_gmt>2014-09-09 09:04:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>tree loppers Liverpool...</strong>

Cross-Training in Silverlight &amp; Flex-Data Binding « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6746</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2010/10/24/cross-training-in-silverlight-vs-flex/</wp:comment_author_url>
			<wp:comment_author_IP>97.74.215.20</wp:comment_author_IP>
			<wp:comment_date>2011-01-25 02:47:25</wp:comment_date>
			<wp:comment_date_gmt>2011-01-25 02:47:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Data Binding [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6747</wp:comment_id>
			<wp:comment_author><![CDATA[DotNetShoutout]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetshoutout.com/Cross-Training-in-Silverlight-Flex-Data-Binding</wp:comment_author_url>
			<wp:comment_author_IP>206.72.113.4</wp:comment_author_IP>
			<wp:comment_date>2011-01-25 02:49:24</wp:comment_date>
			<wp:comment_date_gmt>2011-01-25 02:49:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Cross-Training in Silverlight &amp; Flex – Data Binding...</strong>

Thank you for submitting this cool story - Trackback from DotNetShoutout...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6749</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention Cross-Training in Silverlight &amp; Flex–Data Binding « Brian Genisio's House of Bilz -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/houseofbilz.com/archives/2011/01/24/cross-training-in-silverlight-flexdata-binding/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2011-01-25 03:26:55</wp:comment_date>
			<wp:comment_date_gmt>2011-01-25 03:26:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Brian Genisio, Mariano Ravinale. Mariano Ravinale said: RT @BrianGenisio: Blogged: Cross-Training in Silverlight &amp; Flex -- Data Binding http://j.mp/hx1geb #flex #silverlight [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6765</wp:comment_id>
			<wp:comment_author><![CDATA[Manas]]></wp:comment_author>
			<wp:comment_author_email>manas002002@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://manaspatnaik.com/blog</wp:comment_author_url>
			<wp:comment_author_IP>122.172.193.41</wp:comment_author_IP>
			<wp:comment_date>2011-01-25 21:01:50</wp:comment_date>
			<wp:comment_date_gmt>2011-01-25 21:01:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome thanks for providing such a good article .I am completely unknown to Flex but your article gives us a clear picture.
Thanks again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6769</wp:comment_id>
			<wp:comment_author><![CDATA[Cross-Training in Silverlight &amp; Flex–Data Binding | www.nalli.net]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.nalli.net/2011/01/cross-training-in-silverlight-flex%e2%80%93data-binding/</wp:comment_author_url>
			<wp:comment_author_IP>173.236.40.122</wp:comment_author_IP>
			<wp:comment_date>2011-01-26 02:04:26</wp:comment_date>
			<wp:comment_date_gmt>2011-01-26 02:04:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Brian Genisio&#8217;s House of Bilz One of the most powerful and compelling features of RIA frameworks like Silverlight and Flex is [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26458</wp:comment_id>
			<wp:comment_author><![CDATA[Johne948]]></wp:comment_author>
			<wp:comment_author_email>johne118@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>39.115.104.72</wp:comment_author_IP>
			<wp:comment_date>2014-05-22 13:31:15</wp:comment_date>
			<wp:comment_date_gmt>2014-05-22 13:31:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[whoah this weblog is wonderful i really like studying your posts. Keep up the great paintings! You already know, lots of individuals are searching around for this information, you can help them greatly. ekcfkbeddede]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14860</wp:comment_id>
			<wp:comment_author><![CDATA[Somesh Batra]]></wp:comment_author>
			<wp:comment_author_email>batrasomesh@yahoo.in</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.199.149.22</wp:comment_author_IP>
			<wp:comment_date>2012-03-14 11:47:55</wp:comment_date>
			<wp:comment_date_gmt>2012-03-14 11:47:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Informative post!! It helped me lot. There are some good articles too I was found over internet which also explained very about complex data binding in silver light. Url of those posts are....
http://msdn.microsoft.com/en-us/library/cc278072%28v=vs.95%29.aspx

http://www.codeproject.com/Articles/80555/Databinding-in-Silverlight-applications

http://mindstick.com/Articles/d9362d1c-8c5d-42ed-8677-4ecf08eed57b/?Complex%20Data%20Binding%20in%20Silverlight]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RIA Rockstars</title>
		<link>http://houseofbilz.com/archives/2011/02/08/ria-rockstars/</link>
		<pubDate>Tue, 08 Feb 2011 10:54:48 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[Just a quick note.  I will be popping over to <a href="http://riarockstars.com/">RIA Rockstars</a> every once in a while to write content for them.  Essentially, they took over the hole that was left when Adobe and O'Reilly shut down <a href="insideria.com">Inside RIA</a> last month.  Many of the same authors moved during that change, so the same quality of content should be expected of RIA Rockstars.

My first article, <a href="http://riarockstars.com/2011/02/07/processing-data-on-the-clientactionlinq/">Processing Data on the Client with ActionLinq</a> is up.  I will try to cross-link any articles I write for them here.

Cheers,

Brian]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2011-02-08 10:54:48</wp:post_date>
		<wp:post_date_gmt>2011-02-08 10:54:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ria-rockstars</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="ria"><![CDATA[RIA]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mobile Smackdown -- Flex Edition</title>
		<link>http://houseofbilz.com/archives/2011/02/24/mobile-smackdown-flex-edition/</link>
		<pubDate>Thu, 24 Feb 2011 15:24:55 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[I posted a screencast of building a Flex Mobile application in 12 minutes.  It is a clone of the app they built in the Mobile Smackdown at CodeMash this year.

<a href="http://riarockstars.com/2011/02/24/mobile-smackdown-flex-edition/">Check it out!</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2011-02-24 15:24:55</wp:post_date>
		<wp:post_date_gmt>2011-02-24 15:24:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mobile-smackdown-flex-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presentation Model and Multiple Screens (Flex)</title>
		<link>http://houseofbilz.com/archives/2011/03/24/presentation-model-and-multiple-screens-flex/</link>
		<pubDate>Thu, 24 Mar 2011 12:00:25 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[I put up another post to RiaRockstars.com recently.  This time it is about the <a href="http://riarockstars.com/2011/03/16/presentation-model-and-multiple-screens-part-1/">Presentation Model pattern</a> and how it will aid you in developing for multiple screens (Phone, Tablet, Web, Desktop, etc).  It is part 1 of 2 in a series I am co-authoring with <a href="http://www.srtsolutions.com/author/charliesears">Charlie Sears</a>.  ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2011-03-24 12:00:25</wp:post_date>
		<wp:post_date_gmt>2011-03-24 12:00:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presentation-model-and-multiple-screens-flex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[Patterns]]></category>
		<category domain="post_tag" nicename="presentation-model"><![CDATA[Presentation Model]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>75577</wp:comment_id>
			<wp:comment_author><![CDATA[ZenmethSore]]></wp:comment_author>
			<wp:comment_author_email>farkas.elijah2015@yandex.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>109.194.236.231</wp:comment_author_IP>
			<wp:comment_date>2015-10-11 09:01:00</wp:comment_date>
			<wp:comment_date_gmt>2015-10-11 09:01:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[viagra this site uses keywordluv.
 http://genericviagraonlinecanadapharmacy.com - viagra online canada pharmacy
  cailis
 <a href="http://genericviagraonlinecanadapharmacy.com" rel="nofollow">viagra online canada pharmacy
</a> - viagra on line
 viagra ik]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Introducing Jasmine-Flex</title>
		<link>http://houseofbilz.com/archives/2011/04/05/introducing-jasmine-flex/</link>
		<pubDate>Tue, 05 Apr 2011 11:14:43 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=300</guid>
		<description></description>
		<content:encoded><![CDATA[I have been developing software using Test Driven Development (<a href="http://en.wikipedia.org/wiki/Test_driven_development">TDD</a>) for over three years now.  I usually use traditional xUnit style testing frameworks (<a href="http://www.nunit.org/">NUnit</a>, <a href="http://www.junit.org/">JUnit</a>, <a href="http://www.jsunit.net/">jsUnit</a>, <a href="http://www.flexunit.org/">FlexUnit</a>, <a href="http://sourceforge.net/apps/mediawiki/cppunit/index.php?title=Main_Page">cppUnit</a>, etc) because they are the most accessible frameworks out there.

In reality, though, my TDD style has evolved into more of a Behavior Driven Development (<a href="http://en.wikipedia.org/wiki/Behavior_driven_development">BDD</a>) style.  I specify how my software behaves opposed to writing tests against the inputs/outputs of a given function.  Although this can be a bit awkward with the xUnit style of testing, it can be done ANDI have done so successfully for quite some time.

While I am doing this, I always think to the times when I develop in Ruby.  When in Ruby, I don’t use the standard xUnit tool.  Instead, I use <a href="http://rspec.info/">RSpec</a>.  RSpec allows me to organize my tests (specifications) more organically and within context.  The result is a more expressive, better organized test suite more suited for BDD-style development.

Lately, however, I have been spending a lot of time with the Flex framework.  I wanted to find a BDD context specification tool for that environment but I came up empty.  I got excited when I found one in JavaScript, and it gave me hope.
<h3>Enter Jasmine</h3>
<a href="http://pivotal.github.com/jasmine/">Jasmine</a> is a BDD testing tool written in JavaScript and used in all sorts of environments including <a href="http://rubyonrails.org/">Ruby on Rails</a> and <a href="http://nodejs.org/">Node.js</a>.  I put my feet to the fire and hacked out a port of this code base to ActionScript.  I am pleased to announce that <a href="https://github.com/BrianGenisio/jasmine-flex/wiki">Jasmine-Flex</a> is ready to go!

Using Jasmine-Flex is simple:
<ol>
	<li>Create a new Flex project (Flash or Air)</li>
	<li>Download JasmineFlex.swc and put it in your libs folder.</li>
	<li>Put the <strong>TrivialFlexReporterView</strong> in your application and set <strong>autoExecute</strong> to true.</li>
	<li>Add your specs using the <strong>script</strong> tag</li>
	<li>Run the app.</li>
</ol>
Here is a step-by-step example:

1. Create a new Flex project (Flash or Air)

<a href="http://houseofbilz.com/wp-content/uploads/2011/04/step1.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="step1" src="http://houseofbilz.com/wp-content/uploads/2011/04/step1_thumb.png" border="0" alt="step1" width="528" height="541" /></a>

2. Download JasmineFlex.swc and put it in your libs folder

<a href="http://houseofbilz.com/wp-content/uploads/2011/04/step2.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="step2" src="http://houseofbilz.com/wp-content/uploads/2011/04/step2_thumb.png" border="0" alt="step2" width="421" height="214" /></a>

3. Put the <strong>TrivialFlexReporterView</strong> in your application and set <strong>autoExecute</strong> to true.

<a href="http://houseofbilz.com/wp-content/uploads/2011/04/step3.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="step3" src="http://houseofbilz.com/wp-content/uploads/2011/04/step3_thumb.png" border="0" alt="step3" width="673" height="185" /></a>

4. Add your specs using the <strong>script</strong> tag

<a href="http://houseofbilz.com/wp-content/uploads/2011/04/step4a.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="step4a" src="http://houseofbilz.com/wp-content/uploads/2011/04/step4a_thumb.png" border="0" alt="step4a" width="674" height="208" /></a>

<a href="http://houseofbilz.com/wp-content/uploads/2011/04/step4b.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="step4b" src="http://houseofbilz.com/wp-content/uploads/2011/04/step4b_thumb.png" border="0" alt="step4b" width="496" height="301" /></a>

5. Run the app

<a href="http://houseofbilz.com/wp-content/uploads/2011/04/step5.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border-width: 0px;" title="step5" src="http://houseofbilz.com/wp-content/uploads/2011/04/step5_thumb.png" border="0" alt="step5" width="732" height="265" /></a>
<h3>You are up and running</h3>
Now that you have a Jasmine testing environment up and running, you continue to use Jasmine to write specs, watch them fail, and make them pass.  Add as many spec suites as you need using the <strong>script</strong> tag (step 3).  Before you know it, you will have a rich suite of executable specifications!
<h3>Need more information?</h3>
<ul>
	<li>See the documentation on the <a href="https://github.com/BrianGenisio/jasmine-flex/wiki">Jasmine-Flex</a> site.</li>
	<li>Take a look at an <a href="https://github.com/BrianGenisio/jasmine-flex/tree/master/flex/example">example</a> project.</li>
	<li>See the specs for the <a href="https://github.com/BrianGenisio/jasmine-flex/tree/master/flex/specs/src/suites">Jasmine</a> project (Jasmine was built using Jasmine!).</li>
	<li>Check out <a href="http://www.pragprog.com/titles/achbd/the-rspec-book">The RSpec Book</a>. Most of the concepts apply directly to Jasmine.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date>2011-04-05 11:14:43</wp:post_date>
		<wp:post_date_gmt>2011-04-05 11:14:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-jasmine-flex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bdd"><![CDATA[BDD]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8209</wp:comment_id>
			<wp:comment_author><![CDATA[John Dewar]]></wp:comment_author>
			<wp:comment_author_email>jstarrdewar@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.52.108.50</wp:comment_author_IP>
			<wp:comment_date>2011-06-22 22:08:24</wp:comment_date>
			<wp:comment_date_gmt>2011-06-22 22:08:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice.  Does it require Flex or will it work in a pure-AS3 project?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16955</wp:comment_id>
			<wp:comment_author><![CDATA[Wolfram Kriesing]]></wp:comment_author>
			<wp:comment_author_email>wk+houseofbilz@uxebu.com</wp:comment_author_email>
			<wp:comment_author_url>http://uxebu.com</wp:comment_author_url>
			<wp:comment_author_IP>213.61.212.86</wp:comment_author_IP>
			<wp:comment_date>2012-08-31 13:31:58</wp:comment_date>
			<wp:comment_date_gmt>2012-08-31 13:31:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how do i have to load the trace/console or whatever reporter in a pure as3 project? would be cool to have the reporting in the movie, not on the console, how would i have to do that? its described for flex above, but i would like to have a pure as3 movie (air+browser)
thanks in advance]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16956</wp:comment_id>
			<wp:comment_author><![CDATA[Wolfram Kriesing]]></wp:comment_author>
			<wp:comment_author_email>wk+houseofbilz@uxebu.com</wp:comment_author_email>
			<wp:comment_author_url>http://uxebu.com</wp:comment_author_url>
			<wp:comment_author_IP>213.61.212.86</wp:comment_author_IP>
			<wp:comment_date>2012-08-31 13:42:33</wp:comment_date>
			<wp:comment_date_gmt>2012-08-31 13:42:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks i found it https://github.com/BrianGenisio/jasmine-flex/issues/2]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7328</wp:comment_id>
			<wp:comment_author><![CDATA[James Ward]]></wp:comment_author>
			<wp:comment_author_email>james@jamesward.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.jamesward.com</wp:comment_author_url>
			<wp:comment_author_IP>71.208.45.141</wp:comment_author_IP>
			<wp:comment_date>2011-04-07 13:55:57</wp:comment_date>
			<wp:comment_date_gmt>2011-04-07 13:55:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is awesome stuff!  Thanks Brian!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8263</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.92.236</wp:comment_author_IP>
			<wp:comment_date>2011-06-27 11:03:24</wp:comment_date>
			<wp:comment_date_gmt>2011-06-27 11:03:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, I think it should work in a pure-AS3 project.  Except, of course, for the "TrivialFlexReporter".  You would probably want to use the "TrivialConsoleReporter" or the "TrivialTraceReporter" instead... or create your own reporter...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35406</wp:comment_id>
			<wp:comment_author><![CDATA[Roberta]]></wp:comment_author>
			<wp:comment_author_email>christelvonwiller@live.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.slideshare.net/tanyasantobandung/kos-kosan-dijual-di-jatinangor</wp:comment_author_url>
			<wp:comment_author_IP>23.232.148.156</wp:comment_author_IP>
			<wp:comment_date>2015-01-20 14:12:32</wp:comment_date>
			<wp:comment_date_gmt>2015-01-20 14:12:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow, that's what I was looking for, what a material!
present here at this weblog, thanks admin of this site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Slides and Presentation for &#8220;Mobile Air&#8221; Presentation</title>
		<link>http://houseofbilz.com/archives/2011/05/06/slides-and-presentation-for-mobile-air-presentation/</link>
		<pubDate>Fri, 06 May 2011 18:02:20 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/archives/2011/05/06/slides-and-presentation-for-mobile-air-presentation/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This morning, I presented at <a href="http://stirtrek.com">StirTrek 2011</a>.&#160; Here are my demos and presentation:</p>  <ul>   <li><a href="https://bitbucket.org/briangenisio/airforandroid/raw/0b43706fc87b/AirOnAndroid.pptx">Presentation</a></li>    <li><a href="https://bitbucket.org/briangenisio/airforandroid/src/0b43706fc87b">Code Demos</a></li>    <li><a href="https://bitbucket.org/briangenisio/scorekeeper/overview">ScoreKeeper (Shared screens) Demo</a></li> </ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date>2011-05-06 18:02:20</wp:post_date>
		<wp:post_date_gmt>2011-05-06 18:02:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>slides-and-presentation-for-mobile-air-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="air"><![CDATA[Air]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31922</wp:comment_id>
			<wp:comment_author><![CDATA[rivals proves]]></wp:comment_author>
			<wp:comment_author_email>elsavalentino@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://brokenborders.blogspot.fr/2005/07/embracing-illegals.html</wp:comment_author_url>
			<wp:comment_author_IP>89.47.22.55</wp:comment_author_IP>
			<wp:comment_date>2014-11-12 02:48:50</wp:comment_date>
			<wp:comment_date_gmt>2014-11-12 02:48:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm extremely pleased to find this website. I need to to thank you for your 
time just for this fantastic read!! I definitely loved every bit of it and I have you book marked 
to check out new stuff in your blog.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7719</wp:comment_id>
			<wp:comment_author><![CDATA[Kim Painter]]></wp:comment_author>
			<wp:comment_author_email>kim.painter@insightbb.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.140.4.54</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 15:27:18</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 15:27:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brian,

I was trying to download your presentation and demo from the StirTrek confereence but I'm getting an access denied even after having created an account on BitBucket.  Regards, Kim]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7721</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.92.236</wp:comment_author_IP>
			<wp:comment_date>2011-05-12 19:54:43</wp:comment_date>
			<wp:comment_date_gmt>2011-05-12 19:54:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ha!  That is because the BitBucket repo was marked as private accidentally.  Not sure why/how.  It is public now.  Try again :)

Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Captive Runtime packaging in Air 3.0</title>
		<link>http://houseofbilz.com/archives/2011/10/11/captive-runtime-packaging-in-air-3-0/</link>
		<pubDate>Tue, 11 Oct 2011 17:42:09 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=313</guid>
		<description></description>
		<content:encoded><![CDATA[When I talk with people about the Flex framework, many think of it as a Flash library. They often refer to Flex as a web framework that runs in a plug-in. To me, however, Flex is an application framework. To be honest, Flex in the browser doesn’t excite me. I am much more interested in using Flex on the desktop or on mobile devices.

<strong>Some History</strong>

Until recently, Flex has been criticized for requiring a separate runtime install. The criticism is valid – users were often confused by this and found the need to upgrade something other than the app they wanted to install. The user experience became one where the user was left wondering, “what just happened?”

In one case, my customer required that nothing be allowed installed on the users’ machine (network access was not available either). This meant no Air runtime and no app. We had a workaround which included an app embedded inside of a PDF but that left the user feeling like they were watching Inception (an app within an app…).

Although this was the case in OSX, Windows and Android, it was not the case in iOS (iPhone and iPad). Apple doesn’t allow third-party runtimes on their devices so Adobe created a native compiler and packager that bundles the Air libraries directly into the app.

<strong>Captive Runtime</strong>

In Air 3.0, however, the requirement for a separate Air runtime has been lifted. With the “Captive Runtime” feature, developers can bundle the native Air libraries with the app. When apps are bundled this way, they can be deployed any way you want. They won’t require an installation of Air OR the application itself (on the desktop; mobile apps still need to be installed but can be without the separate runtime). This doesn’t mean you are restricted from installing your app but it means that it is no longer required. In addition to iOS, Captive Runtime will work in Android, OSX and Windows.

Let’s see how easy it is to use. I will create a “Hello World” app for illustrative purposes but significantly more complicated applications work just as easily.

<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/29619d66-af32-458e-b4d6-dc43166cc114/2011-10-06_11-42-17.png" alt="" width="350" height="281" />

<a href="http://www.adobe.com/devnet/flex/articles/whats-new-flex-flash-builder-46.html">Flash Builder 4.6</a> has integration built-in integration for captive runtime.  When you “Export Release Build” from Flash Builder, you simply create a “Signed application with AIR runtime bundled”.

<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/945de260-d491-4a2a-91c1-74ab7cb7c9b3/2011-10-06_06-55-542.png" alt="" width="370" height="381" />

Everything else is the same. You add a signed certificate to the app as you normally would and any other packaging settings.  When you are complete, you will get a native application that is ready to execute but doesn’t require Air to be installed.

<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/202db853-961d-47a9-8388-b34332892e19/2011-10-06_10-41-36.png" alt="" />

This app can be copied to a thumb drive, shared from network storage or embedded into an installer. It is an application just like any other.

<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/46a53a46-6b33-4523-a20e-db09d071eda0/2011-10-06_10-44-36.png" alt="" />

Note that this does bloat the size of your application. This may or may not be an issue for you depending on your audience and deployment mechanism. You can always package your app as a traditional Air app if you prefer.

The Windows story for building your app is exactly the same as the OSX side. The only difference is that the app is packaged as an EXE with the Air support alongside it.

<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/41811197-7d4d-4fcd-9bad-af15d4a39ea6/2011-10-06_11-30-16.png" alt="" width="322" height="172" />

The story for Android is similar. You have a different dialog for packaging, but the idea is the same. The APK that is produced will have Air bundled inside.

<img style="display: block; float: none; margin-left: auto; margin-right: auto;" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/4b0f8c73-28ea-4118-8012-021863e57edc/2011-10-06_11-23-11.png" alt="" />

Of course, you don’t need to use Flash Builder to package your app. You can do it from the SDK and the command line. Instead of repeating what you can already find out in other places, I will just refer you to <a href="http://www.tricedesigns.com/2011/08/10/air-3-0-captive-runtime/">Andrew Trice’s blog</a> for more info on that.

&nbsp;

If you would like to get a sneak peek of Flash Builder 4.6, you can <a href="https://prerelease.adobe.com/callout/default.html?callid=DC919522A42544798C33ECB4041FC5DC">apply for the Flex and Flash Builder pre-release</a>.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>313</wp:post_id>
		<wp:post_date>2011-10-11 17:42:09</wp:post_date>
		<wp:post_date_gmt>2011-10-11 17:42:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captive-runtime-packaging-in-air-3-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="flash-builder"><![CDATA[Flash Builder]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11035</wp:comment_id>
			<wp:comment_author><![CDATA[Sortie de Flash builder et de Flex SDK 4.6 release candidate | Blog Objet Direct]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.objetdirect.com/ria/sortie-de-flash-builder-et-de-flex-sdk-4-6-en-version-release-candidate</wp:comment_author_url>
			<wp:comment_author_IP>81.220.157.179</wp:comment_author_IP>
			<wp:comment_date>2011-10-27 18:27:36</wp:comment_date>
			<wp:comment_date_gmt>2011-10-27 18:27:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29066</wp:comment_id>
			<wp:comment_author><![CDATA[android market apk]]></wp:comment_author>
			<wp:comment_author_email>RocconiDeyon50@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://androidmarketapk21.blogspot.com//www.blogger.com/rearrange?blogID=899033701756640403&amp;widgetType=Profile&amp;widgetId=Profile1&amp;action=editWidget&amp;sectionId=sidebar-right-1</wp:comment_author_url>
			<wp:comment_author_IP>192.171.232.236</wp:comment_author_IP>
			<wp:comment_date>2014-09-13 08:19:45</wp:comment_date>
			<wp:comment_date_gmt>2014-09-13 08:19:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, Neat article. There is an issues with your web site around world wide web explorer, may possibly analyze this specific? IE 's still this market fundamental in addition to a good portion of individuals can omit a person's superb publishing for this reason issue.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25022</wp:comment_id>
			<wp:comment_author><![CDATA[Lowell]]></wp:comment_author>
			<wp:comment_author_email>lowellduquette@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://gemsacademy.in/?page_id=39</wp:comment_author_url>
			<wp:comment_author_IP>66.221.26.60</wp:comment_author_IP>
			<wp:comment_date>2014-04-17 04:04:14</wp:comment_date>
			<wp:comment_date_gmt>2014-04-17 04:04:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there,  You have done a fantastic job. I will certainly digg it and personally recommend to my friends.
I am sure they'll be benefited from this web site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29921</wp:comment_id>
			<wp:comment_author><![CDATA[android]]></wp:comment_author>
			<wp:comment_author_email>HerderSaari8851@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yzyunxi.com</wp:comment_author_url>
			<wp:comment_author_IP>178.33.131.110</wp:comment_author_IP>
			<wp:comment_date>2014-10-06 10:14:20</wp:comment_date>
			<wp:comment_date_gmt>2014-10-06 10:14:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi my friend! I want to say that this post is awesome, nice written and come with almost all vital infos. I would like to see more posts like this .]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27067</wp:comment_id>
			<wp:comment_author><![CDATA[Lan]]></wp:comment_author>
			<wp:comment_author_email>lanappleton@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://twitter.com/DuckyApps</wp:comment_author_url>
			<wp:comment_author_IP>198.23.152.235</wp:comment_author_IP>
			<wp:comment_date>2014-06-18 13:04:26</wp:comment_date>
			<wp:comment_date_gmt>2014-06-18 13:04:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmm is anyone else experiencing problems with the 
pictures on this blog loading? I'm trying to determine if its a problem on my end or if it's the 
blog. Any feed-back would be greatly appreciated.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30536</wp:comment_id>
			<wp:comment_author><![CDATA[ways to create an android App]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://iotasolutions.co.in/activity/p/25405/</wp:comment_author_url>
			<wp:comment_author_IP>23.95.34.122</wp:comment_author_IP>
			<wp:comment_date>2014-10-19 01:27:41</wp:comment_date>
			<wp:comment_date_gmt>2014-10-19 01:27:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ways to create an android App...</strong>

Captive Runtime packaging in Air 3.0 « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33129</wp:comment_id>
			<wp:comment_author><![CDATA[Resume gives you a chance to represent yourself. An effective resume can make your higher chance for an interview call. You can Learn Resume Writing, Cover Letter Writing, with sample, examples, and also resume templates are available for free]]></wp:comment_author>
			<wp:comment_author_email>ScavoneKitterman64@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.givemyresume.com/resume-writing.htm</wp:comment_author_url>
			<wp:comment_author_IP>39.55.33.178</wp:comment_author_IP>
			<wp:comment_date>2014-12-07 07:41:19</wp:comment_date>
			<wp:comment_date_gmt>2014-12-07 07:41:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi!,I like your writing so much! share we keep in touch more approximately your post on AOL? I require a specialist in this area to solve my problem. May be that is you! Having a look forward to peer you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23878</wp:comment_id>
			<wp:comment_author><![CDATA[Stream free dubbed animeto your android now]]></wp:comment_author>
			<wp:comment_author_email>KerboHegel000@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.freeiphoneanime.com/durarara-episode-15/</wp:comment_author_url>
			<wp:comment_author_IP>78.151.77.246</wp:comment_author_IP>
			<wp:comment_date>2014-03-20 20:51:21</wp:comment_date>
			<wp:comment_date_gmt>2014-03-20 20:51:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is really interesting, You are an overly skilled blogger. I've joined your rss feed and sit up for in search of extra of your magnificent post. Additionally, I have shared your site in my social networks]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17499</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.40.254.44</wp:comment_author_IP>
			<wp:comment_date>2012-11-10 03:17:30</wp:comment_date>
			<wp:comment_date_gmt>2012-11-10 03:17:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Robert

I agree that the real-world story for using Captive Runtime for mobile is questionable.  There are things that don't work very well.  This article is more about Captive Runtime for use with desktop apps.  In that case, CaptiveRuntime is a real win IMO.

Thanks for your experience with the mobile side of it.  I think things like that leave it as a good technology for prototyping, but the real-world mobile story can leave some to be desired.

Good luck,
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15192</wp:comment_id>
			<wp:comment_author><![CDATA[narita]]></wp:comment_author>
			<wp:comment_author_email>narita@p2company.co.jp</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.111.135.43</wp:comment_author_IP>
			<wp:comment_date>2012-04-07 15:54:24</wp:comment_date>
			<wp:comment_date_gmt>2012-04-07 15:54:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello! You say, When apps are bundled this way, they can be deployed any way you want. Can I deploy my apps in this way via website? AIR3 distribution via an externally facing Internet site is prohibited. But if I deploy my apps with captive runtime, it's not problem.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9968</wp:comment_id>
			<wp:comment_author><![CDATA[Pete Magsig]]></wp:comment_author>
			<wp:comment_author_email>pete.magsig@contact.peteplace.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.209.16.123</wp:comment_author_IP>
			<wp:comment_date>2011-10-15 13:20:51</wp:comment_date>
			<wp:comment_date_gmt>2011-10-15 13:20:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very cool. Do you have numbers on the bloat?

I have a feeling I'm going to end up buying the IDE for flex before the year is out. This just seems to get better and better.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23724</wp:comment_id>
			<wp:comment_author><![CDATA[Mr. Entropy]]></wp:comment_author>
			<wp:comment_author_email>thatcarl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.235.4.230</wp:comment_author_IP>
			<wp:comment_date>2014-03-12 23:43:42</wp:comment_date>
			<wp:comment_date_gmt>2014-03-12 23:43:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is there any way to check when new versions of the runtime become available? I would really like to use a "captive runtime" but I fear missing some critical security update for AIR. It'd be nice to be able to download it (the runtime, not install AIR) when a new version is released.

Reason: an environment where local admin privileges are disabled and cannot update AIR in the usual manner.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17915</wp:comment_id>
			<wp:comment_author><![CDATA[cx]]></wp:comment_author>
			<wp:comment_author_email>ignorance@o2.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.6.182.251</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:56:39</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 14:56:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Robert

it only means that while debugging your application you'll have plenty of time to learn about code optimization.
i mean i've seen it many times when single ad banner took 99% of my top shelf cpu.
just because code compiles it doesn't mean you know how to write software.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14836</wp:comment_id>
			<wp:comment_author><![CDATA[YopSolo]]></wp:comment_author>
			<wp:comment_author_email>mail@yopsolo.fr</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>91.223.84.10</wp:comment_author_IP>
			<wp:comment_date>2012-03-12 14:08:36</wp:comment_date>
			<wp:comment_date_gmt>2012-03-12 14:08:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Really cool feature !
Thx :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28375</wp:comment_id>
			<wp:comment_author><![CDATA[t-mobile palatine]]></wp:comment_author>
			<wp:comment_author_email>kaleytjangamarra@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.tuugo.fr/Redirect?nextPage=http%3A%2F%2Fipadrepairinschaumburg.com</wp:comment_author_url>
			<wp:comment_author_IP>107.178.103.243</wp:comment_author_IP>
			<wp:comment_date>2014-08-10 03:45:40</wp:comment_date>
			<wp:comment_date_gmt>2014-08-10 03:45:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey! This post could not be written any better! Reading this post reminds me of my good old room mate!
He always kept chatting about this. I will forward this article to him.
Pretty sure he will have a good read. Many thanks for sharing!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80373</wp:comment_id>
			<wp:comment_author><![CDATA[how i create a website in php]]></wp:comment_author>
			<wp:comment_author_email>earthaherring@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.wakingup2coffee.com/wp/?page_id=88</wp:comment_author_url>
			<wp:comment_author_IP>216.158.213.91</wp:comment_author_IP>
			<wp:comment_date>2016-02-11 19:55:56</wp:comment_date>
			<wp:comment_date_gmt>2016-02-11 19:55:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great blog right here! Also your site loads up very fast!
What host are you the usage of? Can I am getting 
your associate link to your host? I desire my website loaded up as fast 
as yours lol]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17472</wp:comment_id>
			<wp:comment_author><![CDATA[Robert]]></wp:comment_author>
			<wp:comment_author_email>rmgalante@galaware.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.galaware.com</wp:comment_author_url>
			<wp:comment_author_IP>174.54.227.240</wp:comment_author_IP>
			<wp:comment_date>2012-11-07 11:15:12</wp:comment_date>
			<wp:comment_date_gmt>2012-11-07 11:15:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am developing an application that runs on Android and iOS devices. I find that the Android APK without captive runtime is 4.4M. The iOS IPA with captive runtime is 9.6M. The Android device launches my application in about 5 seconds. The iOS device launches my application in about 90 seconds. That's right! 90 seconds. I looked at a black screen for 12 seconds, and about 78 seconds of splash screen.

I have 400k of embedded images. I have 44k of embedded icons. The SWF file is 2.92M.

This is my experience with the captive runtime on iOS.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9820</wp:comment_id>
			<wp:comment_author><![CDATA[ScottR]]></wp:comment_author>
			<wp:comment_author_email>scott.rowe@gfigroup.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.191.171.11</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 21:31:53</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 21:31:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Any idea if the normal air application updates work (my app, not the Air player) so I can easily roll out newer versions of myapp.swf to users or will I have to roll out a whole new bundled exe again and again?

Thanks...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9824</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.89.158</wp:comment_author_IP>
			<wp:comment_date>2011-10-12 00:16:11</wp:comment_date>
			<wp:comment_date_gmt>2011-10-12 00:16:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's a good question.  In the OSX and Windows case, the SWF file is in plain sight.  (In iOS and Android, you would have to package fully, I'd imagine.)  

For OSX/Windows, it would seem like a simple copy/replace would do it as long as you don't require a new version of the runtime.  I haven't tried this, though.  There might be something preventing you from doing this...  

I'd suspect that users wouldn't feel comfortable, though, copying SWF files around, so you would probably want to include a script or something... Let me know if you figure anything out.  It would be interesting to know.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9838</wp:comment_id>
			<wp:comment_author><![CDATA[ScottR]]></wp:comment_author>
			<wp:comment_author_email>scott.rowe@gfigroup.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.191.171.11</wp:comment_author_IP>
			<wp:comment_date>2011-10-12 19:05:15</wp:comment_date>
			<wp:comment_date_gmt>2011-10-12 19:05:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I did a quick test by replacing the main swf file with a slightly updated one. Seems to run just fine. :-) Anyway, Captive Runtime is a fantastic new feature. Looks to me like Flex/Air is really headed in a great direction.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28170</wp:comment_id>
			<wp:comment_author><![CDATA[cell phone repair in palatine]]></wp:comment_author>
			<wp:comment_author_email>colindancy@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://computerrepairpalatine.us/cell-phone-repair-in-palatine/</wp:comment_author_url>
			<wp:comment_author_IP>107.178.103.252</wp:comment_author_IP>
			<wp:comment_date>2014-08-01 13:52:02</wp:comment_date>
			<wp:comment_date_gmt>2014-08-01 13:52:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Asking questions are really pleasant thing if you are not 
understanding anything completely, but this post presents pleasant understanding 
even.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12156</wp:comment_id>
			<wp:comment_author><![CDATA[obirocks]]></wp:comment_author>
			<wp:comment_author_email>obi.oberleitner@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.191.186.240</wp:comment_author_IP>
			<wp:comment_date>2011-11-16 18:06:09</wp:comment_date>
			<wp:comment_date_gmt>2011-11-16 18:06:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[there is no difference in german/ english version with my flash builder 4.6 .. so what version of flash builder did you use?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30441</wp:comment_id>
			<wp:comment_author><![CDATA[juega gratis flappy bird]]></wp:comment_author>
			<wp:comment_author_email>jerrichester@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=L3t9gbuQYnI</wp:comment_author_url>
			<wp:comment_author_IP>183.228.69.128</wp:comment_author_IP>
			<wp:comment_date>2014-10-17 10:07:13</wp:comment_date>
			<wp:comment_date_gmt>2014-10-17 10:07:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent way of describing, and good article to obtain information regarding 
my presentation focus, which i am going to deliver in school.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12155</wp:comment_id>
			<wp:comment_author><![CDATA[obirocks]]></wp:comment_author>
			<wp:comment_author_email>obi.oberleitner@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.191.186.240</wp:comment_author_IP>
			<wp:comment_date>2011-11-16 17:51:28</wp:comment_date>
			<wp:comment_date_gmt>2011-11-16 17:51:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i got myself the flash builder 4.6 from the prerelease program, but i dont have the option "Signed application with air runtime bundled" in the "export release Build" window nor can i find the dialog box "target platform google android" and the export options in the deployment window "export application with embedded air runtime" as shown in your last image.. what version of the builder did you use there??? or could it be that there is a difference because i installed it with german language?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17052</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>andrew.sinning@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.165.224.193</wp:comment_author_IP>
			<wp:comment_date>2012-09-17 20:18:27</wp:comment_date>
			<wp:comment_date_gmt>2012-09-17 20:18:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Any idea what determines what version of AIR gets bundled into the captive runtime?  We have an up to date version of Flash Builder, but our captive runtimes are running into problems with accessing the web from within Android.  If we use a non-captive runtime and a current version of AIR installed on the device, then everything works great.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10150</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.89.158</wp:comment_author_IP>
			<wp:comment_date>2011-10-19 02:15:34</wp:comment_date>
			<wp:comment_date_gmt>2011-10-19 02:15:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, the bloat is significant for the time being.  It packages the entire Air runtime beside your app so a 1 MB app goes to about 40/60 MB in Windows/OSX.  I have wanted to experiment with it, though, to see what I can prune.  For instance, if you are not embedding WebKit, then you probably don't need to ship it.  Hopefully you can just rip it out.  Also, I am hoping that they will be a bit smarter about it as the feature progresses.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>9968</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14542</wp:comment_id>
			<wp:comment_author><![CDATA[mr_iks]]></wp:comment_author>
			<wp:comment_author_email>my@mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mysite</wp:comment_author_url>
			<wp:comment_author_IP>78.108.102.35</wp:comment_author_IP>
			<wp:comment_date>2012-02-20 16:54:58</wp:comment_date>
			<wp:comment_date_gmt>2012-02-20 16:54:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[obirocks:
I have not this option on the first page of the Export release build too. It's in the next step under Deployment - Export options - Export app with captive runtime]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35537</wp:comment_id>
			<wp:comment_author><![CDATA[iPhone 6 denim]]></wp:comment_author>
			<wp:comment_author_email>larhonda_zachary@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=JwcQwAc6ruc</wp:comment_author_url>
			<wp:comment_author_IP>182.118.59.45</wp:comment_author_IP>
			<wp:comment_date>2015-01-22 05:49:04</wp:comment_date>
			<wp:comment_date_gmt>2015-01-22 05:49:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That is really attention-grabbing, You are a very professional blogger.
I've joined your feed and stay up for searching 
for more of your excellent post. Also, I've sharedd your site in my social networks]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74557</wp:comment_id>
			<wp:comment_author><![CDATA[Agen Judi Casino Terpercaya]]></wp:comment_author>
			<wp:comment_author_email>latishaparamor@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.simulationgame.jp/cms/userinfo.php?uid=1125295</wp:comment_author_url>
			<wp:comment_author_IP>192.119.154.189</wp:comment_author_IP>
			<wp:comment_date>2015-10-03 10:36:15</wp:comment_date>
			<wp:comment_date_gmt>2015-10-03 10:36:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there, this weekend is pleasant designed for me, since this time i am reading 
this enormous educational piece of writing here at my home.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80391</wp:comment_id>
			<wp:comment_author><![CDATA[netgoogle]]></wp:comment_author>
			<wp:comment_author_email>raskourbina@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>160.177.20.40</wp:comment_author_IP>
			<wp:comment_date>2016-02-13 21:50:27</wp:comment_date>
			<wp:comment_date_gmt>2016-02-13 21:50:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have flash builder 4.6 but I haven't this

http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/945de260-d491-4a2a-91c1-74ab7cb7c9b3/2011-10-06_06-55-542.png

I have just this

https://3.bp.blogspot.com/-nglhkkc1elc/VraVp5HxMuI/AAAAAAAACRU/3JyksqkeAXU/s1600/1213.png

thanks

second problem when I run with Usb device he get this message adobe air must be installed


https://3.bp.blogspot.com/-FMIDy_yTOoc/VrkOeeKItYI/AAAAAAAACRk/MwmkYzQmjD4/s1600/454545.png]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80435</wp:comment_id>
			<wp:comment_author><![CDATA[jack]]></wp:comment_author>
			<wp:comment_author_email>rodrigo.oswald@vegemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://coleneaydinlik.tumblr.com</wp:comment_author_url>
			<wp:comment_author_IP>186.227.22.31</wp:comment_author_IP>
			<wp:comment_date>2016-02-24 08:34:42</wp:comment_date>
			<wp:comment_date_gmt>2016-02-24 08:34:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It’s the best time to make a few plans for the future and it is time to be happy.
I have read this put up and if I may I want to 
counsel you some interesting issues or advice. Perhaps you can write subsequent articles referring to this 
article. I desire to read more issues approximately it!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Going (Mostly) Server-less with Backbone.js</title>
		<link>http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/</link>
		<pubDate>Mon, 07 Nov 2011 11:19:36 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=363</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been having a lot of fun with <a href="http://documentcloud.github.com/backbone/">Backbone.js</a> and <a href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> lately.&#160; It is my new programming obsession.&#160; They go together like chocolate and coffee.&#160; Along with this work, I have had the fantasy of going server-less and pushing all of my data stores to a back-end that I don’t have to code or manage myself.&#160; I mean, how cool would that be?&#160; To develop a browser-based application complete with data storage without a server is boss if you ask me.</p>  <p>For my data store, I have been playing with a new (currently in Beta) service called <a href="https://www.parse.com/">Parse.com</a>.&#160; Parse.com gives you a schema-less data store -- a place to put your stuff with a REST API.&#160; They are focusing on being the persistence layer for mobile apps when you don’t want to mess with a server.&#160; Is there any reason why we can’t use a service like this in an HTML5/Javascript single-paged app?&#160; It turns out that the answer is more complicated than “no” but it is something that we can certainly get around.&#160; </p>  <p>This series will be broken into several parts:</p>  <ol>   <li>Introduction (this page) </li>    <li><a href="http://houseofbilz.com/archives/2011/11/07/a-proxy-server-for-parse-com/">A Proxy Server for Parse.com</a> </li>    <li><a href="http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/">Making Backbone.js Work with Parse.com</a> </li>    <li><a href="http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/">Working with Backbone.js and the Parse.com Proxy</a> </li>    <li><a href="http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/">Building an Application with Parse.com Models</a> </li>    <li><a href="http://houseofbilz.com/archives/2011/11/30/hosting-the-todos-example-on-heroku/">Hosting the Todos example on Heroku (Bonus)</a></li> </ol>  <p>All of the code (front-end and back-end) in these examples will be written in <a href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> but there is no reason you can’t do the same thing with Javascript.&#160; Let me know if you find this short series useful.&#160; </p>  <p><strong>Disclaimer:&#160; I am really just hacking and documenting my work.&#160; I have no idea how this will perform in a real-world scenario.&#160; It is a thought experiment.&#160; If anything, this is really just a place for me to document my work.</strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>363</wp:post_id>
		<wp:post_date>2011-11-07 11:19:36</wp:post_date>
		<wp:post_date_gmt>2011-11-07 11:19:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>going-mostly-server-less-with-backbone-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[CoffeeScript]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[HTML5]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="parse-com"><![CDATA[Parse.com]]></category>
		<category domain="post_tag" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[Web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11872</wp:comment_id>
			<wp:comment_author><![CDATA[Making Backbone.js Work with Parse.com &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 11:38:21</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 11:38:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Series Overview &lt;&lt; A Proxy Server for Parse.com&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Working with Backbone.js and the Parse.com proxy &gt;&gt; [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11873</wp:comment_id>
			<wp:comment_author><![CDATA[Working with Backbone.js and the Parse.com Proxy &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 11:41:24</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 11:41:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Series Overview [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11987</wp:comment_id>
			<wp:comment_author><![CDATA[Tikhon Bernstam]]></wp:comment_author>
			<wp:comment_author_email>tikhon@parse.com</wp:comment_author_email>
			<wp:comment_author_url>http://parse.com</wp:comment_author_url>
			<wp:comment_author_IP>75.103.9.228</wp:comment_author_IP>
			<wp:comment_date>2011-11-10 19:26:46</wp:comment_date>
			<wp:comment_date_gmt>2011-11-10 19:26:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow this is awesome.  Love this series of posts Brian!  Email me anytime if you have any questions -- my name at parse.com.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14534</wp:comment_id>
			<wp:comment_author><![CDATA[Luigi Claudio]]></wp:comment_author>
			<wp:comment_author_email>gens.claudia@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.luigiclaudio.eu</wp:comment_author_url>
			<wp:comment_author_IP>94.169.108.175</wp:comment_author_IP>
			<wp:comment_date>2012-02-19 21:03:34</wp:comment_date>
			<wp:comment_date_gmt>2012-02-19 21:03:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! Thanks Brian, I'm just about to get started!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33299</wp:comment_id>
			<wp:comment_author><![CDATA[Lawerence]]></wp:comment_author>
			<wp:comment_author_email>jayme.makowski@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://Tammara.blogspot.it</wp:comment_author_url>
			<wp:comment_author_IP>223.99.189.102</wp:comment_author_IP>
			<wp:comment_date>2014-12-12 09:30:59</wp:comment_date>
			<wp:comment_date_gmt>2014-12-12 09:30:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent content you post here! You can earn some extra $$$ from your blog, don't 
miss this opportunity, for more details just type in google 
- omgerido monetize website]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34076</wp:comment_id>
			<wp:comment_author><![CDATA[roof hail damage pictures Dunwoody]]></wp:comment_author>
			<wp:comment_author_email>stephanie.obryan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=YnDbkuB5b9g</wp:comment_author_url>
			<wp:comment_author_IP>172.245.133.36</wp:comment_author_IP>
			<wp:comment_date>2014-12-31 20:01:29</wp:comment_date>
			<wp:comment_date_gmt>2014-12-31 20:01:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Every weekend i used to pay a visit this web page, as i wish for enjoyment, as this this web site conations really nice funny material too.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11690</wp:comment_id>
			<wp:comment_author><![CDATA[A Proxy Server for Parse.com &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/a-proxy-server-for-parse-com/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-07 11:45:22</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 11:45:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] &laquo; Going (Mostly) Server-less with Backbone.js [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36016</wp:comment_id>
			<wp:comment_author><![CDATA[Pirate Bay]]></wp:comment_author>
			<wp:comment_author_email>lewismacias@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.emdatagroup.com/groups/a-look-at-programs-in-torrents/</wp:comment_author_url>
			<wp:comment_author_IP>192.165.67.181</wp:comment_author_IP>
			<wp:comment_date>2015-01-27 00:01:33</wp:comment_date>
			<wp:comment_date_gmt>2015-01-27 00:01:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mano explains, &ldquo;In grade 9 I could not touch the mesh.
Close the registry entry list and restart the PC as 
a way to make the changes effective. Sometimes the films can consume a lot 
of energy when you start downloading them.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12646</wp:comment_id>
			<wp:comment_author><![CDATA[Hosting the Todos example on Heroku &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/30/hosting-the-todos-example-on-heroku/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 21:09:12</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 21:09:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Series Overview [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12641</wp:comment_id>
			<wp:comment_author><![CDATA[An Example Backbone/Parse.com App &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 20:02:18</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 20:02:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Series Overview [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79935</wp:comment_id>
			<wp:comment_author><![CDATA[www.seopremo.co.uk]]></wp:comment_author>
			<wp:comment_author_email>sachin.lammon@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.seopremo.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>188.29.92.163</wp:comment_author_IP>
			<wp:comment_date>2015-12-30 03:35:05</wp:comment_date>
			<wp:comment_date_gmt>2015-12-30 03:35:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good post. I will be going through many 
of these issues as well.. This blog entry - Going (Mostly) Server-less with Backbone.js ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76555</wp:comment_id>
			<wp:comment_author><![CDATA[Charles Jones]]></wp:comment_author>
			<wp:comment_author_email>tyutyunina80@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>https://youtu.be/E05G5JhyzUc</wp:comment_author_url>
			<wp:comment_author_IP>203.31.216.152</wp:comment_author_IP>
			<wp:comment_date>2015-10-18 10:56:00</wp:comment_date>
			<wp:comment_date_gmt>2015-10-18 10:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Each single day I am personally learning a little more about NodeJS. It truly is definately the ultimate framework to figure out long-term. Just finished the BackSpace.Academy AWS Certified Developers online course. They have displayed a different Realm of apps for me. Now I have to find the time for getting developing!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76559</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Smith]]></wp:comment_author>
			<wp:comment_author_email>dima.aylasov.97@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://backspace.academy</wp:comment_author_url>
			<wp:comment_author_IP>203.31.216.152</wp:comment_author_IP>
			<wp:comment_date>2015-10-18 11:05:57</wp:comment_date>
			<wp:comment_date_gmt>2015-10-18 11:05:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[On daily basis We are learning somewhat more about NodeJS. It really is definately the ultimate framework to educate yourself on long term. I just accomplished the BackSpace.Academy Amazon Certified Developers educational program. It really has opened a totally new World of applications for myself. Now I want to find the time in order to get programming!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>A Proxy Server for Parse.com</title>
		<link>http://houseofbilz.com/archives/2011/11/07/a-proxy-server-for-parse-com/</link>
		<pubDate>Mon, 07 Nov 2011 11:41:46 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=366</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/">&lt;&lt; See the full series of posts</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a href="http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/">Making Backbone.js work with Parse.com &gt;&gt;</a></p>  <p>In my <a href="http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/">previous post</a>, I asked the question: “Is there any reason why can’t we use a service like [<a href="https://www.parse.com/">Parse.com</a>] in an HTML5/Javascript single-paged app?”&#160; The answer is “yes”.</p>  <p>The reason: <a href="http://en.wikipedia.org/wiki/Same_origin_policy">the same origin policy</a>.&#160; The browser won’t let you request Parse.com data from a different domain.&#160; There are certainly tricks you can play if you just want to GET the data (like JSONP for example), but there is no good way to make POST/PUT/DELETE requests.&#160; You have to stay on your own domain if you want to use all that a REST API has to offer.</p>  <p>Using my newfound <a href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> skills, I came up with this proxy server based on <a href="http://nodejs.org/">Node.js</a> with <a href="http://expressjs.com/">Express</a> and <a href="https://github.com/danwrong/restler">Restler</a>.&#160; While I’m at it, the server can return my index.html and all other assets (images, Javascript, CSS and HTML templates). </p>  <p>Here is the code (full code for this post is available on GitHub <a href="https://github.com/BrianGenisio/Parseback/tree/parse.com-proxy-with-readme">https://github.com/BrianGenisio/Parseback/tree/parse.com-proxy-with-readme</a>):</p>  <p><strong>proxy.coffee</strong></p>  <pre class="brush: coffeescript; toolbar: false;">express = require 'express'
restler = require 'restler'
config = require './config'

app = express.createServer()
app.use express.bodyParser()

app.get &quot;/&quot;, (req, res) =&gt;
  res.sendfile &quot;#{__dirname}/index.html&quot;

app.all &quot;#{config.apiPath}*&quot;, (req, res) =&gt; 
  console.log &quot;REQUEST: &quot;, req.url, req.body || &quot;no body&quot;
  
  data = JSON.stringify(req.body)

  restOptions =
    username:  config.applicationID
    password:  config.masterKey
    data:      data
    method:    req.method.toLowerCase()
    headers:
      'Content-Type':  'application/json'
      'Content-Length': data?.length || 0
  
  complete = (data) =&gt; 
    console.log &quot;COMPLETE: &quot;, data
    res.json JSON.parse(data)
  
  error = (data, res) =&gt;
    console.log &quot;FAILURE: &quot;, data, res
  
  restler.request(&quot;https://api.parse.com/1/classes/#{req.url.replace(config.apiPath, '')}&quot;, restOptions)
    .on(&quot;complete&quot;, complete)
    .on(&quot;error&quot;, error)
    
app.get &quot;/*&quot;, (req, res) =&gt;
  res.sendfile &quot;#{__dirname}#{req.url}&quot;
    
app.listen config.port

console.log &quot;Server started on #{config.port}&quot;</pre>

<p>This light-weight proxy will open a port and listen to requests.&#160; If you request “/” or any other file, it will dump it back.&#160; If you request “/data/*”, it will proxy your request off to Parse.com and return the result back.&#160; It will handle all of the GET/POST/PUT/DELETE requests that Parse.com supports.</p>

<p>This proxy server loads a config file:</p>

<p><strong>config.coffee</strong></p>

<pre class="brush: coffeescript; ruler: true; toolbar: false; smart-tabs: false;">module.exports =  
  applicationID: 'Your Parse.com Application ID'
  masterKey:     'Your Parse.com Master Key'
  apiPath:  '/data/'
  port:     3001</pre>

<p>The first two configuration options are provided to you by Parse.com when you create a new “App” with them.&#160; All of your entities for that “App” will have the same Application ID and Master Key.</p>

<p>Next is the path you want the proxy to use when passing data requests on.&#160; In this example, <a href="http://mydomain.com/data/People">http://mydomain.com/data/People</a> would proxy off to <a href="http://api.parse.com/1/classes/People">http://api.parse.com/1/classes/People</a>.</p>

<p>Finally you can specify the port to run the proxy on.&#160; This is self explanatory.</p>

<p>Now all I can run my server: <font face="Courier New">coffee proxy.coffee</font></p>

<p>Using curl, I can test all of the actions that my new server supports:</p>

<h3>Create</h3>

<p><font face="Courier New">&gt; curl -X POST -H &quot;Content-Type: application/json&quot; \ 
    <br />

    <br />&gt; -d '{&quot;first&quot;: &quot;Brian&quot;, &quot;last&quot;: &quot;Genisio&quot;}' \</font>

  <p>&gt; </p>
  <a href="http://localhost:3001/data/People"><font face="Courier New">http://localhost:3001/data/People</font></a><font face="Courier New"> 
    <br />

    <br />{&quot;createdAt&quot;:&quot;2011-11-05T19:11:25.873Z&quot;,&quot;objectId&quot;:&quot;fiIMd53m0j&quot;}&#160; </font></p>

<h3>List&#160; </h3>

<p><font face="Courier New">&gt; curl -X GET </font><a href="http://localhost:3001/data/People"><font face="Courier New">http://localhost:3001/data/People</font></a><font face="Courier New"> 
    <br />

    <br />{&quot;results&quot;:[{&quot;updatedAt&quot;:&quot;2011-11-05T19:11:25.873Z&quot;,&quot;last&quot;:&quot;Genisio&quot;,&quot;createdAt&quot;:&quot;2011-11-05T19:11:25.873Z&quot;,&quot;first&quot;:&quot;Brian&quot;,&quot;objectId&quot;:&quot;fiIMd53m0j&quot;}]}&#160; </font></p>

<h3>Update&#160; </h3>

<p><font face="Courier New">&gt; curl -X PUT -H &quot;Content-Type: application/json&quot; \&#160; <br />&gt; -d '{&quot;middle&quot;: &quot;Michael&quot;}' \&#160; <br />&gt; </font><a href="http://localhost:3001/data/People/fiIMd53m0j"><font face="Courier New">http://localhost:3001/data/People/fiIMd53m0j</font></a><font face="Courier New"> 
    <br />

    <br />{&quot;updatedAt&quot;:&quot;2011-11-05T19:15:25.122Z&quot;}&#160; </font></p>

<h3>Show&#160; </h3>

<p><font face="Courier New">&gt; curl -X GET </font><a href="http://localhost:3001/data/People/fiIMd53m0j"><font face="Courier New">http://localhost:3001/data/People/fiIMd53m0j</font></a><font face="Courier New">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <br />{&quot;middle&quot;:&quot;Michael&quot;,&quot;updatedAt&quot;:&quot;2011-11-05T19:15:25.122Z&quot;,&quot;last&quot;:&quot;Genisio&quot;,&quot;createdAt&quot;:&quot;2011-11-05T19:11:25.873Z&quot;,&quot;first&quot;:&quot;Brian&quot;,&quot;objectId&quot;:&quot;fiIMd53m0j&quot;}&#160;&#160; </font></p>

<h3>Delete&#160; </h3>

<p><font face="Courier New">&gt; curl -X DELETE </font><a href="http://localhost:3001/data/People/fiIMd53m0j"><font face="Courier New">http://localhost:3001/data/People/fiIMd53m0j</font></a><font face="Courier New"> 
    <br />

    <br />{}</font>&#160;</p>

<h3>Index.html</h3>

<p><font face="Courier New">&gt; curl </font><a href="http://localhost:3001"><font face="Courier New">http://localhost:3001</font></a><font face="Courier New"> 
    <br />

    <br />I AM AN HTML FILE</font></p>

<h3>Other assets</h3>

<p><font face="Courier New">&gt; curl </font><a href="http://localhost:3001/foo.bar"><font face="Courier New">http://localhost:3001/foo.bar</font></a><font face="Courier New"> 
    <br />

    <br />I AM A TEXT FILE</font></p>

<p>Considering my entire server is less than 50 lines of code, I am happy with this compromise.&#160; My technology (the browser) does not allow me to go completely server-less but this gets me pretty close. </p>

<p>In the next post, I will show how I got Backbone.js to talk to my proxy server.</p>

<p><a href="http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/">Making Backbone.js work with Parse.com &gt;&gt;</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>366</wp:post_id>
		<wp:post_date>2011-11-07 11:41:46</wp:post_date>
		<wp:post_date_gmt>2011-11-07 11:41:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-proxy-server-for-parse-com</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[CoffeeScript]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[HTML5]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="parse-com"><![CDATA[Parse.com]]></category>
		<category domain="post_tag" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[Web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33800</wp:comment_id>
			<wp:comment_author><![CDATA[Grover]]></wp:comment_author>
			<wp:comment_author_email>michaelabinder@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://gregstargell.com/video-games/index.php?task=profile&amp;id=382066</wp:comment_author_url>
			<wp:comment_author_IP>177.200.149.163</wp:comment_author_IP>
			<wp:comment_date>2014-12-25 02:28:51</wp:comment_date>
			<wp:comment_date_gmt>2014-12-25 02:28:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You cann easily get information that will help you maeket to 
people by asking them questions related to your niche, whether they are general questions or about a specific product 
or issue. I guarantee that as you sset your goals and reach them as 
well, you will be well on your way too learning 
how to make money with the internet. Unfortunately most beginners have unrealisticc expectations of large 
amounts of money flowing into their account from dayy one.


Allso visit my web site: profit legacy review [<a href="http://gregstargell.com/video-games/index.php?task=profile&amp;id=382066" rel="nofollow">Grover</a>] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33507</wp:comment_id>
			<wp:comment_author><![CDATA[list proxy]]></wp:comment_author>
			<wp:comment_author_email>genesispumphrey@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.proxylist2015.com</wp:comment_author_url>
			<wp:comment_author_IP>37.59.177.73</wp:comment_author_IP>
			<wp:comment_date>2014-12-17 14:55:54</wp:comment_date>
			<wp:comment_date_gmt>2014-12-17 14:55:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I must thank you for the efforts you have put in penning this blog.
I'm hoping to see the same high-grade content by you 
in the future as well. In truth, your creative writing 
abilities has motivated me to get my very own website now ;)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11869</wp:comment_id>
			<wp:comment_author><![CDATA[Making Backbone.js Work with Parse.com &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 11:29:26</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 11:29:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] &laquo; A Proxy Server for Parse.com [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11874</wp:comment_id>
			<wp:comment_author><![CDATA[Working with Backbone.js and the Parse.com Proxy &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 11:54:13</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 11:54:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Run the proxy server [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23890</wp:comment_id>
			<wp:comment_author><![CDATA[anon proxy]]></wp:comment_author>
			<wp:comment_author_email>MelbergMolden0520@yahoomail.com</wp:comment_author_email>
			<wp:comment_author_url>http://proxy-shadow.blogspot.co.uk/2014/03/welcome-on-our-blog.html</wp:comment_author_url>
			<wp:comment_author_IP>180.250.172.182</wp:comment_author_IP>
			<wp:comment_date>2014-03-21 09:36:16</wp:comment_date>
			<wp:comment_date_gmt>2014-03-21 09:36:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Exceptional factors totally, you simply acquired a new audience. What can you actually advise in relation to your set up that you just created a day or two back? Any certain?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64780</wp:comment_id>
			<wp:comment_author><![CDATA[Velma]]></wp:comment_author>
			<wp:comment_author_email>judicreighton@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.prarrow.com/view.php?id=9251</wp:comment_author_url>
			<wp:comment_author_IP>104.168.35.59</wp:comment_author_IP>
			<wp:comment_date>2015-08-10 04:25:09</wp:comment_date>
			<wp:comment_date_gmt>2015-08-10 04:25:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Raise your hand if you blindly checked boxes on your 401 (k) enrollment form.
There is no guarantee on the results since everything does depend on the quality of that tool.

once you found the suitable site you have further discuss with your investment broker.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32943</wp:comment_id>
			<wp:comment_author><![CDATA[produsen tas ransel rajut di yogyakarta]]></wp:comment_author>
			<wp:comment_author_email>leandro_pendergrass@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/grosirtasrajutdijogja</wp:comment_author_url>
			<wp:comment_author_IP>180.254.71.141</wp:comment_author_IP>
			<wp:comment_date>2014-12-03 22:33:57</wp:comment_date>
			<wp:comment_date_gmt>2014-12-03 22:33:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Saya telah bertahun-tahun surfing, tetapi baru kali ini 
saya mencermati coretan sebaik ini. Artikel ini amat berguna untuk saya.
Menurut saya, sekiranya para pemilik web membuat artikel-artikel sebagus ini, 
maka internet akan lebih bermanfaat dibanding sebelumnya.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38921</wp:comment_id>
			<wp:comment_author><![CDATA[Youtube]]></wp:comment_author>
			<wp:comment_author_email>maureencamacho@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=KoVLytSAWLw</wp:comment_author_url>
			<wp:comment_author_IP>172.245.115.145</wp:comment_author_IP>
			<wp:comment_date>2015-04-05 19:19:38</wp:comment_date>
			<wp:comment_date_gmt>2015-04-05 19:19:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Other customizable options will allow you 
to make your laptop fit to your needs. He was a skilled professional and the best soldier who 
could be relied on to run a Legion on a campaign and in battle.
The interesting videos actually hook the users to your profile.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50042</wp:comment_id>
			<wp:comment_author><![CDATA[Zora]]></wp:comment_author>
			<wp:comment_author_email>kelvinbeadle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tinyurl.com/8667a4d201312f700d4363b19d4304e5</wp:comment_author_url>
			<wp:comment_author_IP>104.168.57.17</wp:comment_author_IP>
			<wp:comment_date>2015-06-07 05:57:45</wp:comment_date>
			<wp:comment_date_gmt>2015-06-07 05:57:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Though there is a wide variation in prices and quality of this flower.
More Current laser sights are minuscule and light enough for attachment to the firearms.
A conscious decision to acquire whatever knowledge is necessary to succeed as a real estate investor has to be the first step.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37553</wp:comment_id>
			<wp:comment_author><![CDATA[Dance]]></wp:comment_author>
			<wp:comment_author_email>chara.beaudoin@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.albinoblacksheep.com/share/?url=http://q-asar.com/so-simple/right-dance-remix</wp:comment_author_url>
			<wp:comment_author_IP>23.94.40.155</wp:comment_author_IP>
			<wp:comment_date>2015-02-26 13:31:14</wp:comment_date>
			<wp:comment_date_gmt>2015-02-26 13:31:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Amazing! Its in fact remarkable paragraph, I have got 
much clear idea on the topic of from this paragraph.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33469</wp:comment_id>
			<wp:comment_author><![CDATA[small wine coolers]]></wp:comment_author>
			<wp:comment_author_email>beau.larios@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=IGc5vBrZ9nk</wp:comment_author_url>
			<wp:comment_author_IP>104.143.19.252</wp:comment_author_IP>
			<wp:comment_date>2014-12-16 17:56:03</wp:comment_date>
			<wp:comment_date_gmt>2014-12-16 17:56:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Elegantly structured with fresh acidity and ripe, mature tannins this 
vibrant Cabernet Sauvignon is perfect to enjoy now and over 
the next several years. We needed to also include a 
larger wine cooler in our research on wine cooler reviews 2012 so we looked at the Danby 75 bottle.
Some people like their homes cool and some like them warmer, but it is a consideration if you 
opt for a thermoelectric wine refrigerator.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27122</wp:comment_id>
			<wp:comment_author><![CDATA[unblock videos]]></wp:comment_author>
			<wp:comment_author_email>sterling.timmerman@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://unblockyoutubehd.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>41.251.225.126</wp:comment_author_IP>
			<wp:comment_date>2014-06-22 03:38:15</wp:comment_date>
			<wp:comment_date_gmt>2014-06-22 03:38:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Keep in mind that these sites may be blocked for a reason, and although you are virtually invisible while looking around, thyere are still waqys 
that someone can track what you are doing, you are not 
completely invisible. A VPN service, such as Primo - VPN allows people to bypaws 
filters and irewalls tjat may be incorporated for 
getting access to the content that has been blocked.
This is normally the czse of open up proxies when it acts as middleman in between the Online and any pc.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38633</wp:comment_id>
			<wp:comment_author><![CDATA[photo studio jakarta]]></wp:comment_author>
			<wp:comment_author_email>darwin_henson@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.pureipb.com/member.php?u=629808</wp:comment_author_url>
			<wp:comment_author_IP>46.102.100.73</wp:comment_author_IP>
			<wp:comment_date>2015-03-21 18:48:19</wp:comment_date>
			<wp:comment_date_gmt>2015-03-21 18:48:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for finally talking about &gt; A Proxy Server for Parse.com 
]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37876</wp:comment_id>
			<wp:comment_author><![CDATA[Brenna]]></wp:comment_author>
			<wp:comment_author_email>fredturnbull@mailworks.org</wp:comment_author_email>
			<wp:comment_author_url>http://horizoninternationalinc.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=4570</wp:comment_author_url>
			<wp:comment_author_IP>192.240.201.214</wp:comment_author_IP>
			<wp:comment_date>2015-03-04 08:50:14</wp:comment_date>
			<wp:comment_date_gmt>2015-03-04 08:50:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Often, the best way to find a great deal is by 
word of mouth. Nothing says fresh like a burst of color and 
this year's hues will not disappoint. These containers can be filled with flowers and herbs to brighten the look of your outdoor living space.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53449</wp:comment_id>
			<wp:comment_author><![CDATA[Zita]]></wp:comment_author>
			<wp:comment_author_email>ariel.houle@peacemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecanyon.net/item/arforms-wordpress-form-builder-plugin/6023165</wp:comment_author_url>
			<wp:comment_author_IP>192.227.223.77</wp:comment_author_IP>
			<wp:comment_date>2015-06-17 15:26:58</wp:comment_date>
			<wp:comment_date_gmt>2015-06-17 15:26:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To get started you will simply launch your Flash application and create a new file.
Fourth Step: In the menu bar, click Insert &gt; Form &gt; Form - As shown in this 
image:. s the old thing to say that Facebook has emerged as the greatest tool for many companies to market and promote their products.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32036</wp:comment_id>
			<wp:comment_author><![CDATA[agen resmi nano]]></wp:comment_author>
			<wp:comment_author_email>kirstenzeal@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://nanospraymciori.com/cantik-dengan-nano-spray-mci-indonesia-nano-spray/</wp:comment_author_url>
			<wp:comment_author_IP>186.224.64.102</wp:comment_author_IP>
			<wp:comment_date>2014-11-13 21:39:02</wp:comment_date>
			<wp:comment_date_gmt>2014-11-13 21:39:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Exfoliation is a great way to slough the dead skin cells off your face.
Research claims that olive leaf oil may help control diabetes.
A temportary way to prevent excess oil is using skin-blotting papers, which are created to absorb facial oill and reduce shine 
throughout thee day.

Here iis my web site: <a href="http://nanospraymciori.com/cantik-dengan-nano-spray-mci-indonesia-nano-spray/" rel="nofollow">agen resmi nano</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39458</wp:comment_id>
			<wp:comment_author><![CDATA[Susie]]></wp:comment_author>
			<wp:comment_author_email>marlenepritchett@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tinyurl.com/a671cbf74b593582332ede220d048450</wp:comment_author_url>
			<wp:comment_author_IP>155.94.170.49</wp:comment_author_IP>
			<wp:comment_date>2015-04-13 13:56:01</wp:comment_date>
			<wp:comment_date_gmt>2015-04-13 13:56:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We give them a choice whether they wish us to personally pick 
them up or take the complimentary shuttle bus. If 
that sounds like you, but alas you don't have the bucks  
to buy a luxury car,  Hertz can put you in the driver 
seat. What wheels' buff doesn't want to tool around town, or the 
country, in a spiffy car.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77050</wp:comment_id>
			<wp:comment_author><![CDATA[Veronique]]></wp:comment_author>
			<wp:comment_author_email>abdulcapuano@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ripoffreport.com/r/fresh-digital/albion-4010/fresh-digital-avoid-at-all-costs-this-seo-company-will-rip-you-off-albion-queensland-1259653</wp:comment_author_url>
			<wp:comment_author_IP>23.95.194.26</wp:comment_author_IP>
			<wp:comment_date>2015-10-21 18:44:29</wp:comment_date>
			<wp:comment_date_gmt>2015-10-21 18:44:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Poorly and unprofessionally titled pages can prove to be a big disappointment for 
the search engine and your yahoo store may be demoted in search engine listings.
There are many Wordpress plugins that can help us with these two factors.
Takee a look at your copy ' can you spot your keywords.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39443</wp:comment_id>
			<wp:comment_author><![CDATA[alquiler de furgonetas para negocios]]></wp:comment_author>
			<wp:comment_author_email>violette.graf@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.tusmedios.es/index.php?news=65405</wp:comment_author_url>
			<wp:comment_author_IP>104.168.57.3</wp:comment_author_IP>
			<wp:comment_date>2015-04-13 06:43:39</wp:comment_date>
			<wp:comment_date_gmt>2015-04-13 06:43:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you need a plan as an individual and for your 
family, then why not have a plan for your small business.

Proper planning is the key to turning your business vision into reality.
But even with my company having been in business for several years -- with continually climbing revenues 
and profits -- the would-be investment group I approached wanted to see a business plan.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33665</wp:comment_id>
			<wp:comment_author><![CDATA[Asterisk Setup Ubuntu]]></wp:comment_author>
			<wp:comment_author_email>hudsongarden@moose-mail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/ciaraperezfdcrxuoa/how-to-begin-switching-to-ubun-880528945.html</wp:comment_author_url>
			<wp:comment_author_IP>204.44.112.154</wp:comment_author_IP>
			<wp:comment_date>2014-12-21 08:57:32</wp:comment_date>
			<wp:comment_date_gmt>2014-12-21 08:57:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Writfe more, hats all I have to say. Literally, iit seems as though you relied on the video to make your point.
You obviously know what youre talking about, why throw away your intelligence on just posting videos to your blog when youu could 
bbe giving us something informative to read?

my weeb blog; <a href="https://www.rebelmouse.com/ciaraperezfdcrxuoa/how-to-begin-switching-to-ubun-880528945.html" rel="nofollow">Asterisk Setup Ubuntu</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59408</wp:comment_id>
			<wp:comment_author><![CDATA[Brightest Tactical Flashlights]]></wp:comment_author>
			<wp:comment_author_email>qmkemvf@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://policeflashlights.blog.com/</wp:comment_author_url>
			<wp:comment_author_IP>183.89.76.94</wp:comment_author_IP>
			<wp:comment_date>2015-07-10 23:36:53</wp:comment_date>
			<wp:comment_date_gmt>2015-07-10 23:36:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[get the best get more info around]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33569</wp:comment_id>
			<wp:comment_author><![CDATA[ipl auction 2015]]></wp:comment_author>
			<wp:comment_author_email>anneliese_eoff@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://iplauction2015.com</wp:comment_author_url>
			<wp:comment_author_IP>43.248.154.216</wp:comment_author_IP>
			<wp:comment_date>2014-12-19 05:51:16</wp:comment_date>
			<wp:comment_date_gmt>2014-12-19 05:51:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, i think that i noticed you visited my blog thus i came 
to return the desire?.I am trying to find things to enhance my site!I suppose its ok to make use of a few of your ideas!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37561</wp:comment_id>
			<wp:comment_author><![CDATA[Randell]]></wp:comment_author>
			<wp:comment_author_email>normancochrane@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.make.my/cochacks</wp:comment_author_url>
			<wp:comment_author_IP>23.89.150.228</wp:comment_author_IP>
			<wp:comment_date>2015-02-26 18:21:07</wp:comment_date>
			<wp:comment_date_gmt>2015-02-26 18:21:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello it's me, I am also visiting this site on a regular basis,
this website is in fact good and the users are in fact sharing nice thoughts.


Check out my homepage: clash of clans hack telecharger 
(<a href="http://www.make.my/cochacks" rel="nofollow">Randell</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70603</wp:comment_id>
			<wp:comment_author><![CDATA[Cristina]]></wp:comment_author>
			<wp:comment_author_email>dortheagellert@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=i_YJ-0clXM4</wp:comment_author_url>
			<wp:comment_author_IP>23.95.230.37</wp:comment_author_IP>
			<wp:comment_date>2015-09-05 20:05:05</wp:comment_date>
			<wp:comment_date_gmt>2015-09-05 20:05:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A home inspector who verifies plumbing, electric and structural work and a pest inspector can help verify any hidden problems.
Having a real estate investment business will give you the greatest personal, 
business and real estate tax advantages. This is because 
each year this area witnesses a huge pressure of population flocking in this metropolitan city of Oregon.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68924</wp:comment_id>
			<wp:comment_author><![CDATA[yelp.com]]></wp:comment_author>
			<wp:comment_author_email>saracisneros@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://yelp.com/biz/maid-sailors-cleaning-service-new-york-3</wp:comment_author_url>
			<wp:comment_author_IP>23.95.230.140</wp:comment_author_IP>
			<wp:comment_date>2015-08-28 18:41:08</wp:comment_date>
			<wp:comment_date_gmt>2015-08-28 18:41:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[UK has the best of everything that it can provide and this 
cleaning service is one of the services that it has and it usually ends up satisfying the users and the customers.
Every business, from a restaurant, car showroom,
or a school, needs an efficient and economical way to keep its premises clean and hygienic, not only for its reputation, but also for 
the health and well-being of staff and customers.
You go to your office daily and when you go to the wash room, a familiar smell of the chemical, that has been used to clean the room, smite your 
nose.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31143</wp:comment_id>
			<wp:comment_author><![CDATA[proxies]]></wp:comment_author>
			<wp:comment_author_email>philbertles@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://proxylist.me/</wp:comment_author_url>
			<wp:comment_author_IP>177.246.44.7</wp:comment_author_IP>
			<wp:comment_date>2014-10-29 02:04:47</wp:comment_date>
			<wp:comment_date_gmt>2014-10-29 02:04:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi my loved one! I want to say that this article is 
awesome, nice written and include approximately all significant infos.

I'd like to see more posts like this .]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57162</wp:comment_id>
			<wp:comment_author><![CDATA[psychoterapia]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.google.co.uk/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=7&amp;cad=rja&amp;uact=8&amp;ved=0CFkQoAIwBg&amp;url=http%3A%2F%2Fwww.heal.pl%2F&amp;ei=bQqEVYm-C8v5UvX6rsAO&amp;usg=</wp:comment_author_url>
			<wp:comment_author_IP>14.170.159.205</wp:comment_author_IP>
			<wp:comment_date>2015-06-26 07:12:39</wp:comment_date>
			<wp:comment_date_gmt>2015-06-26 07:12:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>psychoterapia...</strong>

A Proxy Server for Parse.com « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11691</wp:comment_id>
			<wp:comment_author><![CDATA[Going (Mostly) Server-less with Backbone.js &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-07 11:46:26</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 11:46:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Captive Runtime packaging in Air 3.0 A Proxy Server for Parse.com [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79987</wp:comment_id>
			<wp:comment_author><![CDATA[server ip]]></wp:comment_author>
			<wp:comment_author_email>julieta_gaskin@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://get-private-proxy.over-blog.com/</wp:comment_author_url>
			<wp:comment_author_IP>186.90.166.215</wp:comment_author_IP>
			<wp:comment_date>2016-01-04 07:24:07</wp:comment_date>
			<wp:comment_date_gmt>2016-01-04 07:24:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Where to buy proxy]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61963</wp:comment_id>
			<wp:comment_author><![CDATA[dieting and have diarrhea]]></wp:comment_author>
			<wp:comment_author_email>melinaillingworth@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://spyka.co.uk/products/scripts/short-url-1.0.2/127751</wp:comment_author_url>
			<wp:comment_author_IP>158.222.13.155</wp:comment_author_IP>
			<wp:comment_date>2015-07-25 18:34:53</wp:comment_date>
			<wp:comment_date_gmt>2015-07-25 18:34:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Compare that to vast amount of space you're going to look at 
whenever you still continue to use a major plate for the new reduced diet.
If you eat too much healthy food choices too it is possible to still put on weight from it.
This is the reason why it usually is better for your blood glucose level, 
along with your health normally, to eat sensibly and well in lieu of starving yourself.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33808</wp:comment_id>
			<wp:comment_author><![CDATA[aqui neste site]]></wp:comment_author>
			<wp:comment_author_email>jeanette.hornsby@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.instapaper.com/read/535920321</wp:comment_author_url>
			<wp:comment_author_IP>93.61.36.161</wp:comment_author_IP>
			<wp:comment_date>2014-12-25 16:09:58</wp:comment_date>
			<wp:comment_date_gmt>2014-12-25 16:09:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post. I used to be checking continuously this blog and I am inspired!
Extremely helpful information particularly the remaining phase :) I maintain such information much.
I used to be seeking this certain info for a long time.
Thank you and good luck.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32009</wp:comment_id>
			<wp:comment_author><![CDATA[สูตรลดน้ําหนักเร่งด่วน]]></wp:comment_author>
			<wp:comment_author_email>michaleacheson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://163.26.10.9/userinfo.php?uid=354873</wp:comment_author_url>
			<wp:comment_author_IP>104.218.192.241</wp:comment_author_IP>
			<wp:comment_date>2014-11-13 13:42:52</wp:comment_date>
			<wp:comment_date_gmt>2014-11-13 13:42:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There are literally thousands of books published on it, whether they're online or printed materials.
Regular physical activity, particularly weight-bearing 
exercises, reduces the risk of arthritis,
osteoporosis and heart disease. In order to retain the blood volume it is necessary to include adequate amount of salt in your diet during pregnancy.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40877</wp:comment_id>
			<wp:comment_author><![CDATA[Aleisha]]></wp:comment_author>
			<wp:comment_author_email>lavinakeeton@live.de</wp:comment_author_email>
			<wp:comment_author_url>http://santiagosantanacazorla.bligoo.es/santiago-santana-cazorla-lago-taurito</wp:comment_author_url>
			<wp:comment_author_IP>50.7.251.109</wp:comment_author_IP>
			<wp:comment_date>2015-04-26 07:21:56</wp:comment_date>
			<wp:comment_date_gmt>2015-04-26 07:21:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[La primera, llamada 'Monólogo empresarial', se destinará a la"sensibilización y detección de emprendedores entre los participantes".]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38572</wp:comment_id>
			<wp:comment_author><![CDATA[Burt Russe]]></wp:comment_author>
			<wp:comment_author_email>dorthyholtermann@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://nicetariff60255735.pen.io/</wp:comment_author_url>
			<wp:comment_author_IP>198.52.225.191</wp:comment_author_IP>
			<wp:comment_date>2015-03-20 01:02:11</wp:comment_date>
			<wp:comment_date_gmt>2015-03-20 01:02:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I waѕ curioսs if you ever thߋught of changing 
the layout of yߋur website? Its very well written; I love what youve got to say.
But maybe you сould a little more in the way of content so peoplе could connect with it better.
Yοuve got an awful lot of text for only having 1 or two images.
Maybe you could space it out better?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41618</wp:comment_id>
			<wp:comment_author><![CDATA[資料拯救]]></wp:comment_author>
			<wp:comment_author_email>dottywolford@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>https://Facebook.com/twdatahelp</wp:comment_author_url>
			<wp:comment_author_IP>201.243.98.47</wp:comment_author_IP>
			<wp:comment_date>2015-04-30 20:08:38</wp:comment_date>
			<wp:comment_date_gmt>2015-04-30 20:08:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[資料救援公司推薦,硬碟資料救援程式,硬碟資料救援軟體,硬碟救援台中,硬碟格式化救援,資料救援價格,新竹資料救援,隨身碟資料救援,高雄資料救援,隨身硬碟資料救援,硬碟資料救援軟,檔案修復,拯救 +資料,+復原 +檔案,如何救回資料,救回照片,資料遺失,修復壞軌,救回刪除檔案,救回刪除檔案,刪除檔案如何救回,
+檔案 覆蓋 救回,刪除照片,檔案無法開啟,無法格式化,資料救回,格式化救回,資料不見,
檔案救援,救援資料,資料救回,資料救回軟體,雲端硬碟,資料救援軟體,硬碟救援軟體,NAS硬碟,
wd硬碟,seagate硬碟,NAS硬碟故障,SAS硬碟故障,scsi硬碟故障,磁碟陣列,
硬碟維修,資料救援,隨身硬碟修理,隨身硬碟讀不到, 隨身硬碟損壞,固態硬碟救援,資料拯救,資料救回,硬碟搶救,硬碟救援,
硬碟資料救回,硬碟資料救援,硬碟修復,搶救硬碟,硬碟壞軌維修,硬碟檔案系統損壞,拯救硬碟,台北修理硬碟,硬碟修護,
修理硬碟,救回刪除檔案,救資料,硬碟送修,拯救資料,筆記型電腦硬碟,硬碟故障,
硬碟壞了會,資料修復,資料復原,如何知道硬碟壞了,
救硬碟台中,隨身硬碟修理,硬碟壞軌維修,硬碟檔案系統損壞,拯救硬碟,隨身硬碟損壞,台北修理硬碟,
硬碟修護,電腦硬碟維修,台中資料救援,硬碟損壞,外接硬碟送修,台北硬碟修復,硬碟維修回復,台中救硬碟,
硬碟異響,硬碟資料救援,無法讀取資料，隨身硬碟讀不到要拿去哪修,硬碟讀不到,硬碟壞軌
n]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37584</wp:comment_id>
			<wp:comment_author><![CDATA[ทีเด็ด]]></wp:comment_author>
			<wp:comment_author_email>eloiseprintz@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ballstep69.com/</wp:comment_author_url>
			<wp:comment_author_IP>23.95.63.69</wp:comment_author_IP>
			<wp:comment_date>2015-02-27 09:51:39</wp:comment_date>
			<wp:comment_date_gmt>2015-02-27 09:51:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for finally talking about &gt; A Proxy Server for Parse.com ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38881</wp:comment_id>
			<wp:comment_author><![CDATA[Kara]]></wp:comment_author>
			<wp:comment_author_email>ingridpugh@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://storify.com/Adwerd11/feeling-it-difficult-to-play-simpsons-tapped-out-g</wp:comment_author_url>
			<wp:comment_author_IP>104.168.56.25</wp:comment_author_IP>
			<wp:comment_date>2015-04-03 07:37:45</wp:comment_date>
			<wp:comment_date_gmt>2015-04-03 07:37:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The first desired effect was produced - but only for 
a small amount of time. Once the old tiled hearth and surround had 
been broken up, the feed pipes to the boiler were now exposed 
enough to be able to get a hack saw in to cut the pipes and free up the stove for removal.

An interesting early role for Pitt (shortly before he became a sex symbol and megastar).]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39931</wp:comment_id>
			<wp:comment_author><![CDATA[Proxy]]></wp:comment_author>
			<wp:comment_author_email>berylblackman@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://gunibirgit.bloggplatsen.se/gilla/?url=http://thepiratebay.xn--6frz82g</wp:comment_author_url>
			<wp:comment_author_IP>31.146.70.19</wp:comment_author_IP>
			<wp:comment_date>2015-04-20 11:44:17</wp:comment_date>
			<wp:comment_date_gmt>2015-04-20 11:44:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Like this man, we invest ourselves in the belief that life is supposed to be a 
specific way. You can certainly spend some extra money 
and outsource your recovery must a data center, however you 
should ensure that this expense is leaner than the money that you will lose during recovery operations on-site.
Soon, my good friend knocked on my bedroom door, awakening me.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38498</wp:comment_id>
			<wp:comment_author><![CDATA[concierge service san francisco]]></wp:comment_author>
			<wp:comment_author_email>deenapalombo@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://muttley.spaziogis.it/test/geostack/257616/revealing-critical-factors-of-personal-concierge</wp:comment_author_url>
			<wp:comment_author_IP>23.89.150.241</wp:comment_author_IP>
			<wp:comment_date>2015-03-17 12:30:11</wp:comment_date>
			<wp:comment_date_gmt>2015-03-17 12:30:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's an amazing post in favor of all the internet users; they will 
get benefit from it I am sure.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31918</wp:comment_id>
			<wp:comment_author><![CDATA[Anglea]]></wp:comment_author>
			<wp:comment_author_email>jeanettjeffreys@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/dallasx29sor/eight-unheard-of-ways-to-achie-733470905.html</wp:comment_author_url>
			<wp:comment_author_IP>50.115.175.238</wp:comment_author_IP>
			<wp:comment_date>2014-11-12 01:41:27</wp:comment_date>
			<wp:comment_date_gmt>2014-11-12 01:41:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I got this web page from my buddy who told me regarding this web site and at the moment this time I am visiting 
this web site and reading very informative content at this time.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57915</wp:comment_id>
			<wp:comment_author><![CDATA[vdiologsx.tumblr.com]]></wp:comment_author>
			<wp:comment_author_email>brendahavens@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://vdiologsx.tumblr.com/post/120525805350</wp:comment_author_url>
			<wp:comment_author_IP>23.94.162.34</wp:comment_author_IP>
			<wp:comment_date>2015-07-01 18:00:07</wp:comment_date>
			<wp:comment_date_gmt>2015-07-01 18:00:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If need be, use different trays, label them and file your documents accordingly.
Maid services are experts in keeping your home clean and in order, leaving you with time 
to take care of the important things in your life.

Home cleaning or janitorial bidding software, that contains 
these features, will provide you with the most flexibility, 
in preparing precise residential and commercial cleaning 
bids.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32512</wp:comment_id>
			<wp:comment_author><![CDATA[template monster]]></wp:comment_author>
			<wp:comment_author_email>kareemmccombie@mymacmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.themesharing.net</wp:comment_author_url>
			<wp:comment_author_IP>216.170.126.164</wp:comment_author_IP>
			<wp:comment_date>2014-11-22 13:24:00</wp:comment_date>
			<wp:comment_date_gmt>2014-11-22 13:24:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I read this paragraph fully concerning the difference of hottest and preceding technologies,
it's awesome article.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12645</wp:comment_id>
			<wp:comment_author><![CDATA[An Example Backbone/Parse.com App &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 20:40:48</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 20:40:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is the post where I put it all together.&#160; I showed how to create a proxy to use Parse.com as your data store.&#160; I also showed how to modify Backbone.js to use Parse.com.&#160; Now, I will show how easy it [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17998</wp:comment_id>
			<wp:comment_author><![CDATA[Christopher]]></wp:comment_author>
			<wp:comment_author_email>christophertrudel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.150.233.48</wp:comment_author_IP>
			<wp:comment_date>2012-12-08 20:02:37</wp:comment_date>
			<wp:comment_date_gmt>2012-12-08 20:02:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I agree one does not need to use the proxy at this point, but I have my reasons. As far as the above issue. Just to rule everything out I restarted the virtualbox that the app was running on.... and what do you know, roundtrip down to 619ms. Looks liek a good ole' reboot done the trick. Unfortunately will never know what it was if it doesn't come back which I hope it doesn't. Thanks for the quick reply and good work on the proxy. It solved a lot of issues for me.

Cheers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17997</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.40.254.44</wp:comment_author_IP>
			<wp:comment_date>2012-12-08 19:29:56</wp:comment_date>
			<wp:comment_date_gmt>2012-12-08 19:29:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Christopher,

It has been a year since I mussed around with it, but I recall that the round-trip was quite speedy when I did it.  The need for the proxy server has been a bit diminished since Parse.com came out with their direct JS library, so I haven't played with it in a while.  I've already migrated my app that used that mechanism to the Parse.js library.

Sorry I can't be of further help,
Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>17996</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17996</wp:comment_id>
			<wp:comment_author><![CDATA[Christopher]]></wp:comment_author>
			<wp:comment_author_email>christophertrudel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.150.233.48</wp:comment_author_IP>
			<wp:comment_date>2012-12-08 19:14:41</wp:comment_date>
			<wp:comment_date_gmt>2012-12-08 19:14:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good Day Brian.
While trying this I am experiencing incredible lag response from parse.com com. Do you? The console.log's let me know that the request hits my proxy right away but it takes some time to get back the response from parse.com after Restler makes the call. We are talking almost 8-9 secs. Basically doing exactly what is doen here except I make the call to the proxy using the Parse JS SDK, just had to change the Parse Server line in the code to point to localhost and all the libraries are the latest (express, restler, coffee)

Any idea what is happening? Any help would be great. Other than the lag everything else works great. Response comes back as if I called Parse directly.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57330</wp:comment_id>
			<wp:comment_author><![CDATA[Meilleure pizza à Wintzenheim]]></wp:comment_author>
			<wp:comment_author_email>lilalassiter@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=IAqew5gtXC0</wp:comment_author_url>
			<wp:comment_author_IP>23.94.162.34</wp:comment_author_IP>
			<wp:comment_date>2015-06-27 16:46:19</wp:comment_date>
			<wp:comment_date_gmt>2015-06-27 16:46:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With so many pizza joints to choose from, you will never be 
disappointed as to how good and how varied the pizza menus of Las Vegas are.
When you are in need of a lot of pizza, ask the pizza shop 
about catering prices or large pizza specials or pizza coupons, it will 
earn you a better price per slice. The tools you will need depend on the type of oven you will be 
constructing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38518</wp:comment_id>
			<wp:comment_author><![CDATA[residential interior design]]></wp:comment_author>
			<wp:comment_author_email>saulfreeleagus@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/100723052154581924803/posts</wp:comment_author_url>
			<wp:comment_author_IP>23.229.28.247</wp:comment_author_IP>
			<wp:comment_date>2015-03-18 06:15:13</wp:comment_date>
			<wp:comment_date_gmt>2015-03-18 06:15:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thankfully, now you have check this out post, you will be far more equipped than you could have hoped to be prior to.

You can get lot of information on DIY kits on the internet and the materials can be easily 
bought from a local hardware store. For example, your sofa, if 
you have one, probably needs to remain in this room, assuming 
you use this area for seating.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38701</wp:comment_id>
			<wp:comment_author><![CDATA[Kion Kashefi]]></wp:comment_author>
			<wp:comment_author_email>dickprimrose@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://registry.thebump.com/sarah-kashefi-kion-kashefi-september-2014-ca/8586520</wp:comment_author_url>
			<wp:comment_author_IP>172.245.229.196</wp:comment_author_IP>
			<wp:comment_date>2015-03-24 04:11:39</wp:comment_date>
			<wp:comment_date_gmt>2015-03-24 04:11:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I read this post completely about the difference of 
most up-to-date and previous technologies, it's awesome article.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79330</wp:comment_id>
			<wp:comment_author><![CDATA[good mountain bikes]]></wp:comment_author>
			<wp:comment_author_email>halliedwyer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.openstreetmap.org/user/BikingReviews0</wp:comment_author_url>
			<wp:comment_author_IP>61.164.149.58</wp:comment_author_IP>
			<wp:comment_date>2015-11-12 05:46:57</wp:comment_date>
			<wp:comment_date_gmt>2015-11-12 05:46:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am not sure the place you're getting your info, but <a href="http://www.openstreetmap.org/user/BikingReviews0" rel="nofollow">good mountain bikes</a> topic.
I needs to spend some time finding out more or understanding more.
Thank you for magnificent information I used to be on the lookout for this 
information forr my mission.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39369</wp:comment_id>
			<wp:comment_author><![CDATA[Sistem multinivel]]></wp:comment_author>
			<wp:comment_author_email>thorsten_ferris@aol.com</wp:comment_author_email>
			<wp:comment_author_url>https://storify.com/meekfascis527/tres-sencillos-pasos-para-un-eficiente-plan-de-mar</wp:comment_author_url>
			<wp:comment_author_IP>107.153.64.174</wp:comment_author_IP>
			<wp:comment_date>2015-04-11 01:06:27</wp:comment_date>
			<wp:comment_date_gmt>2015-04-11 01:06:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This post is really a pleasant one it helps new internet users, who are 
wishing in favor of blogging.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23238</wp:comment_id>
			<wp:comment_author><![CDATA[Cpa in albuequerque]]></wp:comment_author>
			<wp:comment_author_email>rosalinda_forster@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=H_KVs-FSBvU</wp:comment_author_url>
			<wp:comment_author_IP>50.2.194.194</wp:comment_author_IP>
			<wp:comment_date>2014-01-31 15:24:15</wp:comment_date>
			<wp:comment_date_gmt>2014-01-31 15:24:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Stating the “best” software would be an impossible 
task without being biased, and the best one will come down to 
personal preference. The 1832 Bankruptcy Court Act and the Insolvency Act 
of 1838 continued the move towards giving increasing protection 
to debtors in bankruptcy proceedings. Use a tax relief accountant to help combat the frustration you may feel as your business grows.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64515</wp:comment_id>
			<wp:comment_author><![CDATA[https://www.youtube.com/watch?v=a5d4AhAmjp8]]></wp:comment_author>
			<wp:comment_author_email>lonnybattarbee@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=a5d4AhAmjp8</wp:comment_author_url>
			<wp:comment_author_IP>23.94.181.123</wp:comment_author_IP>
			<wp:comment_date>2015-08-09 01:05:06</wp:comment_date>
			<wp:comment_date_gmt>2015-08-09 01:05:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some of your friends might be interested and ask you to do some job.
You could use article marketing or even blogging to promote 
the affiliate products. While the car accident that left 
me with chronic pain took away my ability to do the things I was able to do before, one 
thing it did not take away was my ability to become creative in finding other ways to 
help provide for my family.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38685</wp:comment_id>
			<wp:comment_author><![CDATA[Socioboard]]></wp:comment_author>
			<wp:comment_author_email>felix.conley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://socioboard.yspages.com/</wp:comment_author_url>
			<wp:comment_author_IP>194.28.38.1</wp:comment_author_IP>
			<wp:comment_date>2015-03-23 21:13:24</wp:comment_date>
			<wp:comment_date_gmt>2015-03-23 21:13:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thankfulness to my father who shared with me about this blog, this webpage is genuinely awesome.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38667</wp:comment_id>
			<wp:comment_author><![CDATA[Pure Youth Solution Cream]]></wp:comment_author>
			<wp:comment_author_email>kitbaile@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://qisabofubose.bravejournal.com/index.php</wp:comment_author_url>
			<wp:comment_author_IP>104.222.132.29</wp:comment_author_IP>
			<wp:comment_date>2015-03-23 07:55:27</wp:comment_date>
			<wp:comment_date_gmt>2015-03-23 07:55:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hurrah! In the end I got a web site from where I be 
capable of actually take valuable facts regarding my study and 
knowledge.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54820</wp:comment_id>
			<wp:comment_author><![CDATA[Taylor]]></wp:comment_author>
			<wp:comment_author_email>cierragoulet@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tinyurl.com/herpescure2015latest</wp:comment_author_url>
			<wp:comment_author_IP>104.168.35.99</wp:comment_author_IP>
			<wp:comment_date>2015-06-20 15:45:24</wp:comment_date>
			<wp:comment_date_gmt>2015-06-20 15:45:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A mass amount of people just like yourself suffer from the grueling cold 
sore. As people age, their immune systems go down, making them more susceptible to infections, pneumonia, flu, and 
other types of inflammation or disease. Sexually transmitted diseases that are acquired during pregnancy are potentially life threatening.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60424</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.papelesimpresos.com/]]></wp:comment_author>
			<wp:comment_author_email>fred_hedgepeth@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.papelesimpresos.com/index.php/en/blog/item/22-tincidunt-enim-condimentum</wp:comment_author_url>
			<wp:comment_author_IP>220.168.133.63</wp:comment_author_IP>
			<wp:comment_date>2015-07-16 19:17:38</wp:comment_date>
			<wp:comment_date_gmt>2015-07-16 19:17:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read so many posts on the topic of the blogger 
lovers however this post is actually a good post, keep it up.


my site help me sleep at night, <a href="http://www.papelesimpresos.com/index.php/en/blog/item/22-tincidunt-enim-condimentum" rel="nofollow">http://www.papelesimpresos.com/</a>,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49167</wp:comment_id>
			<wp:comment_author><![CDATA[Kendall]]></wp:comment_author>
			<wp:comment_author_email>dianbui@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://spankviral.com/?p=12</wp:comment_author_url>
			<wp:comment_author_IP>194.247.58.64</wp:comment_author_IP>
			<wp:comment_date>2015-06-03 07:22:56</wp:comment_date>
			<wp:comment_date_gmt>2015-06-03 07:22:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You need to submit your claim within 2 months of the offer end date.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46747</wp:comment_id>
			<wp:comment_author><![CDATA[find home tutor singapore]]></wp:comment_author>
			<wp:comment_author_email>ceciledetwiler@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hometuition-a1.blogspot.sg</wp:comment_author_url>
			<wp:comment_author_IP>23.94.181.47</wp:comment_author_IP>
			<wp:comment_date>2015-05-24 21:50:20</wp:comment_date>
			<wp:comment_date_gmt>2015-05-24 21:50:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have fun and change these games around as you need or like.
Houston Family Examiner: : How do parents begin the tutoring process.
Maths and chemistry for kids always seem to be the trickiest subjects.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47156</wp:comment_id>
			<wp:comment_author><![CDATA[Norberto]]></wp:comment_author>
			<wp:comment_author_email>bettina.macdougall@live.de</wp:comment_author_email>
			<wp:comment_author_url>http://kisen.bloggagratis.se/gilla/?url=http://www.2cp.org/</wp:comment_author_url>
			<wp:comment_author_IP>42.96.175.11</wp:comment_author_IP>
			<wp:comment_date>2015-05-25 23:59:37</wp:comment_date>
			<wp:comment_date_gmt>2015-05-25 23:59:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up colleagues, how is the whole thing, and what 
you desire to say on the topic of this article, in my 
view its genuinely remarkable designed for me.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53101</wp:comment_id>
			<wp:comment_author><![CDATA[Craig Tuttle]]></wp:comment_author>
			<wp:comment_author_email>wilbert_foreman@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.pinterest.com/craigtuttle/craig-tuttle-marketing/</wp:comment_author_url>
			<wp:comment_author_IP>104.168.43.104</wp:comment_author_IP>
			<wp:comment_date>2015-06-16 20:37:24</wp:comment_date>
			<wp:comment_date_gmt>2015-06-16 20:37:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[New designs are put into place so that visitors find it appealing.
The SEO Expert you end up hiring should be so skilled 
in his work that a glance at your website should be enough for the 
organization to tell you the repair it needs. Once you know that things are not exactly going 
positive, you should better start concentrating on better SEO service providers.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63741</wp:comment_id>
			<wp:comment_author><![CDATA[stupendousperfectionrebel.tumblr.com]]></wp:comment_author>
			<wp:comment_author_email>ednastringer@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://stupendousperfectionrebel.tumblr.com/post/125918091309/get-wp-animator-review-download</wp:comment_author_url>
			<wp:comment_author_IP>95.233.85.189</wp:comment_author_IP>
			<wp:comment_date>2015-08-05 17:03:50</wp:comment_date>
			<wp:comment_date_gmt>2015-08-05 17:03:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Contact form salesforce capture leads from yor website (<a href="http://stupendousperfectionrebel.tumblr.com/post/125918091309/get-wp-animator-review-download" rel="nofollow">stupendousperfectionrebel.tumblr.com</a>) are extraordinarily worthwhile and extra prone to flip intyo business, but they're toygher 
too get.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76561</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Campbell]]></wp:comment_author>
			<wp:comment_author_email>klepalchenko90@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://backspace.academy</wp:comment_author_url>
			<wp:comment_author_IP>203.31.216.152</wp:comment_author_IP>
			<wp:comment_date>2015-10-18 11:07:59</wp:comment_date>
			<wp:comment_date_gmt>2015-10-18 11:07:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Each day I am personally learning a great deal about NodeJS. It truly is definately the one and only language to get familiar with long-term. I recently fulfilled the BackSpace.Academy AWS Certified Developers route. It's opened up a totally new Arena of apps for myself. Now I must spare the time in order to get developing!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71153</wp:comment_id>
			<wp:comment_author><![CDATA[Matcha Tee]]></wp:comment_author>
			<wp:comment_author_email>adelineclubbe@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://tinyurl.com/5281584530001df990c7b8c1981d18ea</wp:comment_author_url>
			<wp:comment_author_IP>23.95.181.33</wp:comment_author_IP>
			<wp:comment_date>2015-09-09 04:10:12</wp:comment_date>
			<wp:comment_date_gmt>2015-09-09 04:10:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With Weight Watchers you can link into your Weight Watchers account and begin dealing with your food schedule, you can even get recipe suggestions.
The key here is natural herbs, spices and supplements, not chemically-engineered ones (read the label.
A Successful Program on Losing Weight Fast &amp; Trim your Belly.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Making Backbone.js Work with Parse.com</title>
		<link>http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/</link>
		<pubDate>Mon, 07 Nov 2011 20:40:45 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=374</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/">Series Overview</a>     <br /><a href="http://houseofbilz.com/archives/2011/11/07/a-proxy-server-for-parse-com/">&lt;&lt; A Proxy Server for Parse.com</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <a href="http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/">Working with Backbone.js and the Parse.com proxy &gt;&gt;</a></p>  <p>In the previous post, I showed how you can create a minimal server that proxies requests on to <a href="http://parse.com">Parse.com</a> for back-end data storage.</p>  <p>Next, I need to consider the <a href="http://documentcloud.github.com/backbone/">Backbone.js</a> side of things.&#160; Backbone gives a really great way of describing models and collections as long as the data conforms to its REST flavor.&#160; Unfortunately, Parse.com does things a little bit differently.&#160; I have encapsulated this code into some base prototypes that can be used later.&#160; </p>  <p><strong>parse.com.coffee</strong></p>  <pre class="brush: coffeescript; ruler: true; toolbar: false; smart-tabs: false;">class Backbone.ParseCollection extends Backbone.Collection
  parse: (resp, xhr) -&gt;
    data = super
    data.results
    
  fetch: (options) -&gt;
    if options?.query?
      options.data = &quot;where=&quot; + JSON.stringify options.query
      delete options.query
    super
    


class Backbone.ParseModel extends Backbone.Model
  setId: (data) -&gt;
    data.id = data.objectId unless data.id
    data

  constructor: (model) -&gt;
    @setId model
    super

  parse: (resp, xhr) -&gt;
    @setId super

  toJSON: () -&gt;
    result = super
    delete result.createdAt
    delete result.updatedAt
    result</pre>

<p>These base classes help me to adapt the data and behavior of Parse.com:</p>

<h3>Collection Fetching</h3>

<br />

<p>Backbone wants a JSON array from the server.&#160; Parse.com gives you a JSON object with an array called “results” inside the root object.&#160; The code overrides Backbone.Collection.parse to return the array property from the Parse.com response.</p>

<h3>Collection Queries</h3>

<br />

<p>You can make server-side queries via the query parameters in the Parse.com API.&#160; The code overrides Backbone.Collection.fetch to take a “query” option.&#160; Mutate it to the format that Parse.com wants in the API.&#160; I’ll discuss this more in the next post.</p>

<h3>Model IDs</h3>

<br />

<p>Parse.com IDs have the name of “objectId” but Backbone expects the IDs to be named “id”.&#160; The code overrides the Backbone.Model.parse and Backbone.Model.constructor functions to set the ID based on the “objectID” that comes from Parse.com.&#160; This will be used later when updating or deleting the object.</p>

<h3>Model Metadata</h3>

<br />

<p>Parse.com includes two metadata fields: “createdAt” and “updatedAt”.&#160; While they may be useful, Parse.com fails if you send these fields via a PUT request.&#160; The code overrides Backbone.Model.toJSON to remove these items from the serialization, thus keeping them from being sent to Parse.com as well.</p>

<p>We now have base prototypes that allow us to communicate with the server.&#160; Instead of extending Backbone.Model and Backbone.Collection, you should make your models extend Backbone.ParseModel and Backbone.ParseCollection.&#160; </p>

<p>In the next post, I will show how to do this and we will play in the browser a bit in order to show <a href="http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/">how Backbone.js models and collections interact with the proxy server</a>. 

  </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>374</wp:post_id>
		<wp:post_date>2011-11-07 20:40:45</wp:post_date>
		<wp:post_date_gmt>2011-11-07 20:40:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-backbone-js-work-with-parse-com</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[CoffeeScript]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[HTML5]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="parse-com"><![CDATA[Parse.com]]></category>
		<category domain="post_tag" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[Web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11870</wp:comment_id>
			<wp:comment_author><![CDATA[Working with Backbone.js and the Parse.com Proxy &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 11:35:11</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 11:35:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] &laquo; Making Backbone.js Work with Parse.com [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23557</wp:comment_id>
			<wp:comment_author><![CDATA[Clarita]]></wp:comment_author>
			<wp:comment_author_email>claritaworthington@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://learn-programming-quickly.blogspot.co.uk/2014/01/learning-python-for-beginners.html</wp:comment_author_url>
			<wp:comment_author_IP>165.231.22.63</wp:comment_author_IP>
			<wp:comment_date>2014-03-01 20:10:51</wp:comment_date>
			<wp:comment_date_gmt>2014-03-01 20:10:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hiya, I Simply like programming with Ruby.

Have not been using it a long time but learn heaps from net sites 
throughout the web. That said, your website has aided me so much, furthermore I 
say thank you for the understandable explanattions and really easy to follow 
information on your internet site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23643</wp:comment_id>
			<wp:comment_author><![CDATA[Judie Salstrom]]></wp:comment_author>
			<wp:comment_author_email>elizabethwhitty@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://takayamakita-sci.org/?p=256</wp:comment_author_url>
			<wp:comment_author_IP>202.29.235.122</wp:comment_author_IP>
			<wp:comment_date>2014-03-07 23:45:28</wp:comment_date>
			<wp:comment_date_gmt>2014-03-07 23:45:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there mates, its fantastic paragraph regarding cultureand 
completely defined, keep it up all the time.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27905</wp:comment_id>
			<wp:comment_author><![CDATA[Get the facts]]></wp:comment_author>
			<wp:comment_author_email>monikamorice@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://voresverden.com</wp:comment_author_url>
			<wp:comment_author_IP>186.94.236.47</wp:comment_author_IP>
			<wp:comment_date>2014-07-22 23:36:44</wp:comment_date>
			<wp:comment_date_gmt>2014-07-22 23:36:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This website was... how do I say it? Relevant!!

Finally I have found something that helped me. Cheers!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11721</wp:comment_id>
			<wp:comment_author><![CDATA[Going (Mostly) Server-less with Backbone.js &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-07 20:47:54</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 20:47:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Making Backbone.js Work with Parse.com [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11722</wp:comment_id>
			<wp:comment_author><![CDATA[A Proxy Server for Parse.com &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/a-proxy-server-for-parse-com/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-07 20:49:35</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 20:49:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Going (Mostly) Server-less with Backbone.js Making Backbone.js Work with Parse.com [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26042</wp:comment_id>
			<wp:comment_author><![CDATA[Kenroy Home 90376PN Bow Six-Light Chandelier]]></wp:comment_author>
			<wp:comment_author_email>sidney_jankowski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://indulgy.com/post/muASxCXP2</wp:comment_author_url>
			<wp:comment_author_IP>173.232.105.45</wp:comment_author_IP>
			<wp:comment_date>2014-05-10 01:04:22</wp:comment_date>
			<wp:comment_date_gmt>2014-05-10 01:04:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent blog you've got here.. It's hard to find high-quality writing like yours nowadays.
I honestly appreciate people like you! Take care!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12650</wp:comment_id>
			<wp:comment_author><![CDATA[An Example Backbone/Parse.com App &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 21:14:16</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 21:14:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I showed how to create a proxy to use Parse.com as your data store.&#160; I also showed how to modify Backbone.js to use Parse.com.&#160; Now, I will show how easy it is to use Backbone.js models and collections with a service [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Working with Backbone.js and the Parse.com Proxy</title>
		<link>http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/</link>
		<pubDate>Wed, 09 Nov 2011 11:32:19 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=381</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/">Series Overview</a> 

  <br /><a href="http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/">&lt;&lt; Making Backbone.js Work with Parse.com</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/">An Example Backbone/Parse.com App &gt;&gt;</a>

</p>

<p>In the <a href="http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/">last post</a>, I presented some base prototypes for Backbone.js models and collections that play nicely with Parse.com</p>

<p>Next, I will put all the pieces together and show how to use Backbone.js with Parse.com.&#160; All of the code is available on GitHub. <a href="https://github.com/BrianGenisio/Parseback/tree/parse.com-proxy-with-backbone.js">https://github.com/BrianGenisio/Parseback/tree/parse.com-proxy-with-backbone.js</a></p>

<h3>Create an “App” on Parse.com called “MyPeeps”</h3>

<p>Once you crate the App, you will be given an <strong>Application Id</strong> and a <strong>Master Key</strong> which are essentially your user/password authentication for the site.</p>

<br />

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/ae906ffa-2f27-4317-a88f-7ff710850645/2011-11-04_22-10-11.png" width="344" height="218" /><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/ec1bf2af-ed3d-4792-9bec-ea0ca1e71839/2011-11-04_22-10-47.png" width="381" height="287" /></p>

<h3>Set the ApplicationID and MasterKey in the <font style="font-weight: bold">config.coffee </font>file</h3>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/e2e751c7-91a1-41f1-9254-9036979675ac/2011-11-09_05-41-33.png" /></p>

<h3>Create the model and collections (<font style="font-weight: bold">people.coffee</font>)</h3>

<p>The model and collection extends from <strong>ParseModel</strong> and <strong>ParseCollection</strong> described in the <a href="http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/">last post</a>.</p>

<pre class="brush: coffeescript; ruler: true; toolbar: false; smart-tabs: false;">window.app = 
  models: {}
  collections: {}

class app.models.Person extends Backbone.ParseModel
  urlRoot: &quot;/data/People&quot;

class app.collections.People extends Backbone.ParseCollection
  model: app.models.Person
  url: &quot;/data/People&quot;</pre>

<h3>Create <font style="font-weight: bold">index.html</font></h3>

<pre class="brush: xml; ruler: true; toolbar: false; smart-tabs: false;">&lt;html&gt;
&lt;head&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;/vendor/jquery-1.6.2.js&quot;&gt;&lt;/script&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;/vendor/underscore-1.1.7.js&quot;&gt;&lt;/script&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;/vendor/backbone-0.5.3.js&quot;&gt;&lt;/script&gt;

  &lt;script type=&quot;text/javascript&quot; src=&quot;app.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  Use the developer tools in your browser to play
&lt;/body&gt;
&lt;/html&gt;</pre>

<h3>Run the <a href="http://houseofbilz.com/archives/2011/11/07/a-proxy-server-for-parse-com/">proxy server</a></h3>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/8321bda4-3108-41b1-a228-62d255f2de75/2011-11-09_05-47-46.png" /></p>

<h3>Point your browser to <a href="http://localhost:3001">http://localhost:3001</a>. Open your console and start playing</h3>

<p>Use your developer tools to create and work with your backbone models (created in <strong>people.coffee</strong>).</p>

<h3>Create</h3>

<p>Create a new <strong>Person</strong> model with the attributes you want and <strong>save</strong> it.&#160; The “People” class will get created on Parse.com and the attributes will get populated. Everything is schema-less so it gets created on demand.</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/c4cc99a6-e50b-4ae3-930c-99f4e6db6bf4/2011-11-06_19-40-09.png" /></p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/a6bdfdb6-3f3c-4a9d-9786-90faf656dd06/2011-11-06_19-37-32.png" width="769" height="335" /></p>

<h3>List</h3>

<p>Create a new <strong>People</strong> collection and <strong>fetch</strong> the items.&#160; When the server responds, you will see your new item in the collection with the attributes you set.</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/e2ca54e4-2b77-4a25-b8ca-e6f403451f13/2011-11-06_19-41-19.png" /></p>

<h3>Update</h3>

<p>When you update the attributes on your <strong>Person</strong> model and save it, the updates will go back to Parse.com.</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/eb144cc0-ec82-47c9-8372-04889b828e08/2011-11-06_19-42-56.png" /><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/7f640dff-9d2d-4687-b879-607aae7b7ebd/2011-11-06_19-43-17.png" width="736" height="142" /></p>

<h3>Show</h3>

<p>If you create a new <strong>Person</strong> model with a known id, you can <strong>fetch</strong> it from Parse.com</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/b2fa1cab-8ca6-48ca-a90b-8668264139c3/2011-11-06_19-45-05.png" /></p>

<h3>Delete</h3>

<p>If you don’t want your object anymore, you can <strong>destroy</strong> it.</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/e0925b52-a9a1-4f75-9aa8-21f4b1834a04/2011-11-06_19-45-50.png" /><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/12b4faae-523e-49c9-83a1-ef7f2dd51e9b/2011-11-06_19-46-07.png" width="747" height="198" /></p>

<h3>Querying</h3>

<p>A very useful feature of the Parse.com API is the ability to query data.&#160; To illustrate this, let’s populate the database with three <strong>Person</strong> models: Brian Genisio, Eli Genisio and Jon Doe.</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/c78d171d-37e6-480b-93f2-76f2329692f5/2011-11-06_19-57-58.png" /></p>

<p>I can pass a query parameter into the <strong>fetch</strong> function because <strong>Person</strong> derives from <strong>ParseModel</strong>.&#160; Here, I am querying for any object in the database with a <strong>last</strong> attribute of “Genisio”.&#160; Note that I only receive the two and Jon Doe is not retrieved.</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/27fe7baa-aa3d-43db-9a04-afd576fdded4/2011-11-06_19-57-58.png" /></p>

<p>Queries can be <a href="https://www.parse.com/docs/rest#data-querying">more complex</a>.&#160; Here is a similar query asking for all objects who’s <strong>last</strong> name attribute is not “Doe”.</p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/e58cc32d-228c-43c8-9bcd-46f21195929d/2011-11-06_19-59-13.png" /></p>

<h3>Conclusion</h3>

<p>I’ve illustrated how easy it is to use Backbone.js to work with the Parse.com backend.&#160; Everything available in the REST API is abstracted with the <strong>Model</strong> and <strong>Collection</strong> paradigm that Backbone provides.&#160; By placing a small proxy between your HTML client and Parse.com, you can quickly build single-paged applications and forget about the back-end. (For data-centric apps)</p>

<p>In my next post, I will give an <a href="http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/">example of a single-paged application that uses Parse.com as the back-end.</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>381</wp:post_id>
		<wp:post_date>2011-11-09 11:32:19</wp:post_date>
		<wp:post_date_gmt>2011-11-09 11:32:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-with-backbone-js-and-the-parse-com-proxy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[CoffeeScript]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[HTML5]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="parse-com"><![CDATA[Parse.com]]></category>
		<category domain="post_tag" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[Web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11871</wp:comment_id>
			<wp:comment_author><![CDATA[Making Backbone.js Work with Parse.com &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 11:37:13</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 11:37:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] A Proxy Server for Parse.com Working with Backbone.js and the Parse.com Proxy [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11875</wp:comment_id>
			<wp:comment_author><![CDATA[Going (Mostly) Server-less with Backbone.js &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 11:56:11</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 11:56:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Working with Backbone.js and the Parse.com Proxy [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34103</wp:comment_id>
			<wp:comment_author><![CDATA[Hydrellatone]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/heatherlainglk/the-strategies-of-beautiful-sk-873649231.html</wp:comment_author_url>
			<wp:comment_author_IP>198.167.138.231</wp:comment_author_IP>
			<wp:comment_date>2015-01-01 10:33:04</wp:comment_date>
			<wp:comment_date_gmt>2015-01-01 10:33:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Hydrellatone...</strong>

Working with Backbone.js and the Parse.com Proxy « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11996</wp:comment_id>
			<wp:comment_author><![CDATA[Tikhon Bernstam]]></wp:comment_author>
			<wp:comment_author_email>tikhon@parse.com</wp:comment_author_email>
			<wp:comment_author_url>http://parse.com</wp:comment_author_url>
			<wp:comment_author_IP>75.103.9.228</wp:comment_author_IP>
			<wp:comment_date>2011-11-10 23:21:50</wp:comment_date>
			<wp:comment_date_gmt>2011-11-10 23:21:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looking forward to the next post!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29744</wp:comment_id>
			<wp:comment_author><![CDATA[coach]]></wp:comment_author>
			<wp:comment_author_email>ybvryyh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.recordchina.co.jp/</wp:comment_author_url>
			<wp:comment_author_IP>108.171.255.44</wp:comment_author_IP>
			<wp:comment_date>2014-10-02 02:57:14</wp:comment_date>
			<wp:comment_date_gmt>2014-10-02 02:57:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I actually basically have a home in this coach! When i never ever remove them! They are which means nice and model. My best coach would be the just cause i really like winter time!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80231</wp:comment_id>
			<wp:comment_author><![CDATA[travelodge discount code]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.co.uk/vouchers/travelodge/</wp:comment_author_url>
			<wp:comment_author_IP>46.102.98.232</wp:comment_author_IP>
			<wp:comment_date>2016-01-26 13:12:23</wp:comment_date>
			<wp:comment_date_gmt>2016-01-26 13:12:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>travelodge discount code...</strong>

Working with Backbone.js and the Parse.com Proxy « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12644</wp:comment_id>
			<wp:comment_author><![CDATA[An Example Backbone/Parse.com App &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 20:10:04</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 20:10:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] &laquo; Working with Backbone.js and the Parse.com Proxy [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32618</wp:comment_id>
			<wp:comment_author><![CDATA[batman cookie jars]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://03750eb.netsolhost.com/WordPress/hello-world/</wp:comment_author_url>
			<wp:comment_author_IP>188.240.130.29</wp:comment_author_IP>
			<wp:comment_date>2014-11-24 05:21:12</wp:comment_date>
			<wp:comment_date_gmt>2014-11-24 05:21:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>batman cookie jars...</strong>

Working with Backbone.js and the Parse.com Proxy « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79767</wp:comment_id>
			<wp:comment_author><![CDATA[płoty Winylowe Szczecin i w otoczeniu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://top.touronline.com.ua/index.php?a=stats&amp;u=elveraforde775</wp:comment_author_url>
			<wp:comment_author_IP>185.44.79.65</wp:comment_author_IP>
			<wp:comment_date>2015-12-05 20:12:20</wp:comment_date>
			<wp:comment_date_gmt>2015-12-05 20:12:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>płoty Winylowe Szczecin i w otoczeniu...</strong>

Working with Backbone.js and the Parse.com Proxy « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>An Example Backbone/Parse.com App</title>
		<link>http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/</link>
		<pubDate>Wed, 30 Nov 2011 20:02:15 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=396</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/">Series Overview</a></p>

<p><a href="http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/">&lt;&lt; Working with Backbone.js and the Parse.com Proxy</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://houseofbilz.com/archives/2011/11/30/hosting-the-todos-example-on-heroku/">Hosting the Todos example on Heroku &gt;&gt;</a></p>

<p>This is the post where I put it all together.&#160; I showed how to create a proxy to <a href="http://houseofbilz.com/archives/2011/11/07/a-proxy-server-for-parse-com/">use Parse.com as your data store</a>.&#160; I also showed how to <a href="http://houseofbilz.com/archives/2011/11/07/making-backbone-js-work-with-parse-com/">modify Backbone.js to use Parse.com</a>.&#160; Now, I will show how easy it is to use Backbone.js models and collections with a service like Parse.com.&#160; Note that Parse.com is not the only service out there that does this.&#160; StackMob is another example of a “place to put your stuff” service.&#160; There are others.</p>

<p>In this app, I will borrow from the default <a href="http://documentcloud.github.com/backbone/">Backbone.js</a> example: Todos.&#160; <a href="http://documentcloud.github.com/backbone/#examples-todos">Todos</a> is a simple to-do list, which uses the browser’s local storage to save data.&#160; <br /><img style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/f0dd85a2-2d24-43c6-bb73-1319e835105a/2011-11-30_14-22-43.png" width="313" height="409" /></p>

<p>I will adapt it to be hosted by the Parse.com proxy that I showed in my previous post.&#160; Instead of storing locally, the app will put push to Parse.com.&#160; Want to play with it?&#160; I have hosted everything on Heroku: <a href="http://todos-parsepack.herokuapp.com/">http://todos-parsepack.herokuapp.com/</a></p>

<p>There are only a few tiny steps to make this work:</p>

<ol>
  <li>Replace localstorage.js with parse.com.js</li>

  <li>Modify the model and collection to use Parse.com instead of local storage</li>

  <li>Configure the proxy</li>

  <li>Run the proxy</li>
</ol>

<p>&#160;</p>

<h3>1. Modify index.html</h3>

<p>The example given with Backbone.js uses the “localstorage” override for Backbone.sync.&#160; We want to use the default REST version Backbone.sync so we remove it.&#160; We also want to use the base prototypes to adapt Parse.com to Backbone.</p>

<p><font face="Courier New"><strike>&lt;script src=&quot;backbone-localstorage.js&quot;&gt;&lt;/script&gt; 
      <br /></strike>&lt;script src=”parse.com.js&quot;&gt;&lt;/script&gt;</font></p>

<h3>2a. Modify the model</h3>

<br />

<p>The example uses a vanilla Backbone.Model.&#160; Instead, change it to Backbone.ParseModel and give it the location of the data.</p>

<p><font face="Courier New"><strike>window.Todo = Backbone.Model.extend({ 
      <br /></strike>window.Todo = Backbone.ParseModel.extend({ 

    <br />&#160;&#160;&#160; urlRoot: &quot;/data/Todos&quot;,</font></p>

<h3>2b. Modify the Collection</h3>

<br />

<p>The example uses a Backbone.Collection.&#160; Instead, change it to Backbone.ParseCollection and give it the location of the data.</p>

<p><font face="Courier New"><strike>window.TodoList = Backbone.Collection.extend({ 
      <br /></strike>window.TodoList = Backbone.ParseCollection.extend({ 

    <br />&#160;&#160;&#160; url: &quot;/data/Todos&quot;,</font></p>

<p>Also, since we aren’t using local storage, remove the localStore details.</p>

<p><font face="Courier New"><strike>localStorage: new Store(&quot;todos&quot;),</strike></font></p>

<h3>3. Configure the App</h3>

<br />

<p>That is all you need to do in order to modify the app.&#160; Everything else is exactly the same.&#160; You do, however, need to create an App at Parse.com. 
  <br /></p>

<p><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/829dc2f5-dca8-48b9-8c0a-0b59879a0504/2011-11-30_14-34-18.png" width="393" height="226" /><img src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/60446bb8-193a-4be8-a359-e5ab433f6213/2011-11-30_14-35-47.png" width="329" height="226" /></p>

<p>Use the Application ID and Master Key and edit the config.coffee file:</p>

<pre class="brush: coffeescript; ruler: true; toolbar: false; smart-tabs: false;">applicationID: 'APPLICATION ID' 
masterKey:    'MASTER KEY' 
apiPath:  '/data/'
port:     3001</pre>

<h3>4. Run the proxy:</h3>

<p><font face="Courier New">&gt; coffee proxy.coffee</font></p>

<h3>Test the app</h3>

<br />

<p>Add items to your list.
  <br /></p>

<p><img style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/f1e9ed51-045a-43a2-8afa-ae00514650a0/2011-11-30_14-40-41.png" /></p>

<p>&#160;</p>

<p>See them show up in your data store.
  <br /></p>

<p><img style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/51f7e2c9-2191-4bde-9c6f-952bb816519e/2011-11-30_14-44-14.png" width="711" height="301" /></p>

<h3>Conclusion</h3>

<br />

<p>That was insanely easy.&#160; You just need to tell you models and collections to go to the server instead of local storage, configure the proxy and run it.&#160; This solution installs well on Heroku as you can see.&#160; This app wasn’t built with any type of user models, so everyone in the world gets to share Todos in this example… that can also be done with Parse.com, but I that is a different post ☺.</p>

<p>If anyone finds this useful, I would be curious to know if it helps.&#160;  If you want the source code for this project, take a look at <a href="https://github.com/BrianGenisio/todos-parseback">the GitHub project</a> </p>

<p>As a bonus, I wrote up the modifications I needed to make in order to <a href="http://houseofbilz.com/archives/2011/11/30/hosting-the-todos-example-on-heroku/">host the Parse-backed Todos example on Heroku</a>.  It was really easy and worth the writeup. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>396</wp:post_id>
		<wp:post_date>2011-11-30 20:02:15</wp:post_date>
		<wp:post_date_gmt>2011-11-30 20:02:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>an-example-backboneparse-com-app</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[CoffeeScript]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[Development]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[HTML5]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="parse-com"><![CDATA[Parse.com]]></category>
		<category domain="post_tag" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[Web]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37877</wp:comment_id>
			<wp:comment_author><![CDATA[promotional codes for travelodge]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.co.uk/vouchers/travelodge/</wp:comment_author_url>
			<wp:comment_author_IP>31.220.112.88</wp:comment_author_IP>
			<wp:comment_date>2015-03-04 08:57:13</wp:comment_date>
			<wp:comment_date_gmt>2015-03-04 08:57:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>promotional codes for travelodge...</strong>

An Example Backbone/Parse.com App « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35103</wp:comment_id>
			<wp:comment_author><![CDATA[Horsepower Plus]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/genesisruhlgcpq/the-secret-to-sustained-muscle-933499977.html</wp:comment_author_url>
			<wp:comment_author_IP>112.19.125.157</wp:comment_author_IP>
			<wp:comment_date>2015-01-17 09:56:43</wp:comment_date>
			<wp:comment_date_gmt>2015-01-17 09:56:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Horsepower Plus...</strong>

An Example Backbone/Parse.com App « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31962</wp:comment_id>
			<wp:comment_author><![CDATA[get download]]></wp:comment_author>
			<wp:comment_author_email>vpmffxqbwj@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://getblackhatteam.com/get-launch-jacking-boss-2-0-download/</wp:comment_author_url>
			<wp:comment_author_IP>186.94.87.244</wp:comment_author_IP>
			<wp:comment_date>2014-11-12 17:13:04</wp:comment_date>
			<wp:comment_date_gmt>2014-11-12 17:13:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Regards  for helping out,  wonderful  information.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23937</wp:comment_id>
			<wp:comment_author><![CDATA[louboutins hommes]]></wp:comment_author>
			<wp:comment_author_email>ingrid.shook@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bit.org.tw/userinfo.php?uid=98878</wp:comment_author_url>
			<wp:comment_author_IP>201.221.133.94</wp:comment_author_IP>
			<wp:comment_date>2014-03-23 09:11:36</wp:comment_date>
			<wp:comment_date_gmt>2014-03-23 09:11:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post. I will be experiencing many of these issues as well..


<a HREF="http://www.bit.org.tw/userinfo.php?uid=98878" rel="nofollow">louboutins hommes</A>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36845</wp:comment_id>
			<wp:comment_author><![CDATA[www.portcitytrans.com]]></wp:comment_author>
			<wp:comment_author_email>chiquitagrout@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.portcitytrans.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=396</wp:comment_author_url>
			<wp:comment_author_IP>185.45.13.182</wp:comment_author_IP>
			<wp:comment_date>2015-02-07 20:01:54</wp:comment_date>
			<wp:comment_date_gmt>2015-02-07 20:01:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Art lovers and enthusiasts must always put a stop in Patan within their Nepalese 
trip itinerary. Coastal tribes used more cedar items as opposed to interior tribes of Washington, Idaho and Montana because they used fallen trees to develop giant canoes 
and totem poles. The features provided with these kinds of companies are a substantial amount of 
disk space, unlimited traffic as much as 100mbit, 
privacy, several active torrents and never to mention FTP access.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12642</wp:comment_id>
			<wp:comment_author><![CDATA[Working with Backbone.js and the Parse.com Proxy &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/09/working-with-backbone-js-and-the-parse-com-proxy/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 20:04:21</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 20:04:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Making Backbone.js Work with Parse.com An Example Backbone/Parse.com App [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12643</wp:comment_id>
			<wp:comment_author><![CDATA[Going (Mostly) Server-less with Backbone.js &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 20:07:40</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 20:07:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Building an Application with Parse.com Models [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80716</wp:comment_id>
			<wp:comment_author><![CDATA[Nike NFL Detroit Lions Jersey]]></wp:comment_author>
			<wp:comment_author_email>h.f.d@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.officialdetshop.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.26.84.113</wp:comment_author_IP>
			<wp:comment_date>2016-04-02 04:23:19</wp:comment_date>
			<wp:comment_date_gmt>2016-04-02 04:23:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hopefully, today will be the day that so many unemployed Americans have <a href="http://www.denjerseyshop.com/" rel="nofollow">NFL Denver Broncos Jersey</a>  been waiting forI would now like to turn the conf <a href="http://www.chijerseyshop.com/" rel="nofollow">Bears Limited Jersey</a> erence over to Ken Kenny, Vice President of Finance and Treasurer) as a result of these, we lost our vehicles,NFL Denver Broncos Jersey, i lost my driver's lice <a href="http://www.tbjerseyshop.com/" rel="nofollow">NFL Tampa Bay Buccaneers Jersey</a> nse after being fin]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80740</wp:comment_id>
			<wp:comment_author><![CDATA[Mens Womens Youth Carolina Panthers Nike Customized Limited Jersey]]></wp:comment_author>
			<wp:comment_author_email>h.f.d@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.propanthersstore.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.26.84.113</wp:comment_author_IP>
			<wp:comment_date>2016-04-05 03:55:55</wp:comment_date>
			<wp:comment_date_gmt>2016-04-05 03:55:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know this history better than most <a href="http://www.saintsprostore.com/" rel="nofollow">Authentic Nike NFL New Orleans Saints Mens Womens Youth Kids Jersey</a>  "Cindy" (Bivens) Curtis, 57,Authentic Nike NFL New Orleans Saints Mens Wo <a href="http://www.clejerseyshop.com/" rel="nofollow">Browns Jersey Elite</a> mens Youth Kids Jersey, died at 11:29pm, October 3,Browns Jersey Elite, 2015, at Adena Regional Medical Center,Nike NFL Oakland Raiders Jersey, following a brief illness It  <a href="http://www.raidersprostore.com/" rel="nofollow">Nike NFL Oakland Raiders Jersey</a> was quintessentia]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76557</wp:comment_id>
			<wp:comment_author><![CDATA[Rafael Clifton]]></wp:comment_author>
			<wp:comment_author_email>tomashpolskiyv@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://blog.backspace.academy</wp:comment_author_url>
			<wp:comment_author_IP>203.31.216.152</wp:comment_author_IP>
			<wp:comment_date>2015-10-18 11:03:02</wp:comment_date>
			<wp:comment_date_gmt>2015-10-18 11:03:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Each day We are learning even more about NodeJS. It is definately the only programming language to discover long term. I recently finished the BackSpace.Academy Amazon web services (aws) Certified Developers course. They have opened up another Realm of software for myself. Now I have to find the time to get developing!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hosting the Todos example on Heroku</title>
		<link>http://houseofbilz.com/archives/2011/11/30/hosting-the-todos-example-on-heroku/</link>
		<pubDate>Wed, 30 Nov 2011 20:40:06 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=407</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/">Series Overview</a></p>  <p><a href="http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/">&lt;&lt; An Example Backbone/Parse.com App</a></p>  <p>The Todos example was extremely easy to get up and running with Heroku.&#160; Even though this is a CoffeeScript based server running with Node.js, Heroku can support the application.&#160; I won’t go over the install process for the pre-requisites (Git and Heroku) because it is easy to <a href="http://www.jamesward.com/2011/06/21/getting-started-with-node-js-on-the-cloud/">find on the web</a>.&#160; Assuming they are installed, deploy the app like this:</p>  <h3>Pull down the Todos example</h3>  <br />  <p><font size="3" face="Courier New"><strong>&gt; git clone git@github.com:BrianGenisio/todos-parseback.git</strong></font></p>  <h3>Create the Heroku app</h3>  <br />  <p><font face="Courier New"><font size="3"><strong>&gt; heroku create -s cedar yourappname          <br /></strong></font><font color="#333333">Creating yourappname... done, stack is cedar        <br /></font></font><font color="#333333" face="Courier New">http://yourappname.herokuapp.com/</font><font color="#333333" face="Courier New"> | git@heroku.com:yourappname.git      <br />Git remote heroku added</font></p>  <h3>Create file: package.json</h3>  <br />  <pre class="brush: js; ruler: true; toolbar: false; smart-tabs: false;">{
  &quot;name&quot;: &quot;yourappname&quot;,
  &quot;version&quot;: &quot;0.0.1&quot;,
  &quot;dependencies&quot;: {
    &quot;express&quot;: &quot;2.5.0&quot;,
    &quot;coffee-script&quot;: &quot;1.1.3&quot;,
    &quot;restler&quot;: &quot;0.2.1&quot;
  }
}</pre>

<h3>Install the packages locally (for testing)</h3>

<br />

<p><font size="3" face="Courier New"><strong>&gt; npm install</strong></font></p>

<h3>Configure and test the app</h3>

<br />

<p><font size="3" face="Courier New"><strong>&gt; cp config.coffee.example config.coffee</strong></font></p>

<p>Edit <strong>config.coffee</strong> per the steps in the previous article and run it:</p>

<p><font size="3"><strong>&gt; coffee proxy.coffee</strong></font></p>

<p>Point your browser to <a href="http://localhost:3001">http://localhost:3001</a> and play.&#160; Everything should be working right now locally.&#160; Next, lets get it up on Heroku.</p>

<h3>Create file: run.js</h3>

<br />

<pre class="brush: coffeescript; ruler: true; toolbar: false; smart-tabs: false;"># Necessary because Heroku can’t run CoffeeScript directly
require(&quot;coffee-script&quot;);
require(&quot;./proxy.coffee&quot;);</pre>

<h3>Create file: Procfile</h3>

<p><font face="Courier New">web: node run.js</font></p>

<h3>Deploy to Heroku (via git)</h3>

<br />

<p><font face="Courier New"><strong><font size="3">&gt; git add .
        <br />&gt; git commit -m &quot;Adding Heroku files&quot;

        <br /></font></strong><font color="#333333" size="2">[master 0154577] Adding Heroku files
      <br /> 3 files changed, 12 insertions(+), 0 deletions(-)

      <br /> create mode 100644 Procfile

      <br /> create mode 100644 package.json

      <br /> create mode 100644 run.js</font></font></p>

<p><font face="Courier New"><strong><font size="3">&gt; git push heroku master
        <br /></font></strong><font color="#333333">Counting objects: 23, done.
      <br />Delta compression using up to 4 threads.

      <br />Compressing objects: 100% (21/21), done.

      <br />Writing objects: 100% (23/23), 102.20 KiB, done.

      <br />Total 23 (delta 1), reused 17 (delta 0)</font></font></p>

<p><font color="#333333" face="Courier New">-----&gt; Heroku receiving push
    <br />-----&gt; Node.js app detected

    <br />-----&gt; Fetching Node.js binaries

    <br />-----&gt; Vendoring node 0.4.7

    <br />-----&gt; Installing dependencies with npm 1.0.94

    <br />&#160;&#160;&#160;&#160;&#160;&#160; restler@0.2.1 ./node_modules/restler 

    <br />&#160;&#160;&#160;&#160;&#160;&#160; coffee-script@1.1.3 ./node_modules/coffee-script 

    <br />&#160;&#160;&#160;&#160;&#160;&#160; express@2.5.0 ./node_modules/express 

    <br />&#160;&#160;&#160;&#160;&#160;&#160; ├── mkdirp@0.0.7

    <br />&#160;&#160;&#160;&#160;&#160;&#160; ├── mime@1.2.4

    <br />&#160;&#160;&#160;&#160;&#160;&#160; ├── qs@0.3.2

    <br />&#160;&#160;&#160;&#160;&#160;&#160; └── connect@1.7.3

    <br />&#160;&#160;&#160;&#160;&#160;&#160; Dependencies installed

    <br />-----&gt; Discovering process types

    <br />&#160;&#160;&#160;&#160;&#160;&#160; Procfile declares types -&gt; web

    <br />-----&gt; Compiled slug size is 3.4MB

    <br />-----&gt; Launching... done, v4

    <br />&#160;&#160;&#160;&#160;&#160;&#160; </font><a href="http://yourappname.herokuapp.com"><font color="#333333" face="Courier New">http://yourappname.herokuapp.com</font></a><font color="#333333" face="Courier New"> deployed to Heroku</font></p>

<p><font color="#333333" face="Courier New">To git@heroku.com:yourappname.git
    <br /> * [new branch]&#160;&#160;&#160;&#160;&#160; master –&gt; master</font></p>

<h3>Try it out</h3>

<br />

<p><font face="Courier New"><font size="3"><strong>&gt; heroku open
        <br /></strong></font><font color="#333333">Opening </font></font><a href="http://yourappname.herokuapp.com/"><font color="#333333" face="Courier New">http://yourappname.herokuapp.com/</font></a></p>

<p><img style="display: block; float: none; margin-left: auto; margin-right: auto" src="http://content.screencast.com/users/BrianGenisio/folders/Snagit/media/f0dd85a2-2d24-43c6-bb73-1319e835105a/2011-11-30_14-22-43.png" width="345" height="450" /></p>

<h3>That’s it!</h3>

<br />

<p>Seriously.&#160; That was easy.&#160; Now the app is hosted.&#160; Heroku and Parse.com do all the dirty work for you.</p>

<p><font color="#333333" face="Courier New">
    <br /></font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date>2011-11-30 20:40:06</wp:post_date>
		<wp:post_date_gmt>2011-11-30 20:40:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hosting-the-todos-example-on-heroku</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29279</wp:comment_id>
			<wp:comment_author><![CDATA[Sienna]]></wp:comment_author>
			<wp:comment_author_email>sienna.lindley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://youtube.com</wp:comment_author_url>
			<wp:comment_author_IP>104.143.21.151</wp:comment_author_IP>
			<wp:comment_date>2014-09-20 19:23:14</wp:comment_date>
			<wp:comment_date_gmt>2014-09-20 19:23:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent post. I waas checking constantly this weblog and I am impressed!
Extremely helpful information specifically thee closing section :) I deal with such information much.
I used to be looking for this certain information for a lolng time.
Thank yyou and best of luck.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17498</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.40.254.44</wp:comment_author_IP>
			<wp:comment_date>2012-11-10 03:05:10</wp:comment_date>
			<wp:comment_date_gmt>2012-11-10 03:05:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Diogo: No, the credentials sit in the Node.js proxy that is pushed to Heroku, so the credentials are on the server, not in the JS.  That, of course, wouldn't stop someone from hitting the REST proxy, but you could fix that with CORS.  

However, this entire example has been deprecated.  Parse.com has created a supported JS API that you can use... it is based off of Backbone.  Not sure how they deal with the credentials, though.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29163</wp:comment_id>
			<wp:comment_author><![CDATA[https://fcw.Zendesk.com/entries/44784385-Porn-Network-Reviews]]></wp:comment_author>
			<wp:comment_author_email>jamilapearse@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>https://fcw.zendesk.com/entries/44784385-Porn-Network-Reviews</wp:comment_author_url>
			<wp:comment_author_IP>192.240.212.35</wp:comment_author_IP>
			<wp:comment_date>2014-09-17 18:47:23</wp:comment_date>
			<wp:comment_date_gmt>2014-09-17 18:47:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello there! Do you know if they make any plugins to safeguard against hackers?
I'm kinda paranoid about losing everything I've worked hard on. Any recommendations?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80308</wp:comment_id>
			<wp:comment_author><![CDATA[naruto shippuden manga]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mangahunter.com/manga/Naruto</wp:comment_author_url>
			<wp:comment_author_IP>158.222.7.37</wp:comment_author_IP>
			<wp:comment_date>2016-02-05 11:03:41</wp:comment_date>
			<wp:comment_date_gmt>2016-02-05 11:03:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>naruto shippuden manga...</strong>

Hosting the Todos example on Heroku « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28604</wp:comment_id>
			<wp:comment_author><![CDATA[day spa Miami]]></wp:comment_author>
			<wp:comment_author_email>fidelia.ingalls@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://youtu.be/DvukznvAQss</wp:comment_author_url>
			<wp:comment_author_IP>107.155.77.254</wp:comment_author_IP>
			<wp:comment_date>2014-08-22 02:29:08</wp:comment_date>
			<wp:comment_date_gmt>2014-08-22 02:29:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The benefits of spa treatment on health are unquestionable ' people understand that massage therapy and spa breaks 
have a positive relationship. Paint ones walls with earth colors like taupe, brown, green, lavender and other this planet tones.
cover is one of the most important pieces of equipment that you will.



My homepage <a href="http://youtu.be/DvukznvAQss" rel="nofollow">day spa Miami</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38405</wp:comment_id>
			<wp:comment_author><![CDATA[adult video]]></wp:comment_author>
			<wp:comment_author_email>eulaliastretch@peacemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Www.Strap-Ontoys.com/</wp:comment_author_url>
			<wp:comment_author_IP>172.245.240.159</wp:comment_author_IP>
			<wp:comment_date>2015-03-14 19:14:52</wp:comment_date>
			<wp:comment_date_gmt>2015-03-14 19:14:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Didd you know abut 30% of wopmen actually have an orgasm during sex.
The most common problems that men wth poor reproductive health suffer from has difficulties to 
get an erection, having difficulties in maintaining that 
erection, not having good quality sperm, or developing a loww sperm count.
I hope tha finds alll of you well and that it helps out 
those who find thgemselves struggling to spice up their dying love lives.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32542</wp:comment_id>
			<wp:comment_author><![CDATA[bingo games free]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ac-pressflow-6-30-sta.sites.ac/directory/entry/root-factors-candy-crush-historie-cheat-tool.html</wp:comment_author_url>
			<wp:comment_author_IP>46.53.62.69</wp:comment_author_IP>
			<wp:comment_date>2014-11-22 21:47:03</wp:comment_date>
			<wp:comment_date_gmt>2014-11-22 21:47:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>bingo games free...</strong>

Hosting the Todos example on Heroku « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29142</wp:comment_id>
			<wp:comment_author><![CDATA[http://mycicm.civdigital.net]]></wp:comment_author>
			<wp:comment_author_email>harleyatkins@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mycicm.civdigital.net/persons/522130</wp:comment_author_url>
			<wp:comment_author_IP>192.208.187.236</wp:comment_author_IP>
			<wp:comment_date>2014-09-17 03:34:08</wp:comment_date>
			<wp:comment_date_gmt>2014-09-17 03:34:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read some excellent stuff here. Certainly value bookmarking for revisiting.
I wonder how so much attempt you place to make this sort of great 
informative web site.

Feel free to visit my blog legal help (<a href="http://mycicm.civdigital.net/persons/522130" rel="nofollow">http://mycicm.civdigital.net</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35865</wp:comment_id>
			<wp:comment_author><![CDATA[immigration lawyers in md]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/immigrationlawrockville/parva-fattahi-887148773.html</wp:comment_author_url>
			<wp:comment_author_IP>104.143.19.224</wp:comment_author_IP>
			<wp:comment_date>2015-01-25 13:42:10</wp:comment_date>
			<wp:comment_date_gmt>2015-01-25 13:42:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>immigration lawyers in md...</strong>

Hosting the Todos example on Heroku « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16744</wp:comment_id>
			<wp:comment_author><![CDATA[Diogo]]></wp:comment_author>
			<wp:comment_author_email>diogopublio@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.175.107.35</wp:comment_author_IP>
			<wp:comment_date>2012-08-03 19:21:19</wp:comment_date>
			<wp:comment_date_gmt>2012-08-03 19:21:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Building a website in js connected to Parse, will expose the DB, letting it open to anyone who checks the JS source ?
Anyone could get my credentials then ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12649</wp:comment_id>
			<wp:comment_author><![CDATA[An Example Backbone/Parse.com App &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 21:13:14</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 21:13:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Working with Backbone.js and the Parse.com Proxy Hosting the Todos example on Heroku [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12648</wp:comment_id>
			<wp:comment_author><![CDATA[James Ward]]></wp:comment_author>
			<wp:comment_author_email>james@jamesward.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.jamesward.com</wp:comment_author_url>
			<wp:comment_author_IP>166.250.36.58</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 21:12:38</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 21:12:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dude!  You totally rock!  I was just going to start learning Backbone.js today.  So timely!  Now I have a great guide to follow.  :)

Thanks!

-James]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12647</wp:comment_id>
			<wp:comment_author><![CDATA[Going (Mostly) Server-less with Backbone.js &laquo; Brian Genisio&#039;s House of Bilz]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://houseofbilz.com/archives/2011/11/07/going-mostly-server-less-with-backbone-js/</wp:comment_author_url>
			<wp:comment_author_IP>184.168.152.59</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 21:10:30</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 21:10:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Hosting the Todos example on Heroku (Bonus) [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12651</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.79.89.158</wp:comment_author_IP>
			<wp:comment_date>2011-11-30 21:16:25</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 21:16:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey James!  This series assumes you already know Backbone.js but you don't want to build your own back-end rest server.  You probably won't learn a ton about Backbone in this series... except for some hacks I needed to make in order to adapt the Backbone REST flavor with the Parse.com REST flavor.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79830</wp:comment_id>
			<wp:comment_author><![CDATA[cheap hotels in chester le street]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ilciuc.com/index.php?a=profile&amp;u=francislav</wp:comment_author_url>
			<wp:comment_author_IP>23.229.53.183</wp:comment_author_IP>
			<wp:comment_date>2015-12-14 21:36:09</wp:comment_date>
			<wp:comment_date_gmt>2015-12-14 21:36:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cheap hotels in chester le street...</strong>

Hosting the Todos example on Heroku « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79201</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.denniporcezdravi.cz/]]></wp:comment_author>
			<wp:comment_author_email>wilheminacaperton@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.denniporcezdravi.cz/jak-zhubnou</wp:comment_author_url>
			<wp:comment_author_IP>138.128.23.240</wp:comment_author_IP>
			<wp:comment_date>2015-11-09 13:29:16</wp:comment_date>
			<wp:comment_date_gmt>2015-11-09 13:29:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi to every body, it's my first go to see of this website; this weblog 
consists of amazing and genuinely fine information for readers.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76556</wp:comment_id>
			<wp:comment_author><![CDATA[Jamie Mcclain]]></wp:comment_author>
			<wp:comment_author_email>klepalchenko90@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://backspace.academy</wp:comment_author_url>
			<wp:comment_author_IP>203.31.216.152</wp:comment_author_IP>
			<wp:comment_date>2015-10-18 10:56:25</wp:comment_date>
			<wp:comment_date_gmt>2015-10-18 10:56:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Each day I will be learning a lot more about NodeJS. It is definately the only real language to learn long-term. I just completed the BackSpace.Academy Amazon web services (aws) Certified Developers educational program. It really has opened a different World of programs for myself. Now I must spare the time for getting developing!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76558</wp:comment_id>
			<wp:comment_author><![CDATA[Bob Daniels]]></wp:comment_author>
			<wp:comment_author_email>karolina.korotich@mail.ru</wp:comment_author_email>
			<wp:comment_author_url>http://backspace.academy</wp:comment_author_url>
			<wp:comment_author_IP>203.31.216.152</wp:comment_author_IP>
			<wp:comment_date>2015-10-18 11:03:30</wp:comment_date>
			<wp:comment_date_gmt>2015-10-18 11:03:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Regularly I am learning bit more about NodeJS. It is definately the only programming language to figure out long term. I just now fulfilled the BackSpace.Academy Amazon cloud Certified Developers path. It really has unfolded a totally new Arena of software for myself. Now I need to spare the time to get programming!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Choose Your Own Application</title>
		<link>http://houseofbilz.com/archives/2013/02/05/choose-your-own-application/</link>
		<pubDate>Tue, 05 Feb 2013 11:31:06 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[It has been a while since I've posted.  I've been neck-deep in Single-Page Application work for the past year and haven't had much time to come up for air.  I wanted to show what my latest side project is.  <a href="http://chooseyourownapplication.com">Choose Your Own Application</a> is a tutorial site for learning Single-Page Application stacks.  We help you build an application using your choice of technology.  You get to make choices as you go and you earn achievements as you try different things.  It is a ton of fun!

Dennis Burton and I worked on this with several other SRT colleagues and we are very proud of it.  We presented it as a half-day CodeMash session last month and the room was overflowing with over 100 participants, all heads-down and hacking out code. Since then, we've picked up another 300 or so users who have gone through the 22 different possible paths in the site.

<center><a href="http://chooseyourownapplication.com"><img width="500" src="https://s3.amazonaws.com/chooseyourownapp/Splash_Graphic_Launch.gif" /></a></center>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2013-02-05 11:31:06</wp:post_date>
		<wp:post_date_gmt>2013-02-05 11:31:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>choose-your-own-application</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37596</wp:comment_id>
			<wp:comment_author><![CDATA[http://Artbulgaria.com]]></wp:comment_author>
			<wp:comment_author_email>raquelpeek@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://Artbulgaria.com/groups/choosing-porn-sites/</wp:comment_author_url>
			<wp:comment_author_IP>107.158.43.170</wp:comment_author_IP>
			<wp:comment_date>2015-02-27 14:43:57</wp:comment_date>
			<wp:comment_date_gmt>2015-02-27 14:43:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think thee admin of this web site is actually working hard for his web 
site, as here every data is quality based material.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33144</wp:comment_id>
			<wp:comment_author><![CDATA[Kerudung Terbaru]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.butiksahira.com/71-hijab</wp:comment_author_url>
			<wp:comment_author_IP>192.95.23.63</wp:comment_author_IP>
			<wp:comment_date>2014-12-07 19:49:26</wp:comment_date>
			<wp:comment_date_gmt>2014-12-07 19:49:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Kerudung Terbaru...</strong>

Choose Your Own Application « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29290</wp:comment_id>
			<wp:comment_author><![CDATA[Aja]]></wp:comment_author>
			<wp:comment_author_email>aja.muhammad@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://overdrivestrategies.com/dallas-seo-company/</wp:comment_author_url>
			<wp:comment_author_IP>23.95.94.113</wp:comment_author_IP>
			<wp:comment_date>2014-09-21 00:22:12</wp:comment_date>
			<wp:comment_date_gmt>2014-09-21 00:22:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I’m nnot tht much of a internet reader to be honest butt your sites really nice, keep it 
up! I'll go ahead and bookmark your site to come back down the road.
Many thanks

Also visit my webpage; web design dallas tx (<a href="http://overdrivestrategies.com/dallas-seo-company/" rel="nofollow">Aja</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26246</wp:comment_id>
			<wp:comment_author><![CDATA[métisse]]></wp:comment_author>
			<wp:comment_author_email>jovita_weiser@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://grandiosehusk993.soup.io/post/417428744/Le-blog-personnel-dun-tringleur</wp:comment_author_url>
			<wp:comment_author_IP>23.105.129.162</wp:comment_author_IP>
			<wp:comment_date>2014-05-16 02:15:54</wp:comment_date>
			<wp:comment_date_gmt>2014-05-16 02:15:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Je me permets de poster un commentaire afin de remercier son auteur]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23503</wp:comment_id>
			<wp:comment_author><![CDATA[Ursitoare Botez Ploiesti Prahova]]></wp:comment_author>
			<wp:comment_author_email>albanobbs@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.rebelmouse.com/UrsitoareBotez</wp:comment_author_url>
			<wp:comment_author_IP>192.3.183.27</wp:comment_author_IP>
			<wp:comment_date>2014-02-26 02:09:52</wp:comment_date>
			<wp:comment_date_gmt>2014-02-26 02:09:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This website was... how do I say it? Relevant!!
Finally I have found something which helped me. Kudos!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27125</wp:comment_id>
			<wp:comment_author><![CDATA[Elsa]]></wp:comment_author>
			<wp:comment_author_email>elsahoeft@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://uglyarson6322.soup.io/post/382533302/Un-tringleur-raconte-tout</wp:comment_author_url>
			<wp:comment_author_IP>186.90.62.186</wp:comment_author_IP>
			<wp:comment_date>2014-06-22 05:34:44</wp:comment_date>
			<wp:comment_date_gmt>2014-06-22 05:34:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[On voit directement que vous maîtrisez superbement bien ce sujet]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24956</wp:comment_id>
			<wp:comment_author><![CDATA[www.nasza-wyspa.co.uk]]></wp:comment_author>
			<wp:comment_author_email>AllmondSpiker7527@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nasza-wyspa.co.uk/bar/godaddy-reviews/</wp:comment_author_url>
			<wp:comment_author_IP>188.208.14.87</wp:comment_author_IP>
			<wp:comment_date>2014-04-15 04:59:49</wp:comment_date>
			<wp:comment_date_gmt>2014-04-15 04:59:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been exploring for a little for any high quality articles or blog posts on this sort of space . Exploring in Yahoo I eventually stumbled upon this web site. Reading this info So i am satisfied to show that I have an incredibly good uncanny feeling I found out exactly what I needed. I so much for sure will make sure to don?t put out of your mind this website and give it a look on a relentless basis.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33632</wp:comment_id>
			<wp:comment_author><![CDATA[seo taiji christmalo]]></wp:comment_author>
			<wp:comment_author_email>jimmy_macandie@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://foursquare.com/user/96511631/list/seo-tools-1</wp:comment_author_url>
			<wp:comment_author_IP>112.211.162.229</wp:comment_author_IP>
			<wp:comment_date>2014-12-20 10:54:41</wp:comment_date>
			<wp:comment_date_gmt>2014-12-20 10:54:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am not positive the place you're getting your information, however good 
topic. I needs to spend a while learning more or understanding more.

Thank you for excellent info I was in search of this information for my mission.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40204</wp:comment_id>
			<wp:comment_author><![CDATA[jam tangan pria yang lagi ngetrend]]></wp:comment_author>
			<wp:comment_author_email>margaritoholmwood@animail.net</wp:comment_author_email>
			<wp:comment_author_url>http://sasnet2.com.br/test/php/php_info.php?a%5B%5D=jam+tangan+original+online+terpercaya+%28%3Ca+href%3Dhttp%3A%2F%2Fstar92network.com%2Findex.php%2Fentertaiment%2Fmovies%2Fitem%2F701-watching-tv-can</wp:comment_author_url>
			<wp:comment_author_IP>200.198.217.220</wp:comment_author_IP>
			<wp:comment_date>2015-04-22 13:21:29</wp:comment_date>
			<wp:comment_date_gmt>2015-04-22 13:21:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Watch leather strap and steel gray PVD polished sandblasted to create a 
pin buckle. Swiss chocolates and Swiss watches are included in the popular 
items. The limited production of mechanical watches also appeals to 
the consumer and offers them a sense of status that 
is unique to the industry.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80440</wp:comment_id>
			<wp:comment_author><![CDATA[dam pracę frankfurt]]></wp:comment_author>
			<wp:comment_author_email>doylecharette@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/fanaticalorient0/8-of-the-very-first-automobile-manufacturers-1619122707.html</wp:comment_author_url>
			<wp:comment_author_IP>83.24.44.202</wp:comment_author_IP>
			<wp:comment_date>2016-02-26 01:04:03</wp:comment_date>
			<wp:comment_date_gmt>2016-02-26 01:04:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With a plethora of information available, there is really no good reason not to educate oneself in the fundamentals of time management.
As you can see, the responses above are all aimed at getting your prospect to 
reveal to you both their level of interest and what 
it is going to take to sell them - or whether or not they are still a good prospect for you.

The lower yield of the organic crops means that the farmer has to price his items higher just to break even.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37448</wp:comment_id>
			<wp:comment_author><![CDATA[great post to read]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.Co.uk/vouchers/travelodge/</wp:comment_author_url>
			<wp:comment_author_IP>189.222.205.46</wp:comment_author_IP>
			<wp:comment_date>2015-02-24 02:06:18</wp:comment_date>
			<wp:comment_date_gmt>2015-02-24 02:06:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>great post to read...</strong>

Choose Your Own Application « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39429</wp:comment_id>
			<wp:comment_author><![CDATA[http://dota2hack.org]]></wp:comment_author>
			<wp:comment_author_email>demismalls@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://dota2hack.org</wp:comment_author_url>
			<wp:comment_author_IP>155.94.166.99</wp:comment_author_IP>
			<wp:comment_date>2015-04-12 15:44:46</wp:comment_date>
			<wp:comment_date_gmt>2015-04-12 15:44:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there! Your website is running slowly , it went on like a minute 
or so to finally load, I personally dont know whether or not it's just me 
or your web site but google and yahoo worked for me.
However I appreciate you for creating fantastic blog post.
I suppose it has been useful to a lot of people . This one is actually 
brilliant what you have implemented on this page and would like 
to see a lot more  content from you. Soon after looking at the content, I've book-marked your webblog.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38094</wp:comment_id>
			<wp:comment_author><![CDATA[www.hack-solutions.com]]></wp:comment_author>
			<wp:comment_author_email>arturopoirier@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hack-solutions.com/league-of-legends-champions-and-skins-hack/</wp:comment_author_url>
			<wp:comment_author_IP>107.161.83.97</wp:comment_author_IP>
			<wp:comment_date>2015-03-09 10:02:24</wp:comment_date>
			<wp:comment_date_gmt>2015-03-09 10:02:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there Your entire website loads up really slow for me, I'm not sure who's issue is that although youtube starts really immediate.

Anyways, Thank you for writing an incredibly brilliant article.
I think this has been totally helpful visitor who seem to click here.
I'm hoping I will be able to get even more incredible things and I should certainly compliment you simply by stating you have done fantastic job.

I 've got you book-marked to check out new stuff you publish.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37942</wp:comment_id>
			<wp:comment_author><![CDATA[sheet pile ชีทไพล์ ตอกถอนเช่าชีทไพล์]]></wp:comment_author>
			<wp:comment_author_email>bryanfysh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://sheetpile.wix.com/siamvibrosheetpile</wp:comment_author_url>
			<wp:comment_author_IP>110.171.71.248</wp:comment_author_IP>
			<wp:comment_date>2015-03-06 13:27:45</wp:comment_date>
			<wp:comment_date_gmt>2015-03-06 13:27:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I blog quite often and I genuinely appreciate your content.

The article has really peaked my interest. I'm going to take a note of your 
blog and keep checking for new details about once per week.
I subscribed to your Feed as well.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26257</wp:comment_id>
			<wp:comment_author><![CDATA[thaï]]></wp:comment_author>
			<wp:comment_author_email>fredricannunziata@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.nexopia.com/users/dynamicpsy504/blog</wp:comment_author_url>
			<wp:comment_author_IP>117.177.171.21</wp:comment_author_IP>
			<wp:comment_date>2014-05-16 11:29:45</wp:comment_date>
			<wp:comment_date_gmt>2014-05-16 11:29:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Humm êtes vous sûr de ce que vous nous avancez ?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33768</wp:comment_id>
			<wp:comment_author><![CDATA[unaico scam]]></wp:comment_author>
			<wp:comment_author_email>mariannava@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=D2I_zGp7tPE</wp:comment_author_url>
			<wp:comment_author_IP>69.12.90.165</wp:comment_author_IP>
			<wp:comment_date>2014-12-24 00:24:42</wp:comment_date>
			<wp:comment_date_gmt>2014-12-24 00:24:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's thrilling is that their product does work and delivers some amazing results.
What does this growing trend represent to the average person, and how does 
it relate to the current state of the economy. 7 million which was up $ 110 million compared to the year previous.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35628</wp:comment_id>
			<wp:comment_author><![CDATA[dota2hack.org]]></wp:comment_author>
			<wp:comment_author_email>darrenshillito@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dota2hack.org</wp:comment_author_url>
			<wp:comment_author_IP>104.140.13.199</wp:comment_author_IP>
			<wp:comment_date>2015-01-23 05:23:41</wp:comment_date>
			<wp:comment_date_gmt>2015-01-23 05:23:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello! Your websites are loading lagging for 
me, this kind of consumed like a minute to finally 
load, I personally dont know whether it is entirely me or maybe webpage on the other hand google 
performed acceptable for me.  Anyway, I appreciate you for posting 
such type of fabulous articles. Nearly everybody who actually came to this 
page should have noticed this short article 
seriously beneficial. This one is actually brilliant everything 
that you have implemented on this site and wish to discover a 
lot more  posts from you. Soon after looking at the blog post, 
I've book-marked the website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26442</wp:comment_id>
			<wp:comment_author><![CDATA[furie routche]]></wp:comment_author>
			<wp:comment_author_email>christoper.hammack@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://wonderfulcaptur44.blog.com/2014/04/02/le-site-dun-salaud/</wp:comment_author_url>
			<wp:comment_author_IP>186.90.116.47</wp:comment_author_IP>
			<wp:comment_date>2014-05-21 20:24:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-21 20:24:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Je souhaiterai vous dire que c'est clairement du bonheur de venir sur ce site internet]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34742</wp:comment_id>
			<wp:comment_author><![CDATA[poser papier peint leroy merlin]]></wp:comment_author>
			<wp:comment_author_email>lucafeng@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://faecolombia.edu.co/groups/artisan-pose-papier-peint-motif-et-devis-travaux-en-ligne-avis/</wp:comment_author_url>
			<wp:comment_author_IP>104.168.69.13</wp:comment_author_IP>
			<wp:comment_date>2015-01-11 21:47:36</wp:comment_date>
			<wp:comment_date_gmt>2015-01-11 21:47:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there superb website! Does running a blog such 
as this require a massive amount work? I have virtually no knowledge of computer programming however I was hoping to start my own blog in the near future.
Anyhow, if you have any ideas or tips for new blog owners 
please share. I understand this is off subject nevertheless I just 
needed to ask. Thank you!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38242</wp:comment_id>
			<wp:comment_author><![CDATA[Biotechpub.Com]]></wp:comment_author>
			<wp:comment_author_email>gennie_geer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Biotechpub.com/boot-manager-problem/</wp:comment_author_url>
			<wp:comment_author_IP>46.22.217.148</wp:comment_author_IP>
			<wp:comment_date>2015-03-12 00:57:26</wp:comment_date>
			<wp:comment_date_gmt>2015-03-12 00:57:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually no matter if someone doesn't be aware of then its up to other users that they will assist, so here it happens.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37784</wp:comment_id>
			<wp:comment_author><![CDATA[http://google.com/]]></wp:comment_author>
			<wp:comment_author_email>chantehuntsman@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://google.com</wp:comment_author_url>
			<wp:comment_author_IP>167.160.107.133</wp:comment_author_IP>
			<wp:comment_date>2015-03-02 04:02:21</wp:comment_date>
			<wp:comment_date_gmt>2015-03-02 04:02:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello everyone, it's my first visit at this 
web page, and paragraph is actually fruitful in favor 
of me, keep up posting these posts.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29849</wp:comment_id>
			<wp:comment_author><![CDATA[http://amazon.com]]></wp:comment_author>
			<wp:comment_author_email>cathymcarthur@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ghd.com</wp:comment_author_url>
			<wp:comment_author_IP>165.231.1.52</wp:comment_author_IP>
			<wp:comment_date>2014-10-04 14:05:41</wp:comment_date>
			<wp:comment_date_gmt>2014-10-04 14:05:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm really enjoying the design and layout of your website.
It's a very easy on the eyes which makes it 
much more enjoyable for me to come here and visit more often. Did you hire out a developer to create your theme?
Great work!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27513</wp:comment_id>
			<wp:comment_author><![CDATA[chaude vibromasseur]]></wp:comment_author>
			<wp:comment_author_email>christopherbunker@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/discreettact854/un-fou-de-la-baise-vous-racont-435236955.html</wp:comment_author_url>
			<wp:comment_author_IP>186.90.127.66</wp:comment_author_IP>
			<wp:comment_date>2014-07-06 21:58:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-06 21:58:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bon, je n'ai pas terminé de lire mais je repasserai dans la semaine]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26196</wp:comment_id>
			<wp:comment_author><![CDATA[http://tearfulyouth4411.soup.io/post/417403044/Pour-les-amateurs-de-videos-de-sexe]]></wp:comment_author>
			<wp:comment_author_email>solomonlavender@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://tearfulyouth4411.soup.io/post/417403044/Pour-les-amateurs-de-videos-de-sexe</wp:comment_author_url>
			<wp:comment_author_IP>201.243.145.23</wp:comment_author_IP>
			<wp:comment_date>2014-05-14 02:14:40</wp:comment_date>
			<wp:comment_date_gmt>2014-05-14 02:14:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hummm êtes vous sûr de ce que vous nous écrivez ??]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29330</wp:comment_id>
			<wp:comment_author><![CDATA[Kim Kardashian Liposuction]]></wp:comment_author>
			<wp:comment_author_email>xavierbrandenburg@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.afrobella.com/2009/04/28/pretty-plus-size-dresses/</wp:comment_author_url>
			<wp:comment_author_IP>173.208.74.100</wp:comment_author_IP>
			<wp:comment_date>2014-09-22 16:05:32</wp:comment_date>
			<wp:comment_date_gmt>2014-09-22 16:05:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Do you mind if I quote a few of your posts as long as I 
provide credit and sources back to your weblog?
My blog site is in the very same area of interest as yours and my visitors would genuinely benefit from a lot of the information you present here.

Please let me know if this okay with you. Appreciate it!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23209</wp:comment_id>
			<wp:comment_author><![CDATA[http://youtu.be]]></wp:comment_author>
			<wp:comment_author_email>bellemarks@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://youtu.be/aNhHaC_Daoo</wp:comment_author_url>
			<wp:comment_author_IP>123.63.63.21</wp:comment_author_IP>
			<wp:comment_date>2014-01-28 17:33:51</wp:comment_date>
			<wp:comment_date_gmt>2014-01-28 17:33:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Indeed there are the self-planned, 'I will discover a hotel whenever I get there' 
style; there are cruises and additionally indeed 
there are really package holidays.  Additionally, bear in your mind 
which our are really additionally the quintessential expensive times to go, and finding Cancun travel deals can feel easier in the "off-season" months.


Also visit my blog: mexico time share vacation (<a href="http://youtu.be/aNhHaC_Daoo" rel="nofollow">http://youtu.be</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34484</wp:comment_id>
			<wp:comment_author><![CDATA[Unbegrenzt]]></wp:comment_author>
			<wp:comment_author_email>genelukin@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>https://dehacken.wordpress.com/2014/12/28/download-anno-build-an-empire-hacken-fur-android-ipad-und-iphone/</wp:comment_author_url>
			<wp:comment_author_IP>188.208.12.171</wp:comment_author_IP>
			<wp:comment_date>2015-01-08 17:33:21</wp:comment_date>
			<wp:comment_date_gmt>2015-01-08 17:33:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Howdy very nice website!! Man .. Excellent 
.. Wonderful .. I will bookmark your site and 
take the feeds also? I'm satisfied to search out numerous helpful info right here in the put up, we'd like develop extra techniques on this 
regard, thanks for sharing. . . . . .]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28233</wp:comment_id>
			<wp:comment_author><![CDATA[Hair Salons In Bradenton FL]]></wp:comment_author>
			<wp:comment_author_email>meridenson@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://usmintindustry.org/ActivityFeed/MyProfile/tabid/90/UserId/43972/Default.aspx</wp:comment_author_url>
			<wp:comment_author_IP>216.231.135.113</wp:comment_author_IP>
			<wp:comment_date>2014-08-04 05:49:28</wp:comment_date>
			<wp:comment_date_gmt>2014-08-04 05:49:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I simply couldn't go awayy your web site before suggesting 
that I actually loved tthe usual ibfo an individual provide in your guests?
Is gonna be again often in order to investigate cross-check new posts]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28238</wp:comment_id>
			<wp:comment_author><![CDATA[dennis]]></wp:comment_author>
			<wp:comment_author_email>alexanderjoan408@outlook.com</wp:comment_author_email>
			<wp:comment_author_url>http://midanco.org/mac/</wp:comment_author_url>
			<wp:comment_author_IP>180.234.75.209</wp:comment_author_IP>
			<wp:comment_date>2014-08-04 11:57:37</wp:comment_date>
			<wp:comment_date_gmt>2014-08-04 11:57:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post about The Marriage Analogy. Thank you for sharing with us. I think it would be effective for all posting. I like this post indeed.keep up it .
<a href="http://midanco.org/mac/" rel="nofollow">dennis<a / rel="nofollow">]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30298</wp:comment_id>
			<wp:comment_author><![CDATA[phyto sc]]></wp:comment_author>
			<wp:comment_author_email>juanadarby@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://2to.in/591568</wp:comment_author_url>
			<wp:comment_author_IP>23.232.221.46</wp:comment_author_IP>
			<wp:comment_date>2014-10-14 00:11:26</wp:comment_date>
			<wp:comment_date_gmt>2014-10-14 00:11:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Quality posts is the important to interest the viewers to visit the website, that's what this web page is providing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33243</wp:comment_id>
			<wp:comment_author><![CDATA[capture his Heart claire casey Book]]></wp:comment_author>
			<wp:comment_author_email>woodrowwhittle@hotmail.de</wp:comment_author_email>
			<wp:comment_author_url>http://4travel.jp/dynamic/jump.php?url=http://youtu.be/ZvmZpeeVajc</wp:comment_author_url>
			<wp:comment_author_IP>50.76.82.241</wp:comment_author_IP>
			<wp:comment_date>2014-12-11 09:38:55</wp:comment_date>
			<wp:comment_date_gmt>2014-12-11 09:38:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can I simply just say what a comfort to find an individual who actually understands what they are discussing over the internet.
You actually realize how to bring a problem to light 
and make it important. A lot more people should read this and understand this side of your story.

It's surprising you aren't more popular given that you certainly have the gift.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35645</wp:comment_id>
			<wp:comment_author><![CDATA[airportshuttler.com]]></wp:comment_author>
			<wp:comment_author_email>bridgettbocanegra@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.airportshuttler.com/der-virtuelle-striptease-muss-nicht-teuer-sein/</wp:comment_author_url>
			<wp:comment_author_IP>93.61.34.191</wp:comment_author_IP>
			<wp:comment_date>2015-01-23 10:11:13</wp:comment_date>
			<wp:comment_date_gmt>2015-01-23 10:11:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fahnde nach еiner Telefonnummer]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37792</wp:comment_id>
			<wp:comment_author><![CDATA[exportcredit.de]]></wp:comment_author>
			<wp:comment_author_email>layla.rembert@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://exportcredit.de/index.php/Benutzer_Diskussion:Tommy11Grviue</wp:comment_author_url>
			<wp:comment_author_IP>173.232.116.235</wp:comment_author_IP>
			<wp:comment_date>2015-03-02 05:42:58</wp:comment_date>
			<wp:comment_date_gmt>2015-03-02 05:42:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dependikng on the number of employees you want trained, they 
may be prepared to come to your office and conduct some in house training.
It is indeed an extension of basic life support BLS.

The traditional course required medical personnel to attend regular 
classes held at medical institutes.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36820</wp:comment_id>
			<wp:comment_author><![CDATA[model kebaya pengantin batak toba]]></wp:comment_author>
			<wp:comment_author_email>krystyna_oshea@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://universitasinternet.com/14712/maraknya-model-kebaya-pesta</wp:comment_author_url>
			<wp:comment_author_IP>151.80.8.187</wp:comment_author_IP>
			<wp:comment_date>2015-02-07 01:15:47</wp:comment_date>
			<wp:comment_date_gmt>2015-02-07 01:15:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent goods from you, man. I have understand your stuff previous to and you are just too wonderful.
I actually like what you have acquired here, certainly like what you're saying and the way in which 
you say it. You make it entertaining and you still care for to keep it wise.
I cant wait to read far more from you. This is actually 
a tremendous site.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34754</wp:comment_id>
			<wp:comment_author><![CDATA[fail pictures]]></wp:comment_author>
			<wp:comment_author_email>maniefowell@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://harrietsellingblog.com/?p=306</wp:comment_author_url>
			<wp:comment_author_IP>107.161.87.69</wp:comment_author_IP>
			<wp:comment_date>2015-01-12 02:01:53</wp:comment_date>
			<wp:comment_date_gmt>2015-01-12 02:01:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know this web site offers quality dependent articles or reviews and other stuff, is there any other website which provides these things in quality?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48399</wp:comment_id>
			<wp:comment_author><![CDATA[سی سی کم]]></wp:comment_author>
			<wp:comment_author_email>HormanAfalava13@fastmail.fm</wp:comment_author_email>
			<wp:comment_author_url>http://zamec.in/تماس-با-ما/</wp:comment_author_url>
			<wp:comment_author_IP>104.194.196.71</wp:comment_author_IP>
			<wp:comment_date>2015-05-30 16:28:24</wp:comment_date>
			<wp:comment_date_gmt>2015-05-30 16:28:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very nice]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79022</wp:comment_id>
			<wp:comment_author><![CDATA[cuisinart Gr-4n 5-in-1 griddler]]></wp:comment_author>
			<wp:comment_author_email>eloise.rocher@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://paninipressreviews.com/cuisinart-gr-4n-5-in-1-griddler-review/</wp:comment_author_url>
			<wp:comment_author_IP>192.240.101.59</wp:comment_author_IP>
			<wp:comment_date>2015-11-05 19:45:39</wp:comment_date>
			<wp:comment_date_gmt>2015-11-05 19:45:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[you're in reality a excellent webmaster. The website loading pace is amazing.
It seems that you are doing any unique trick.
Also, The contents are masterpiece. you've done a great job on this 
matter!

My blog <a href="http://paninipressreviews.com/cuisinart-gr-4n-5-in-1-griddler-review/" rel="nofollow">cuisinart Gr-4n 5-in-1 griddler</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33841</wp:comment_id>
			<wp:comment_author><![CDATA[https://www.youtube.com/watch?v=7NQ6nJC6RIY]]></wp:comment_author>
			<wp:comment_author_email>tobiasmonsen@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=D2I_zGp7tPE</wp:comment_author_url>
			<wp:comment_author_IP>69.12.90.168</wp:comment_author_IP>
			<wp:comment_date>2014-12-26 21:21:22</wp:comment_date>
			<wp:comment_date_gmt>2014-12-26 21:21:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[)Do you seriously want to take your Visalus home business to a new 
level. As mentioned earlier, Visalus seriously isn't a gimmick.
Well, mainly because it is tricky to differentiate your products and solutions from other 
providers this sort of as Herbalife, Pharmanex, Usana, Noni, or any of 
the other hundreds of herbal supplement Multi level marketing companies about the planet.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38795</wp:comment_id>
			<wp:comment_author><![CDATA[couture news]]></wp:comment_author>
			<wp:comment_author_email>LongchampsDeluca6222@zohomail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mlamare.esarocailles.fr/blog/index.php?post/2014/12/02/LE-SCANDALE-BOUSCULE-LES-CODES-QUI-FIXENT-NOTRE-IDEE-DU-MONDE-ET-DU-BEAU</wp:comment_author_url>
			<wp:comment_author_IP>5.175.219.21</wp:comment_author_IP>
			<wp:comment_date>2015-03-28 19:27:47</wp:comment_date>
			<wp:comment_date_gmt>2015-03-28 19:27:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[certainly much like your web page but the truth is need to confirm the transliteration for a number of of the articles. Several of options are rife by using punctuational issues so i to find it incredibly bothersome to share with the reality on the flip side I'm going to unquestionably keep coming back once again.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35026</wp:comment_id>
			<wp:comment_author><![CDATA[ytcutv.com]]></wp:comment_author>
			<wp:comment_author_email>hudson.mullen@whale-mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://sns.ytcutv.com/link.php?url=http://lorettajaime.soup.io/</wp:comment_author_url>
			<wp:comment_author_IP>23.94.190.1</wp:comment_author_IP>
			<wp:comment_date>2015-01-16 15:33:19</wp:comment_date>
			<wp:comment_date_gmt>2015-01-16 15:33:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Both options are quite affordable when you consider how much most schooling efforts cost.
The first thing that you want to do is disconnect the CPU box from the 
power outlet. Big companies like this are not computer professionals, they are simply technology stores who hire thrid parties to deal with highly technical 
issues.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55929</wp:comment_id>
			<wp:comment_author><![CDATA[refnearn.com]]></wp:comment_author>
			<wp:comment_author_email>rosalindfuentes@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://refnearn.com</wp:comment_author_url>
			<wp:comment_author_IP>104.227.77.25</wp:comment_author_IP>
			<wp:comment_date>2015-06-23 02:06:51</wp:comment_date>
			<wp:comment_date_gmt>2015-06-23 02:06:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello other websites works fine in my situation yet your web site is starting slowly which had taken approximately a few minutes to 
successfully load up, I am not sure whether or not it's my personal problem or perhaps your website issue.
Nevertheless, I need to say thanks for putting wonderful 
post. I believe it has been incredibly helpful user who actually click here.
I need to mention that you really have done 
amazing work with this and hope to discover many more awesome content from you.
Immediately after taking a look at the post, I have bookmarked the website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35458</wp:comment_id>
			<wp:comment_author><![CDATA[American Export Lines Complaints]]></wp:comment_author>
			<wp:comment_author_email>annettmcelroy@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://businessfinder.nj.com/american-export-lines-newark-nj.html</wp:comment_author_url>
			<wp:comment_author_IP>23.94.54.169</wp:comment_author_IP>
			<wp:comment_date>2015-01-21 01:34:22</wp:comment_date>
			<wp:comment_date_gmt>2015-01-21 01:34:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Marsalese  is the managing part of  The Marsalese Law Group, PLLC, 
in Southfield, Michigan. Being that loan broker is about networks, along with order to 
get a good network of clients you ought to have a great 
marketing strategy. The forwarders have a lot of experience and skills in working with freight matters 
as well as businesses that want to send large shipments internationally.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28612</wp:comment_id>
			<wp:comment_author><![CDATA[Jordan]]></wp:comment_author>
			<wp:comment_author_email>jordantakasuka@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://southlandinvestigations.com/</wp:comment_author_url>
			<wp:comment_author_IP>198.23.228.142</wp:comment_author_IP>
			<wp:comment_date>2014-08-22 08:09:44</wp:comment_date>
			<wp:comment_date_gmt>2014-08-22 08:09:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My brother recommended I might like this web site.
He was entirely right. This pot truly made my day.
You can not imagine simply how much time I had spent foor 
this information! Thanks!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35723</wp:comment_id>
			<wp:comment_author><![CDATA[101dedications.com]]></wp:comment_author>
			<wp:comment_author_email>kraig_scurry@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.101dedications.com/profile.php?u=MichelleOco</wp:comment_author_url>
			<wp:comment_author_IP>92.55.216.85</wp:comment_author_IP>
			<wp:comment_date>2015-01-24 02:58:41</wp:comment_date>
			<wp:comment_date_gmt>2015-01-24 02:58:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Die Ҡernaussage dieser Website ist doll, Һab es am 
Anfang nicht glauben wollen.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34317</wp:comment_id>
			<wp:comment_author><![CDATA[monsieur glisse]]></wp:comment_author>
			<wp:comment_author_email>nellyhayes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.monsieurglisse.com/</wp:comment_author_url>
			<wp:comment_author_IP>5.231.75.179</wp:comment_author_IP>
			<wp:comment_date>2015-01-05 17:59:32</wp:comment_date>
			<wp:comment_date_gmt>2015-01-05 17:59:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is the perfect web site for anyone who really wants to understand this topic.
You realize a whole lot its almost hard to argue with you (not that I really will 
need to…HaHa). You definitely put a brand new spin on a subject that's been discussed for decades.
Great stuff, just excellent!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23781</wp:comment_id>
			<wp:comment_author><![CDATA[the advantage]]></wp:comment_author>
			<wp:comment_author_email>RehbeinPannunzio6556@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://filagra-info.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>195.211.155.125</wp:comment_author_IP>
			<wp:comment_date>2014-03-15 04:12:44</wp:comment_date>
			<wp:comment_date_gmt>2014-03-15 04:12:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, Tidy publish. We have an difficulty using your web site in web browser, could follow through? For instance nevertheless is definitely the sector innovator and a substantial aspect of people will rule out your fantastic composing for that reason dilemma.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23788</wp:comment_id>
			<wp:comment_author><![CDATA[what do you think]]></wp:comment_author>
			<wp:comment_author_email>KawaMetts78@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://filitra-levitra.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>195.211.155.10</wp:comment_author_IP>
			<wp:comment_date>2014-03-15 14:54:30</wp:comment_date>
			<wp:comment_date_gmt>2014-03-15 14:54:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We appreciate, result in I came across just the thing I was seeking. You have ended the some morning extended seek out! God Many thanks person. Possess a good evening. Cya]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23415</wp:comment_id>
			<wp:comment_author><![CDATA[D3Dx9_26.dll]]></wp:comment_author>
			<wp:comment_author_email>curtisfairweather@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.Youtube.com/watch?v=NGXLL0mjFd8</wp:comment_author_url>
			<wp:comment_author_IP>68.71.156.192</wp:comment_author_IP>
			<wp:comment_date>2014-02-18 12:23:57</wp:comment_date>
			<wp:comment_date_gmt>2014-02-18 12:23:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there, everything is going nicely here and ofcourse every one is sharing data, that's really excellent, keep up writing.


Check out my webpage ... <a href="http://www.Youtube.com/watch?v=NGXLL0mjFd8" rel="nofollow">D3Dx9_26.dll</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32498</wp:comment_id>
			<wp:comment_author><![CDATA[My Page]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wndatour.com/2010-glen-burnie/new-lodging-partners-in-md-comfort-inn-sleep-inn-bwi.html</wp:comment_author_url>
			<wp:comment_author_IP>92.222.231.17</wp:comment_author_IP>
			<wp:comment_date>2014-11-22 08:53:36</wp:comment_date>
			<wp:comment_date_gmt>2014-11-22 08:53:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>My Page...</strong>

Choose Your Own Application « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49049</wp:comment_id>
			<wp:comment_author><![CDATA[cheap website maintenance]]></wp:comment_author>
			<wp:comment_author_email>hamishfehon@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.webindesigns.com/internet_marketing/social-bookmarking.html</wp:comment_author_url>
			<wp:comment_author_IP>31.170.179.35</wp:comment_author_IP>
			<wp:comment_date>2015-06-02 14:11:47</wp:comment_date>
			<wp:comment_date_gmt>2015-06-02 14:11:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you are found to have loads of links on these types of sites then you 
are going to be in trouble, so always make sure you are 
careful about where links are added to your site.
Typical Meta info is Title, Keywords, &amp; Description. gif, etc) may look great, the search 
engines cannot read what the images say. If you are just starting out and you are unsure 
of what to do to start making money online, then you should learn more about 
search engine optimisation. Lots of people 
in business aren't aware of business coaching, or don't 
fully understand it, and there are very few that would actually 
go out looking actively looking for a business coach.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34339</wp:comment_id>
			<wp:comment_author><![CDATA[Ahmed]]></wp:comment_author>
			<wp:comment_author_email>chloesheridan@peacemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://forum.69dragon.com/forum/entry.php?2361-Abuso-De-Falsos-Cerrajeros-Evitelo-Llamando-A-Cerrajeros-Homologados</wp:comment_author_url>
			<wp:comment_author_IP>67.22.36.76</wp:comment_author_IP>
			<wp:comment_date>2015-01-06 04:55:04</wp:comment_date>
			<wp:comment_date_gmt>2015-01-06 04:55:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cerrajero de urgencia en Sevilla.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29341</wp:comment_id>
			<wp:comment_author><![CDATA[Matthias]]></wp:comment_author>
			<wp:comment_author_email>matthias_etienne@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.investinmusic.biz</wp:comment_author_url>
			<wp:comment_author_IP>23.95.40.71</wp:comment_author_IP>
			<wp:comment_date>2014-09-23 01:05:34</wp:comment_date>
			<wp:comment_date_gmt>2014-09-23 01:05:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there I am so glad I found your site, Ireally found you by mistake, 
while I wwas looking on Bing for something else, 
Annyways I am here now and wouild juszt like to say kudos for a incredible post and a all round 
thrilling blog (I also love the theme/design), I don’t 
have time to go through it all at the minute but I have 
saved it and also added your RSS feeds, so when I have time I will bee back to read much more, Please do 
keep up the fantastic work.

My page invest in music (<a href="http://www.investinmusic.biz" rel="nofollow">Matthias</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34286</wp:comment_id>
			<wp:comment_author><![CDATA[القسط الهندي]]></wp:comment_author>
			<wp:comment_author_email>devinspyer@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.ksa-4u.com/</wp:comment_author_url>
			<wp:comment_author_IP>23.95.63.154</wp:comment_author_IP>
			<wp:comment_date>2015-01-05 04:15:23</wp:comment_date>
			<wp:comment_date_gmt>2015-01-05 04:15:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Loan modification software offers a dependable and 
trouble-free management process to speed up the jobs of assisting the borrowers in crisis and in shorter time.

We are also providing separate play area for the children. Maitake, 
shitake, and reishi mushrooms have all been shown to promote 
NK cell and antibody activity.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77658</wp:comment_id>
			<wp:comment_author><![CDATA[tag]]></wp:comment_author>
			<wp:comment_author_email>deweywerner@emailplus.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.lvwomansclub.org/vibram-bikila-yiut-store/</wp:comment_author_url>
			<wp:comment_author_IP>23.81.251.223</wp:comment_author_IP>
			<wp:comment_date>2015-10-26 00:02:18</wp:comment_date>
			<wp:comment_date_gmt>2015-10-26 00:02:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I  conceive you have  noted  some very interesting  details , thanks  for the post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80236</wp:comment_id>
			<wp:comment_author><![CDATA[2fn.ru]]></wp:comment_author>
			<wp:comment_author_email>janessa_dew@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://2fn.ru/redirect/?url=http://davewirth.blogspot.com/2014/08/disc-sander-diy-build-for-free.html</wp:comment_author_url>
			<wp:comment_author_IP>201.164.202.227</wp:comment_author_IP>
			<wp:comment_date>2016-01-27 04:30:40</wp:comment_date>
			<wp:comment_date_gmt>2016-01-27 04:30:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Should you decide have some kind of old electric utility motor sleeping in you are able to build a Easy Disk Sander (<a href="http://2fn.ru/redirect/?url=http://davewirth.blogspot.com/2014/08/disc-sander-diy-build-for-free.html" rel="nofollow">2fn.ru</a>).]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59002</wp:comment_id>
			<wp:comment_author><![CDATA[www.nevadahrconference.com]]></wp:comment_author>
			<wp:comment_author_email>kathrin.keogh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nevadahrconference.com</wp:comment_author_url>
			<wp:comment_author_IP>173.234.194.154</wp:comment_author_IP>
			<wp:comment_date>2015-07-08 17:12:51</wp:comment_date>
			<wp:comment_date_gmt>2015-07-08 17:12:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent beat ! I wish to apprentice while you amend your web site, how can i subscribe for a blog web site?

The account helped me a acceptable deal. I had been tiny bit acquainted of 
this your broadcast provided bright clear concept]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79957</wp:comment_id>
			<wp:comment_author><![CDATA[benefits of marula oil]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.anarp.com/groups/pumpkin-seed-oil-how-to-make-cleaning-soap/</wp:comment_author_url>
			<wp:comment_author_IP>185.116.44.43</wp:comment_author_IP>
			<wp:comment_date>2016-01-01 18:40:22</wp:comment_date>
			<wp:comment_date_gmt>2016-01-01 18:40:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>benefits of marula oil...</strong>

Choose Your Own Application « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80486</wp:comment_id>
			<wp:comment_author><![CDATA[Oklahoma City Thunders]]></wp:comment_author>
			<wp:comment_author_email>charleytorrez@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://lospalmarescondo.com/images/jdownloads/screenshots/a000.html.j</wp:comment_author_url>
			<wp:comment_author_IP>120.39.57.111</wp:comment_author_IP>
			<wp:comment_date>2016-03-07 09:59:24</wp:comment_date>
			<wp:comment_date_gmt>2016-03-07 09:59:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="http://lospalmarescondo.com/images/jdownloads/screenshots/a000.html.j" rel="nofollow">Oklahoma City Thunders</a> Washington Wizards Jersey <a href="http://lospalmarescondo.com/images/jdownloads/screenshots/a000.html.j" rel="nofollow">Orlando Magic Jersey</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78349</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.free-fifa15coins.com/]]></wp:comment_author>
			<wp:comment_author_email>maggieforsyth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.free-fifa15coins.com/</wp:comment_author_url>
			<wp:comment_author_IP>104.223.31.110</wp:comment_author_IP>
			<wp:comment_date>2015-10-30 15:20:23</wp:comment_date>
			<wp:comment_date_gmt>2015-10-30 15:20:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Howdy I don't know whether or not it's me or maybe your internet site but it is starting 
slow , I had to spend just like a moment to successfully load up however digg 
does work well for me. Nevertheless, Thanks for 
writing such a amazing blog post. I assume it really has been beneficial to plenty of people .

This one is actually terrific everything that 
you actually have implemented on this page and wish to 
see   posts from your website. I already have your site saved to bookmarks to look at blog you post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75866</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.Blogigo.com/jumpybackpack420/Una-Aplicaci-n-Estilo-Tinder-Mas-Para-Hacer-Tr-os/6]]></wp:comment_author>
			<wp:comment_author_email>deannagarner@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.Blogigo.com/jumpybackpack420/Una-Aplicaci-n-Estilo-Tinder-Mas-Para-Hacer-Tr-os/6/</wp:comment_author_url>
			<wp:comment_author_IP>165.231.27.136</wp:comment_author_IP>
			<wp:comment_date>2015-10-13 14:08:13</wp:comment_date>
			<wp:comment_date_gmt>2015-10-13 14:08:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jaumo es una forma sin coste y amena para hallar pareja, ligar y chatear con gente en tu área.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>There and Back Again -- Thoughts on SPAs</title>
		<link>http://houseofbilz.com/archives/2013/04/17/there-and-back-again-thoughts-on-spas/</link>
		<pubDate>Wed, 17 Apr 2013 14:27:50 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=438</guid>
		<description></description>
		<content:encoded><![CDATA[I've been doing this software thing for quite a while now.  My first software job was in web development back in 1998.  Since then, I've traveled through Simulation Systems, Embedded Systems, Tooling, Desktop Applications, Rich Internet Applications (RIA), some mobile and today I am back where I started, developing Web Applications.

<h3>Productivity Highs with RIA Frameworks</h3>
After traveling out and back, I see everything from a different perspective.  Web applications, today, are incredibly different from the way they were in the 90s.  The biggest difference, from my perspective, is the way we develop them.  Coming from the RIA perspective, using Silverlight and Flex, I am accustomed to a certain productivity that I pine for now that I am developing for the web again.

If you know me, you know that I was a big fan of Silverlight and Flex.  They were frameworks which let me develop amazing desktop experiences in the browser.  I was doing things in 2007 that to this day is still impossible to do with HTML5 today.  Those frameworks had one flaw, however.  They required plug-ins to run.

<h3>Death to the Plug-In</h3>
I've never been much of an apologist for plug-ins. I saw them as a necessary evil.  An evil that became unsustainable in this brave new world of mobile computing.  When Apple, Microsoft and Adobe killed Silverlight and Flex, I wasn't sad because I loved those platforms.  I was sad because I knew I couldn't be as productive writing the same kinds of applications in HTML/JavaScript/CSS.

<h3>First Generation SPA Frameworks</h3>
This is where the Single-Paged Application (SPA) frameworks came to my aid.  There are too many to count, but from my vantage point, it has felt like Backbone.js and Knockout.js have been the primary options in the SPA market.    I landed on Backbone.js as my go-to choice because it was a more complete solution than Knockout.js with its client-side route handling and model synchronization.  I found myself at home with building SPAs because they were so similar to RIAs.

Unfortunately, my productivity never came close to that of the plug-in frameworks.  Backbone.js and Knockout.js simply aren't high enough of an abstraction for them to provide the same abilities to me.  They are the first generation of SPA tools and with that brings the pains of a first-generation technology.

<h3>Filling in the Gaps</h3>
We're starting to see some pretty nice add-ons to our first-generation tools.  These add-ons fill the gaps that the frameworks leave by attempting to make you more productive.  Specifically, Backbone.js has a poor view abstraction, making things like collection views and deeply nested views difficult.  Marionette.js builds upon Backbone.js to provide more structure, guidance and capabilities.  Using Marionette.js boosted my productivity significantly by taking care of much of the boiler-plate code that I found myself writing with Backbone.js alone.  It is still not ideal, mostly because the abstractions are not extremely strong.  They are strongER, but nothing compared to the capabilities I pine for.  Knockout.js has a similar packaging called Hot Towel.  Hot Towel fills in the holes that Knockout.js left by providing model synchronization, route handling and child view handling.

Unfortunately, these approaches only take us as far as the base technologies allow us to.  Without a strong abstraction to begin with, these add-ons can only ever takes us to generation 1.5.

<h3>Second Generation SPA Frameworks</h3>
At the same time, the second generation of the SPA frameworks are coming forward.  They come from a higher level of abstraction and the code you write demonstrates it by being significantly less (half or less).  These frameworks (Angular.js and Ember.js) provide everything we wanted from our first generation tools but they also bring more capabilities like convention-based development paradigms and dependency injection.  What's more, we are starting to see tooling (such as Batarang) built around these abstractions which let our development lifecycle be that much smoother.

I am focusing my efforts on these second-generation tool sets for now.  I am not abandoning my Backbone.js/Marionette.js tools completely, but I am not planning to invest much more time in them.  Instead of patching the holes that the first generation tools created, I am choosing to spend my time using (and recommending) the next generation of tools.  Specifically, I am focusing my efforts on Angular.js.  It fits my development style better and I feel like the abstractions make more sense to me.  I'm not knocking on Ember.js in any way.  It is a fine choice, in my opinion.

<h3>The Future of SPA Development</h3>
But this isn't where we are settling.  I think it will require a third generation of tools before the SPA space really takes off.  I have no idea what these frameworks will be, but I expect they will approach the productivity that I grew accustomed to with Silverlight and Flex.  The levels of abstractions will be higher and the tooling will be richer.  I expect that we will start to approach similar developer/designer workflows that were so amazing in the SPA days.  I expect we will see multiple language integration, including debugging and profiling tools built around these frameworks.  They will feel much less like a web framework and more like a desktop development framework.  The user experiences we create will be comparable to the experiences we created with Flex and Silverlight.

<h3>Paying Back the Debt</h3>
The funny thing is that we will have taken 5 years to get there.  It will be 5 years of stepping out of the plug-ins and into the browser so that we can achieve the same quality of application that we were already producing.  In some ways, it feels like a regression, but we have to realize that the plug-ins were really just a disguised form of technical debt.  They provided a one-off environment so that we were able to do things that weren't possible in the browser, but they did so by not investing in the browser.  Ultimately, the browser is the platform we were headed towards so we incurred debt.  We just have to pay it off before we can really innovate again.

<h3>Conclusion</h3>
I'm excited to see where the future of front-end development goes.  I'm excited to see that great strides are being made and I am happy to be at the front of the wave.  The community is starting to get excited too.  Here in Ann Arbor, we will be kicking off a JavaScript user group very soon which will give us a place to discuss these technologies and approaches.  I look forward to chatting it up!

<h3>On a personal note</h3>
This is my last blog post written for SRT Solutions.  I am moving on to something new.  More on that soon.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date>2013-04-17 14:27:50</wp:post_date>
		<wp:post_date_gmt>2013-04-17 14:27:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>there-and-back-again-thoughts-on-spas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>27666</wp:comment_id>
			<wp:comment_author><![CDATA[video marketing]]></wp:comment_author>
			<wp:comment_author_email>philip.egge@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://theaffiliatestruggle.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>192.240.192.85</wp:comment_author_IP>
			<wp:comment_date>2014-07-14 14:50:38</wp:comment_date>
			<wp:comment_date_gmt>2014-07-14 14:50:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there to every one, the contents existing at this web site are in fact awesome for people knowledge, well, keep up the nice work fellows.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31863</wp:comment_id>
			<wp:comment_author><![CDATA[www.koupons.co.uk]]></wp:comment_author>
			<wp:comment_author_email>DericksonBruderer8240@fastmail.fm</wp:comment_author_email>
			<wp:comment_author_url>http://www.koupons.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>180.254.215.140</wp:comment_author_IP>
			<wp:comment_date>2014-11-11 02:17:18</wp:comment_date>
			<wp:comment_date_gmt>2014-11-11 02:17:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have already been searching online a lot more than 3 hours these days, but I never observed every useful write-up just like yours Travel Deals, Restaurant Deals, Spa Deals, Hotel Deals,. It truly is wonderful importance ample for me. I think, in the event that most website owners and also writers manufactured excellent articles as you does, the internet shall be a great deal more handy than before.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19445</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>BrianGenisio@Gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.43.60.231</wp:comment_author_IP>
			<wp:comment_date>2013-04-20 23:52:36</wp:comment_date>
			<wp:comment_date_gmt>2013-04-20 23:52:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rob,  If it is anything like your other systems you have built (thinking of Caliburn in specific) then I expect great things from Durandal.  I haven't spent any time looking at it.  I will now.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20914</wp:comment_id>
			<wp:comment_author><![CDATA[Todd]]></wp:comment_author>
			<wp:comment_author_email>todd.hensley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.241.61.10</wp:comment_author_IP>
			<wp:comment_date>2013-08-06 13:08:05</wp:comment_date>
			<wp:comment_date_gmt>2013-08-06 13:08:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am just getting my toes wet with PhoneGap.  I built quite a few web apps with ASP and ASP.NET eons ago.  The SPA concept, the heavy use of JavaScript (compared to the simple form validation we used to do), and the mind-boggling number of JavaScript frameworks and libraries is a bit disorienting!

Would you recommend I start building mobile web apps with bare-bones JavaScript to start out with?  Or will my re-learning be easier using one of these frameworks?  Is there one that might be a better fit with PhoneGap than others?

Thanks in advance for your advice!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20166</wp:comment_id>
			<wp:comment_author><![CDATA[mattjcowan]]></wp:comment_author>
			<wp:comment_author_email>matthewj.cowan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mattjcowan.com/funcoding</wp:comment_author_url>
			<wp:comment_author_IP>50.140.138.83</wp:comment_author_IP>
			<wp:comment_date>2013-06-06 16:59:06</wp:comment_date>
			<wp:comment_date_gmt>2013-06-06 16:59:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post! I was talking to a fellow dev the other day about how we shouldn't lock ourselves into specific frameworks, rather use the opportunity we have today to push the boundaries of what can be done (using perhaps frameworks and libraries available to spur further innovation). I do like angularjs, and am getting familiar with it more now. But I think we are now at the cusp of much newer things, that will transform HTML/CSS as we know it, even javascript. I wouldn't be surprised if HTML itself becomes antiquated in the next few years. Why will we even need it if browsers eventually let us create our own tags and semantics (a good thing). If I can define my own tags with layout rules (size/shape/relative coordinates), observable behaviors and scope and contextual rules (angular is just the beginning IMO), we could now have a much cleaner canvas to work from. I also feel that there's much more that could be done with 'layers' and 'dimensions' in the browser, and it would be fun to see innovation in that space as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30575</wp:comment_id>
			<wp:comment_author><![CDATA[river run keystone co]]></wp:comment_author>
			<wp:comment_author_email>beau_brinkman@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/channel/UCOX_me3MzJbaYCHz5lPLoqw</wp:comment_author_url>
			<wp:comment_author_IP>89.47.21.17</wp:comment_author_IP>
			<wp:comment_date>2014-10-19 18:16:07</wp:comment_date>
			<wp:comment_date_gmt>2014-10-19 18:16:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic beat ! I would like to apprentice at the same time as you amend your site, how can i subscribe for a blog web site?
The account helped me a applicable deal. I were a little bit acquainted of this your broadcast offered vibrant clear 
concept]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29333</wp:comment_id>
			<wp:comment_author><![CDATA[Eugene]]></wp:comment_author>
			<wp:comment_author_email>eugenestabile@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Www.tools-Blogz.blogspot.com/2014/09/anti-inflammatory-for-dogs.html</wp:comment_author_url>
			<wp:comment_author_IP>93.118.79.12</wp:comment_author_IP>
			<wp:comment_date>2014-09-22 18:58:45</wp:comment_date>
			<wp:comment_date_gmt>2014-09-22 18:58:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello i am kavin, its my first time to commenting anywhere, when i read this post i thought 
i could also make comment due to this good  post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24144</wp:comment_id>
			<wp:comment_author><![CDATA[Fredericka]]></wp:comment_author>
			<wp:comment_author_email>fredericka.speed@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://FitnessTipsPaddyOBrian.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>107.155.80.134</wp:comment_author_IP>
			<wp:comment_date>2014-03-30 02:59:57</wp:comment_date>
			<wp:comment_date_gmt>2014-03-30 02:59:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent beat ! I would like to apprentice even as 
you amend your web site, how can i subscribe for a blog website?
The account helped me a acceptable deal. I have 
been tiny bit familiar of this your broadcast provided vibrant transparent concept

Feel free to surf to my weblog: focus on the family with Paddy o'Brian; <a href="http://FitnessTipsPaddyOBrian.wordpress.com/" rel="nofollow">Fredericka</a>,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27701</wp:comment_id>
			<wp:comment_author><![CDATA[Genevieve]]></wp:comment_author>
			<wp:comment_author_email>genevievebalderas@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=UASmjlQ1yeQ</wp:comment_author_url>
			<wp:comment_author_IP>23.232.151.157</wp:comment_author_IP>
			<wp:comment_date>2014-07-17 08:01:45</wp:comment_date>
			<wp:comment_date_gmt>2014-07-17 08:01:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Appreciating the persistence you put into your blog and in depth information you offer.
It's great to come across a blog every once in a while that isn't the 
same outdated rehashed information. Fantastic read!
I've bookmarked your site and I'm including your RSS feeds to my Google account.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31147</wp:comment_id>
			<wp:comment_author><![CDATA[Awesome free stuff]]></wp:comment_author>
			<wp:comment_author_email>VaccarellaBalerio0861@zohomail.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=j-KfiHfh67o</wp:comment_author_url>
			<wp:comment_author_IP>103.241.5.157</wp:comment_author_IP>
			<wp:comment_date>2014-10-29 03:03:40</wp:comment_date>
			<wp:comment_date_gmt>2014-10-29 03:03:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Important information and facts. Fortunate me personally I recently found your internet site unintentionally, using this program . astonished the reason this coincidence didn't occurred previous! My spouse and i saved as a favorite that.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28992</wp:comment_id>
			<wp:comment_author><![CDATA[クロックス フラット ウィメン サンダルフラット シューズ]]></wp:comment_author>
			<wp:comment_author_email>hzxdazzvuor@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nepalunites.org/送料無料クロックスcrocs-アドリナ-30-フラット-ウィメンadrina-30-flat-wad-jp-7635.html</wp:comment_author_url>
			<wp:comment_author_IP>76.164.224.60</wp:comment_author_IP>
			<wp:comment_date>2014-09-10 03:28:49</wp:comment_date>
			<wp:comment_date_gmt>2014-09-10 03:28:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For what reason absolutely no one is discussing watch and therefore precisely what you should can do this afternoon.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19411</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Eisenberg]]></wp:comment_author>
			<wp:comment_author_email>rob@bluespire.com</wp:comment_author_email>
			<wp:comment_author_url>http://durandaljs.com</wp:comment_author_url>
			<wp:comment_author_IP>98.230.84.118</wp:comment_author_IP>
			<wp:comment_date>2013-04-18 20:10:05</wp:comment_date>
			<wp:comment_date_gmt>2013-04-18 20:10:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It doesn't appear that you looked very closely at Durandal...I would certainly put it in the same category as Angular and Ember...but I think it let's you write even less code because it establishes some very basic conventions; and it layers everything on top of a very robust module and composition system.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36183</wp:comment_id>
			<wp:comment_author><![CDATA[Payday Loans Today- Accomplish Your Requirements On Probably The Most Effective Same Day Descript...]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://internet-therapie.com/tempecashloan.com-145333.html</wp:comment_author_url>
			<wp:comment_author_IP>192.99.176.19</wp:comment_author_IP>
			<wp:comment_date>2015-01-28 10:23:20</wp:comment_date>
			<wp:comment_date_gmt>2015-01-28 10:23:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Payday Loans Today- Accomplish Your Requirements On Probably The Most Effective Same Day Descript......</strong>

There and Back Again - Thoughts on SPAs « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23657</wp:comment_id>
			<wp:comment_author><![CDATA[Pure Logic Edmonton]]></wp:comment_author>
			<wp:comment_author_email>logangregg@ml1.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.purelogic.ca</wp:comment_author_url>
			<wp:comment_author_IP>184.154.164.74</wp:comment_author_IP>
			<wp:comment_date>2014-03-09 04:38:51</wp:comment_date>
			<wp:comment_date_gmt>2014-03-09 04:38:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great! Continue the good work. :-D]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19413</wp:comment_id>
			<wp:comment_author><![CDATA[Samir]]></wp:comment_author>
			<wp:comment_author_email>samir@imaginesoftware.com.br</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.132.159.214</wp:comment_author_IP>
			<wp:comment_date>2013-04-18 22:32:17</wp:comment_date>
			<wp:comment_date_gmt>2013-04-18 22:32:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank god, I thought I was the only one that was reluctant to embrace the HTML5/JS world because of the diminished capabilities and productivity! I just hope this third generation of tools arrive soon...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72984</wp:comment_id>
			<wp:comment_author><![CDATA[raise money to start a business]]></wp:comment_author>
			<wp:comment_author_email>kina.chuter@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://blahnikrhondab4980.Tumblr.com/</wp:comment_author_url>
			<wp:comment_author_IP>188.240.138.56</wp:comment_author_IP>
			<wp:comment_date>2015-09-22 01:24:14</wp:comment_date>
			<wp:comment_date_gmt>2015-09-22 01:24:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there, its fastidious article on the topic of media 
print, we all know media is a great source of facts.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37861</wp:comment_id>
			<wp:comment_author><![CDATA[aliasy]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://webmdbook.com/index.php?do=/profile-51863/info/</wp:comment_author_url>
			<wp:comment_author_IP>203.91.121.74</wp:comment_author_IP>
			<wp:comment_date>2015-03-03 13:28:03</wp:comment_date>
			<wp:comment_date_gmt>2015-03-03 13:28:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>aliasy...</strong>

There and Back Again - Thoughts on SPAs « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38000</wp:comment_id>
			<wp:comment_author><![CDATA[manali tour packages from delhi]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://pay.haymarketsurgerycenter.com/2014/01/09/hello-world/</wp:comment_author_url>
			<wp:comment_author_IP>120.59.159.41</wp:comment_author_IP>
			<wp:comment_date>2015-03-07 18:53:32</wp:comment_date>
			<wp:comment_date_gmt>2015-03-07 18:53:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>manali tour packages from delhi...</strong>

There and Back Again - Thoughts on SPAs « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79699</wp:comment_id>
			<wp:comment_author><![CDATA[blog kosmetyczka ursynów]]></wp:comment_author>
			<wp:comment_author_email>OlmedaElmore7011@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://insytutbiosphere.pl/kosmetyczka/index.php</wp:comment_author_url>
			<wp:comment_author_IP>217.99.29.212</wp:comment_author_IP>
			<wp:comment_date>2015-11-30 10:17:46</wp:comment_date>
			<wp:comment_date_gmt>2015-11-30 10:17:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do agree with all of the concepts you've offered on your post. They're very convincing and will certainly work. Still, the posts are very brief for starters. May just you please prolong them a little from next time? Thank you for the post.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80565</wp:comment_id>
			<wp:comment_author><![CDATA[matalan promo codes 2014]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.co.uk/vouchers/matalan.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>23.247.207.55</wp:comment_author_IP>
			<wp:comment_date>2016-03-15 17:54:44</wp:comment_date>
			<wp:comment_date_gmt>2016-03-15 17:54:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>matalan promo codes 2014...</strong>

There and Back Again &#8212; Thoughts on SPAs &laquo; Brian Genisio&#039;s House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69427</wp:comment_id>
			<wp:comment_author><![CDATA[info guinee]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://conakrylemag.com/politique</wp:comment_author_url>
			<wp:comment_author_IP>41.250.200.250</wp:comment_author_IP>
			<wp:comment_date>2015-08-30 10:11:34</wp:comment_date>
			<wp:comment_date_gmt>2015-08-30 10:11:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>info guinee...</strong>

There and Back Again - Thoughts on SPAs « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79863</wp:comment_id>
			<wp:comment_author><![CDATA[Pret relais]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.pret.org/credit-relais-20151021-6355</wp:comment_author_url>
			<wp:comment_author_IP>75.171.44.253</wp:comment_author_IP>
			<wp:comment_date>2015-12-21 22:21:26</wp:comment_date>
			<wp:comment_date_gmt>2015-12-21 22:21:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Pret relais...</strong>

There and Back Again - Thoughts on SPAs « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76085</wp:comment_id>
			<wp:comment_author><![CDATA[yuri manga]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mangahunter.com/directory?genre=yuri</wp:comment_author_url>
			<wp:comment_author_IP>23.247.255.77</wp:comment_author_IP>
			<wp:comment_date>2015-10-15 04:43:37</wp:comment_date>
			<wp:comment_date_gmt>2015-10-15 04:43:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>yuri manga...</strong>

There and Back Again - Thoughts on SPAs « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Angular Directives: Demystified</title>
		<link>http://houseofbilz.com/archives/2014/01/16/angular-directives-demystified/</link>
		<pubDate>Thu, 16 Jan 2014 01:06:11 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[At <a href="http://codemash.org/">Codemash</a> this year, I presented "Angular Directives: Demystified".  I expect to record this session soon, but in the meantime, here are the <a href="http://directivesdemystified.herokuapp.com/">slides</a> and the <a href="https://github.com/BrianGenisio/directives">code</a>:]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2014-01-16 01:06:11</wp:post_date>
		<wp:post_date_gmt>2014-01-16 01:06:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>angular-directives-demystified</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33372</wp:comment_id>
			<wp:comment_author><![CDATA[Amir Khan vs Devon Alexander Live Stream]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://82.208.149.138/?a%5B%5D=Amir+khan+vs+devon+alexander+live+stream+-+%3Ca+href%3Dhttps%3A%2F%2FWww.Youtube.com%2Fwatch%3Fv%3DXLy05XilbQw%3Ewww.youtube.com%3C%2Fa%3E+-</wp:comment_author_url>
			<wp:comment_author_IP>204.44.112.82</wp:comment_author_IP>
			<wp:comment_date>2014-12-14 01:27:54</wp:comment_date>
			<wp:comment_date_gmt>2014-12-14 01:27:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Amir Khan vs Devon Alexander Live Stream...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32291</wp:comment_id>
			<wp:comment_author><![CDATA[plely.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.plely.com/story.php?title=dishwasher-repair-parts</wp:comment_author_url>
			<wp:comment_author_IP>92.222.231.154</wp:comment_author_IP>
			<wp:comment_date>2014-11-18 05:57:21</wp:comment_date>
			<wp:comment_date_gmt>2014-11-18 05:57:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>plely.com...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75501</wp:comment_id>
			<wp:comment_author><![CDATA[real estate]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.brownbook.net/business/39181398/gente-casas</wp:comment_author_url>
			<wp:comment_author_IP>172.245.228.203</wp:comment_author_IP>
			<wp:comment_date>2015-10-10 18:12:52</wp:comment_date>
			<wp:comment_date_gmt>2015-10-10 18:12:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>real estate...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74866</wp:comment_id>
			<wp:comment_author><![CDATA[expedia voucher code]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.co.uk/vouchers/expedia/</wp:comment_author_url>
			<wp:comment_author_IP>165.231.8.223</wp:comment_author_IP>
			<wp:comment_date>2015-10-05 18:33:58</wp:comment_date>
			<wp:comment_date_gmt>2015-10-05 18:33:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>expedia voucher code...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34740</wp:comment_id>
			<wp:comment_author><![CDATA[Excellent house modeling]]></wp:comment_author>
			<wp:comment_author_email>ElridgeSales71@outlook.com</wp:comment_author_email>
			<wp:comment_author_url>http://youtu.be/uTGk_C6AeYA</wp:comment_author_url>
			<wp:comment_author_IP>189.205.213.98</wp:comment_author_IP>
			<wp:comment_date>2015-01-11 21:20:04</wp:comment_date>
			<wp:comment_date_gmt>2015-01-11 21:20:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Superb troubles entirely, you merely acquired a new viewer. Exactly what would you advocate of your write-up that you just produced some days before? . Excellent house modelingVirtually any positive?]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57766</wp:comment_id>
			<wp:comment_author><![CDATA[candidate tracking software]]></wp:comment_author>
			<wp:comment_author_email>diana_mcevoy@hotmail.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.employeeapplicanttracking.com</wp:comment_author_url>
			<wp:comment_author_IP>198.55.109.59</wp:comment_author_IP>
			<wp:comment_date>2015-06-30 21:32:22</wp:comment_date>
			<wp:comment_date_gmt>2015-06-30 21:32:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oh my goodness! Incredible article dude! Many thanks, However 
I am going through issues with your RSS. I don't understand the reason why I am unable to subscribe to it.
Is there anybody having similar RSS problems? Anyone who knows the answer can you kindly respond?
Thanx!!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33556</wp:comment_id>
			<wp:comment_author><![CDATA[Venus Legacy treatments nyc]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.yelp.com/biz/bioskin-laser-llc-new-york-2</wp:comment_author_url>
			<wp:comment_author_IP>167.160.115.213</wp:comment_author_IP>
			<wp:comment_date>2014-12-18 15:39:17</wp:comment_date>
			<wp:comment_date_gmt>2014-12-18 15:39:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Venus Legacy treatments nyc...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37445</wp:comment_id>
			<wp:comment_author><![CDATA[apartments in westwood hnb]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://Blog.W5748.net/?p=251</wp:comment_author_url>
			<wp:comment_author_IP>155.94.157.132</wp:comment_author_IP>
			<wp:comment_date>2015-02-23 22:09:53</wp:comment_date>
			<wp:comment_date_gmt>2015-02-23 22:09:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>apartments in westwood hnb...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35236</wp:comment_id>
			<wp:comment_author><![CDATA[immigration lawyer rockville md]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://www.rebelmouse.com/immigrationlawrockville/parva-fattahi-887148773.html</wp:comment_author_url>
			<wp:comment_author_IP>23.94.2.71</wp:comment_author_IP>
			<wp:comment_date>2015-01-18 16:26:51</wp:comment_date>
			<wp:comment_date_gmt>2015-01-18 16:26:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>immigration lawyer rockville md...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73604</wp:comment_id>
			<wp:comment_author><![CDATA[Www.Vouchercodeslug.Co.Uk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.vouchercodeslug.co.uk/homebase-codes</wp:comment_author_url>
			<wp:comment_author_IP>192.119.147.240</wp:comment_author_IP>
			<wp:comment_date>2015-09-26 15:33:12</wp:comment_date>
			<wp:comment_date_gmt>2015-09-26 15:33:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Www.Vouchercodeslug.Co.Uk...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79445</wp:comment_id>
			<wp:comment_author><![CDATA[365bet casino bonus]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.4shared.com/office/ghpiP3KIce/Aruzes_debuts_new_Cube-X_Ultim.html</wp:comment_author_url>
			<wp:comment_author_IP>5.175.105.176</wp:comment_author_IP>
			<wp:comment_date>2015-11-14 12:16:17</wp:comment_date>
			<wp:comment_date_gmt>2015-11-14 12:16:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>365bet casino bonus...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75341</wp:comment_id>
			<wp:comment_author><![CDATA[Alejandro]]></wp:comment_author>
			<wp:comment_author_email>sibylvansickle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://randolphhitybhedea.exteen.com/20150519/curso-de-certificacion-en-google-adwords-en-la-villa-de-madr</wp:comment_author_url>
			<wp:comment_author_IP>119.147.161.55</wp:comment_author_IP>
			<wp:comment_date>2015-10-09 11:28:41</wp:comment_date>
			<wp:comment_date_gmt>2015-10-09 11:28:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Los motores de búsqueda forman el medio más frecuente de entrada de nuevos usuarios a una web, correspondiéndoles aprox.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50248</wp:comment_id>
			<wp:comment_author><![CDATA[City Locksmith Germantown]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://am.abuse.26l.mobi/?url=https://www.youtube.com/watch?v=eJN8qHHkA4w</wp:comment_author_url>
			<wp:comment_author_IP>188.240.143.192</wp:comment_author_IP>
			<wp:comment_date>2015-06-08 02:01:02</wp:comment_date>
			<wp:comment_date_gmt>2015-06-08 02:01:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>City Locksmith Germantown...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80200</wp:comment_id>
			<wp:comment_author><![CDATA[promotional codes for travelodge]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.co.uk/vouchers/travelodge/</wp:comment_author_url>
			<wp:comment_author_IP>107.155.136.229</wp:comment_author_IP>
			<wp:comment_date>2016-01-21 15:59:35</wp:comment_date>
			<wp:comment_date_gmt>2016-01-21 15:59:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>promotional codes for travelodge...</strong>

Angular Directives: Demystified « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>My Blog is moving</title>
		<link>http://houseofbilz.com/archives/2014/09/03/my-blog-is-moving/</link>
		<pubDate>Wed, 03 Sep 2014 18:26:01 +0000</pubDate>
		<dc:creator>HouseOfBilz</dc:creator>
		<guid isPermaLink="false">http://houseofbilz.com/?p=452</guid>
		<description></description>
		<content:encoded><![CDATA[I am in the process of moving my blog over to using <a href="https://help.github.com/articles/using-jekyll-with-pages">Jekyll with Github Pages</a>.  Eventually, as I move all of the content over to markdown, this site will point to the new site.  For the time being, all of my content is here at:
<h2><a href="http://BrianGenisio.com">BrianGenisio.com</a></h2>
Thanks for reading!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>452</wp:post_id>
		<wp:post_date>2014-09-03 18:26:01</wp:post_date>
		<wp:post_date_gmt>2014-09-03 18:26:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-blog-is-moving</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>32809</wp:comment_id>
			<wp:comment_author><![CDATA[antique engagement celtic rings edinburgh]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://teacherclique.com/index.php?do=/profile-94379/info/</wp:comment_author_url>
			<wp:comment_author_IP>83.143.242.76</wp:comment_author_IP>
			<wp:comment_date>2014-11-28 20:06:00</wp:comment_date>
			<wp:comment_date_gmt>2014-11-28 20:06:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>antique engagement celtic rings edinburgh...</strong>

My Blog is moving « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32780</wp:comment_id>
			<wp:comment_author><![CDATA[wiki.technicpack.net]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wiki.technicpack.net/User:PennyWdqsvgs</wp:comment_author_url>
			<wp:comment_author_IP>91.108.180.186</wp:comment_author_IP>
			<wp:comment_date>2014-11-28 04:40:23</wp:comment_date>
			<wp:comment_date_gmt>2014-11-28 04:40:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>wiki.technicpack.net...</strong>

My Blog is moving « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34419</wp:comment_id>
			<wp:comment_author><![CDATA[Enterprise Process Integrator]]></wp:comment_author>
			<wp:comment_author_email>WarnockJovanovic65@yandex.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.accelmation.com/</wp:comment_author_url>
			<wp:comment_author_IP>42.202.146.58</wp:comment_author_IP>
			<wp:comment_date>2015-01-07 14:53:06</wp:comment_date>
			<wp:comment_date_gmt>2015-01-07 14:53:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Really it is a fantastic as well as handy part of details enterprise process integrator. I am grateful that you simply contributed this convenient info along with us. Remember to stop us advised like this. Appreciate expressing.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29489</wp:comment_id>
			<wp:comment_author><![CDATA[Movers in toronto]]></wp:comment_author>
			<wp:comment_author_email>kentmilne@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.perfectionmovers.ca</wp:comment_author_url>
			<wp:comment_author_IP>122.173.123.95</wp:comment_author_IP>
			<wp:comment_date>2014-09-27 13:09:29</wp:comment_date>
			<wp:comment_date_gmt>2014-09-27 13:09:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Definitely believe that which you said. Your favorite justification seemed to be on the internet the 
easiest thing to be aware of. I say to you, I definitely get annoyed 
while people consider worries that they plainly do not know about.

You managed to hit the nail upon the top and defined out 
the whole thing without having side effect , people can take a signal.
Will probably be back to get more. Thanks]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29118</wp:comment_id>
			<wp:comment_author><![CDATA[كيف اتصل بشركة زين]]></wp:comment_author>
			<wp:comment_author_email>rodrigo.carpenter@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://moving103.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>69.12.89.105</wp:comment_author_IP>
			<wp:comment_date>2014-09-16 10:40:35</wp:comment_date>
			<wp:comment_date_gmt>2014-09-16 10:40:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there this is somewhat of off topic but I was wanting to know if blogs use WYSIWYG editors or if you have to manually code 
with HTML. I'm starting a blog soon but have no coding expertise 
so I wanted to get advice from someone with experience.
Any help would be enormously appreciated!

Look at my web-site: <a href="http://moving103.blogspot.com/" rel="nofollow">كيف اتصل بشركة زين</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80703</wp:comment_id>
			<wp:comment_author><![CDATA[www.voucherslug.co.uk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.voucherslug.co.uk/travelodge-codes</wp:comment_author_url>
			<wp:comment_author_IP>45.72.72.46</wp:comment_author_IP>
			<wp:comment_date>2016-03-31 13:23:31</wp:comment_date>
			<wp:comment_date_gmt>2016-03-31 13:23:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>www.voucherslug.co.uk...</strong>

My Blog is moving &laquo; Brian Genisio&#039;s House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80038</wp:comment_id>
			<wp:comment_author><![CDATA[www.Ninjavouchers.co.uk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.ninjavouchers.co.uk/vouchers/matalan.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>216.158.213.34</wp:comment_author_IP>
			<wp:comment_date>2016-01-11 20:38:19</wp:comment_date>
			<wp:comment_date_gmt>2016-01-11 20:38:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>www.Ninjavouchers.co.uk...</strong>

My Blog is moving « Brian Genisio's House of Bilz...]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
</channel>
</rss>
